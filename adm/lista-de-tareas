- (X) Inventario de máquinas virtuales
- (X) Instalación de puppet
- (X) Actualización del script de instalación del tipo cloud (Debe instalarse en la MV neptune)
- (X) Actualización del script de validación de manifiesto para el tipo cloud (Debe instalarse en la MV neptune)
- (X) SSH
- (X) Verificación de mi parser de AppScale
- (X) Instalación de MCollective con plugin para facter
- (X) Ver dónde tiene que ir el servidor Stomp => En una máquina del cloud o en la máquina gestora. Prefiero en el cloud.
- (X) Comprobar que el proveedor cloudp puede usar archivos auxiliares (i.e. appscale-yaml-checker.rb)
- Inicio de un cloud AppScale con un ordenador
  - (X) Control del fichero de descripcion de la MV
  - Control de errores al iniciar MV
- Inicio de un cloud AppScale con la configuración por defecto ( 1 + 3 ) => Control de las copias de la imagen
- Probar Neptune para coger salidas de trabajos
- Envío de archivos (sin usar ssh o scp)
  - (X) MCollective => Como cadena, con Agente y Cliente RPC
  - Puppet => Uso del atributo source (http://docs.puppetlabs.com/module_cheat_sheet.html)
- (X) Configuración de Puppet
  - (X) Maestro en lucid-nep
    - http://www.puppetlogs.com/puppet/%23puppet-2010-11-06.log.html
    - http://comments.gmane.org/gmane.comp.sysutils.puppet.user/36578 (solución del bug)
  - (X) Agentes en lucid-app1 y lucid-app2
- (X) Servidor DNS  => DNSmasq
  - Estudiar el uso de nombres acortados (app1) en fichero dnsmasq.hosts frente a forzar el dominio en el fichero
    resolv.conf del cliente (domain cps.cloud)
  - (X) Comprobar resoluciones de dominio inversas
  - (X) Comprobar que AppScale sigue funcionando: master + open OK
- Asignación de IP concreta a la máquina virtual "por defecto"
  - Servidor DNS + DHCP => DNSmasq
    - http://tecnoloxiaxa.blogspot.com/2008/10/instalar-y-configurar-un-servidor-dns.html
    - http://www.guia-ubuntu.org/index.php?title=Dnsmasq%2C_servidor_DNS_y_DHCP
    - https://help.ubuntu.com/community/Dnsmasq
  - Configurar mediante Puppet => Especificar el contenido del fichero /etc/network/interfaces para cada máquina
- (X) Escribir como disminuir el tamaño de las imágenes de Ubuntu: caché apt, etc
- Comprobar uso de Custom facts para obtener información de AppScale
- Comprobar uso de Puppet nodes para los nodos de AppScale
  - Comprobar, en general, el uso de los tipos de Puppet para adaptarlos a los manifiestos
- Comprobar ejecución de Puppet (nivel 2) desde MCollective
  - Y también la ejecución de Puppet en modo "cron"
- Comprobar estado de la propuesta
- (X) Uso de MCollective para ejecutar comandos de shell => Comandos sencillos como 'whoami', 'ls'
- (X) Uso de invoke-rc.d mcollecive stop en vez de service mcollecive stop en Debian / Ubuntu
  - (X) Si se inicia con /usr/sbin/service mcollecive start, se apaga con /usr/sbin/service mcollecive stop
- (X) Estudiar los ejemplos de Agentes y Clientes de RPC que proporciona MCollective
- (X) SSH de Puppet vs SSH de AppScale: ¿compatibles? => Parece que sí
- Plantillas ERB
  - (X) erb -x -T '-' mycloud-template.xml | ruby -c
  - carla
- (X) Load balancing => nginx
  - HAproxy: http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
  - (X) nginx: http://spin.atomicobject.com/2012/02/28/load-balancing-and-reverse-proxying-with-nginx/
- (X) mysqld => Nombre del proceso es mysql, el ejecutable es /usr/sbin/mysqld
- nginxd?
- (X) Instalación de Puppet en las lucid-web
- Instalación de MCollective en las lucid-web
  - lucid-balancer
  - (X) lucid-server1
  - lucid-server2
  - (X) lucid-database
- Estudiar el uso del parámetro "image_path" para facilitar la especificación de varias imágenes en "images"
- Puppet: rubygems de ubuntu (1.3.5) vs gem --version (1.8.21) ¿Como se especifica la última en un manifiesto Puppet?
- (X) Borrar definición de máquinas en virsh en lote: myvm* , cloud-app-* etc. ¿Se puede? => No
  - => Guardar los nombres de las máquinas definidas en un fichero para poder borrar su definición desde la función stop
- Fichero (XML, YAML) de valores del cloud: numero de nodos, mapa función - IP, nodo líder, mapa id (leader) - IP, etc
  - En vez de un unico fichero, varios: cloud-id, cloud-leader, cloud-last-id, cloud-last-mac, etc
  - También los ficheros del manifiesto, y el manifiesto deben ser copiados: init-cloud.pp, ip_file.yaml, img_file.yaml
- ¿Creación de carpeta /tmp/cloud en la que poner los ficheros: fichero de configuración, cloud-id, cloud-leader, etc?
- Definir como variables globales en el proveedor las rutas (y los nombres?) de estos ficheros
- Comprobar que las máquinas virtuales tienen correctamente:
  - Instalado MCollective
  - El archivo /etc/mcollecive/server.cfg
  - Instalado expect
  - Configurada la clave /root/.ssh/id_rsa.pub
- Si las MV ya estaban funcionando, ¿cómo sabemos qué dominios hay que parar y borrar su definición?
  - No lo sabemos, pero a lo mejor no es muy sensato destruir esas máquinas si ya estaban encendidas de antes
- Asegurarse de que siempre hay un broker AMQP en el cloud
- Asegurarse de iniciar mcollecive en las MVs
- (X) ¿Hace falta borrar los archivos del directorio /tmp de las MV? Si las vamos a apagar, no, pero en caso contrario sí
  - (X) Cliente MCollective
- (X) Comprobar que la generación de IDs es correcta cuando las máquinas virtuales han sido arrancadas a priori
- Elección de líder: MCollective o codificación en LeaderElection?

#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'

module Puppet
  class ParseError < Puppet::Error; end
  class ImportError < Racc::ParseError; end
  class AlreadyImportedError < ImportError; end
end


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..ida9e3f291b7', 'grammar.ra', 782

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:
..end grammar.ra modeval..ida9e3f291b7

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 71, :_reduce_3,
 2, 71, :_reduce_4,
 1, 74, :_reduce_5,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 3, 89, :_reduce_21,
 3, 89, :_reduce_22,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 4, 82, :_reduce_30,
 5, 82, :_reduce_31,
 3, 82, :_reduce_32,
 2, 82, :_reduce_33,
 1, 94, :_reduce_34,
 3, 94, :_reduce_35,
 1, 93, :_reduce_36,
 3, 93, :_reduce_37,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 5, 75, :_reduce_49,
 5, 75, :_reduce_50,
 5, 75, :_reduce_51,
 5, 87, :_reduce_52,
 2, 76, :_reduce_53,
 1, 115, :_reduce_54,
 2, 115, :_reduce_55,
 6, 77, :_reduce_56,
 2, 77, :_reduce_57,
 3, 116, :_reduce_58,
 3, 116, :_reduce_59,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 3, 117, :_reduce_62,
 1, 118, :_reduce_none,
 3, 118, :_reduce_64,
 1, 119, :_reduce_65,
 1, 119, :_reduce_66,
 3, 120, :_reduce_67,
 3, 120, :_reduce_68,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 4, 122, :_reduce_71,
 1, 109, :_reduce_72,
 3, 109, :_reduce_73,
 0, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 107, :_reduce_76,
 1, 99, :_reduce_77,
 1, 100, :_reduce_78,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 3, 78, :_reduce_86,
 3, 78, :_reduce_87,
 3, 88, :_reduce_88,
 0, 111, :_reduce_89,
 1, 111, :_reduce_90,
 3, 111, :_reduce_91,
 3, 125, :_reduce_92,
 3, 126, :_reduce_93,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 0, 114, :_reduce_96,
 1, 114, :_reduce_97,
 3, 114, :_reduce_98,
 4, 106, :_reduce_99,
 3, 106, :_reduce_100,
 1, 98, :_reduce_101,
 2, 98, :_reduce_102,
 2, 128, :_reduce_103,
 1, 129, :_reduce_104,
 2, 129, :_reduce_105,
 1, 101, :_reduce_106,
 4, 92, :_reduce_107,
 4, 92, :_reduce_108,
 2, 80, :_reduce_109,
 5, 130, :_reduce_110,
 4, 130, :_reduce_111,
 0, 131, :_reduce_none,
 2, 131, :_reduce_113,
 4, 131, :_reduce_114,
 3, 131, :_reduce_115,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 96, :_reduce_118,
 3, 96, :_reduce_119,
 3, 96, :_reduce_120,
 3, 96, :_reduce_121,
 3, 96, :_reduce_122,
 3, 96, :_reduce_123,
 3, 96, :_reduce_124,
 3, 96, :_reduce_125,
 3, 96, :_reduce_126,
 2, 96, :_reduce_127,
 3, 96, :_reduce_128,
 3, 96, :_reduce_129,
 3, 96, :_reduce_130,
 3, 96, :_reduce_131,
 3, 96, :_reduce_132,
 3, 96, :_reduce_133,
 2, 96, :_reduce_134,
 3, 96, :_reduce_135,
 3, 96, :_reduce_136,
 3, 96, :_reduce_137,
 5, 79, :_reduce_138,
 1, 134, :_reduce_139,
 2, 134, :_reduce_140,
 5, 135, :_reduce_141,
 4, 135, :_reduce_142,
 1, 136, :_reduce_143,
 3, 136, :_reduce_144,
 3, 102, :_reduce_145,
 1, 138, :_reduce_none,
 4, 138, :_reduce_147,
 1, 140, :_reduce_none,
 3, 140, :_reduce_149,
 3, 139, :_reduce_150,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_159,
 1, 137, :_reduce_none,
 1, 141, :_reduce_161,
 1, 142, :_reduce_none,
 3, 142, :_reduce_163,
 2, 81, :_reduce_164,
 6, 83, :_reduce_165,
 5, 83, :_reduce_166,
 7, 84, :_reduce_167,
 6, 84, :_reduce_168,
 6, 86, :_reduce_169,
 1, 145, :_reduce_170,
 6, 85, :_reduce_171,
 5, 85, :_reduce_172,
 1, 113, :_reduce_173,
 1, 108, :_reduce_174,
 1, 108, :_reduce_175,
 1, 146, :_reduce_176,
 3, 146, :_reduce_177,
 1, 148, :_reduce_178,
 1, 149, :_reduce_179,
 1, 149, :_reduce_180,
 1, 149, :_reduce_181,
 1, 149, :_reduce_none,
 0, 72, :_reduce_183,
 0, 150, :_reduce_184,
 1, 143, :_reduce_none,
 3, 143, :_reduce_186,
 4, 143, :_reduce_187,
 1, 151, :_reduce_none,
 3, 151, :_reduce_189,
 3, 152, :_reduce_190,
 1, 152, :_reduce_191,
 3, 152, :_reduce_192,
 1, 152, :_reduce_193,
 1, 147, :_reduce_none,
 2, 147, :_reduce_195,
 1, 144, :_reduce_none,
 2, 144, :_reduce_197,
 1, 153, :_reduce_none,
 1, 153, :_reduce_none,
 1, 103, :_reduce_200,
 3, 104, :_reduce_201,
 4, 104, :_reduce_202,
 2, 104, :_reduce_203,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 0, 112, :_reduce_none,
 1, 112, :_reduce_207,
 1, 133, :_reduce_208,
 3, 132, :_reduce_209,
 4, 132, :_reduce_210,
 2, 132, :_reduce_211,
 1, 154, :_reduce_none,
 3, 154, :_reduce_213,
 3, 155, :_reduce_214,
 1, 156, :_reduce_215,
 1, 156, :_reduce_216,
 4, 124, :_reduce_217,
 1, 105, :_reduce_none,
 4, 105, :_reduce_219 ]

racc_reduce_n = 220

racc_shift_n = 380

clist = [
'248,249,62,238,76,81,238,151,239,76,81,173,165,185,189,213,337,355,345',
'164,214,225,180,182,186,188,346,76,81,224,164,102,152,76,81,228,229',
'102,270,104,67,269,172,68,242,181,184,172,299,191,192,175,176,178,179',
'100,183,187,341,164,75,340,66,177,89,92,75,306,97,37,89,92,82,38,97',
'305,93,304,82,101,76,81,93,315,102,107,104,66,131,341,76,81,340,66,102',
'55,104,57,213,130,76,81,100,214,134,62,258,228,229,240,58,143,100,75',
'62,-107,37,89,92,320,38,97,303,75,149,82,101,89,92,93,323,97,107,75',
'54,82,101,89,218,93,66,97,107,67,110,202,68,76,81,93,66,102,67,104,299',
'68,327,76,81,-153,66,102,329,104,162,66,131,76,81,100,-107,-107,-107',
'-107,66,131,332,130,-154,100,75,297,134,236,89,92,130,-152,97,-151,75',
'134,82,101,89,92,93,66,97,107,75,66,82,101,89,218,93,66,97,107,131,358',
'202,50,76,81,93,66,102,271,104,130,48,49,76,81,134,66,102,231,232,245',
'28,240,34,1,100,8,12,238,19,37,25,334,30,38,2,75,311,11,236,89,92,231',
'246,97,149,75,222,82,101,89,92,93,165,97,107,247,212,82,7,76,81,93,66',
'102,211,104,-153,37,-157,76,81,119,66,102,339,104,231,362,11,76,81,100',
'264,88,37,233,183,187,38,231,232,100,75,177,261,11,89,92,231,260,97',
'78,75,-155,82,101,89,92,93,163,97,107,75,162,82,101,89,92,93,66,97,107',
'159,-154,82,347,76,81,93,66,102,143,104,349,37,-173,76,81,119,66,102',
'351,104,55,-158,11,76,81,100,-156,102,309,104,183,187,356,76,81,100',
'75,177,268,50,89,92,231,260,97,100,75,-152,82,101,89,92,93,-151,97,107',
'75,57,82,101,89,92,93,66,97,107,75,359,82,101,89,218,93,66,97,107,76',
'81,202,150,149,360,93,66,227,76,81,228,229,102,335,104,143,66,231,232',
'140,191,192,175,176,114,76,81,183,187,102,100,104,75,121,177,114,89',
'218,367,110,97,75,369,236,202,89,92,100,93,97,109,60,59,82,101,-207',
'372,93,75,66,107,53,89,92,47,40,97,378,66,333,82,101,379,,93,,,107,',
'185,189,175,176,,,66,183,187,180,182,186,188,,177,191,192,175,176,,76',
'81,183,187,102,,104,,,177,,,181,184,,,191,192,175,176,178,179,100,183',
'187,76,81,,,102,177,104,,75,,,,89,92,,,97,,,,82,101,100,,93,76,81,107',
',102,,104,,75,,66,,89,92,,,97,76,81,,82,101,100,,93,,,107,43,44,45,41',
',75,,66,,89,92,,,97,,,,82,101,76,81,93,75,102,107,104,89,218,,,97,,66',
',202,,76,81,93,,102,100,104,43,44,45,41,,,66,,,75,,,,89,92,100,,97,',
',,82,101,,,93,75,,107,,89,92,,,97,,66,,82,101,76,81,93,,102,107,104',
',,,76,81,,66,102,,104,,,,76,81,100,,102,,104,-23,-23,-23,-23,,100,75',
',,,89,92,,,97,100,75,,82,101,89,92,93,,97,107,75,,82,101,89,92,93,66',
'97,107,220,,82,101,,,93,66,,107,185,189,-25,-25,-25,-25,,66,,180,182',
'186,188,,76,81,,,102,,76,81,175,176,102,,104,183,187,,,,181,184,177',
',191,192,175,176,178,179,100,183,187,,,75,,,177,89,218,75,,97,,89,92',
'202,,97,,93,,82,101,76,81,93,,102,107,104,66,,,76,81,,66,102,,104,,',
',76,81,100,,102,,,,,,,,100,75,,,,89,92,,,97,,75,,82,101,89,92,93,,97',
'107,75,,82,101,89,207,93,66,97,107,,,202,,76,81,93,66,102,,104,,,,76',
'81,,66,102,,104,,,,76,81,100,,102,161,104,,,,,,100,75,,,,89,92,,,97',
'100,75,,82,101,89,92,93,,97,107,75,,82,101,89,92,93,66,97,107,,,82,101',
'76,81,93,66,102,107,104,,,,,,,66,,,,76,81,,,102,100,104,,,,,,,,,,75',
',,,89,92,100,155,97,,,,82,101,,,93,75,,107,,89,92,,,97,,66,,82,101,76',
'81,93,,102,107,104,,,,76,81,,66,102,,104,,,,76,81,100,,102,,104,,,,76',
'81,100,75,102,,,89,92,,,97,100,75,,82,101,89,92,93,,97,107,75,,82,101',
'89,92,93,66,97,107,75,,82,101,89,218,93,66,97,107,,,202,,76,81,93,66',
'102,,104,,,,76,81,,66,,,,344,,,76,81,100,,102,161,104,,,,,,,75,,,,89',
'92,,,97,100,75,,82,101,89,218,93,,97,107,75,,202,,89,92,93,66,97,,,',
'82,101,76,81,93,66,102,107,104,,,,76,81,,66,102,,104,,,,76,81,100,,102',
',104,,,,,,100,75,,,,89,92,,,97,100,75,,82,101,89,92,93,,97,107,75,,82',
'101,89,92,93,66,97,107,,,82,101,76,81,93,66,102,107,104,,,,76,81,,66',
'102,,104,,,,76,81,100,,102,,104,,,,,,100,75,,,,89,92,,,97,100,75,,82',
'101,89,92,93,,97,107,75,,82,101,89,92,93,66,97,107,,,82,101,76,81,93',
'66,102,107,104,,,,76,81,,66,102,,104,,,,,,100,,,,,,,,,,100,75,,,,89',
'92,,375,97,,75,,82,101,89,92,93,,97,107,,,82,101,,,93,66,28,107,34,1',
',8,12,,19,66,25,190,30,302,2,,,11,,,185,189,,,,,,,,180,182,186,188,',
'28,,34,1,7,8,12,,19,,25,,30,,2,,,11,181,184,,,191,192,175,176,178,179',
',183,187,194,371,,,,177,,7,,185,189,,,,,,,,180,182,186,188,28,,34,1',
',8,12,,19,,25,,30,,2,,,11,326,181,184,,,191,192,175,176,178,179,,183',
'187,,,289,,,177,7,28,,34,1,,8,12,,19,,25,,30,377,2,,28,11,34,1,,8,12',
',19,,25,,30,,2,,,11,28,,34,1,7,8,12,,19,,25,,30,,2,185,189,11,,,7,,',
',180,182,186,188,,,185,189,,,,,,,7,180,182,186,188,,,,,181,184,,,191',
'192,175,176,178,179,,183,187,,,181,184,,177,191,192,175,176,178,179',
',183,187,185,189,,,,177,,,,180,182,186,188,,,185,189,,,,,,,,180,182',
'186,188,,,,,181,184,,,191,192,175,176,178,179,,183,187,,,181,184,,177',
'191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186,188,',
',185,189,,,,,,,,180,182,186,188,,,,,,,,,191,192,175,176,178,179,,183',
'187,,,,,,177,191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180',
'182,186,188,,,185,189,,,,,,,,180,182,186,188,,,,,181,184,,,191,192,175',
'176,178,179,,183,187,,,181,184,,177,191,192,175,176,178,179,,183,187',
'185,189,,,,177,,,267,180,182,186,188,,,185,189,,,,,,,,180,182,186,188',
',,,,181,184,,,191,192,175,176,178,179,,183,187,,,181,184,,177,191,192',
'175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186,188,,,185,189',
',,,,,,,180,182,186,188,,,,,181,184,,,191,192,175,176,178,179,,183,187',
',,,,,177,191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182',
'186,188,,,185,189,,,,,,,,180,182,186,188,,,,,,184,,,191,192,175,176',
'178,179,,183,187,,,181,184,,177,191,192,175,176,178,179,,183,187,185',
'189,,,,177,,,,180,182,186,188,,,,189,,,,,,,,180,,,,,,,,181,184,189,',
'191,192,175,176,178,179,180,183,187,,,,,189,177,191,192,175,176,178',
'179,180,183,187,,,,,,177,,189,,191,192,175,176,178,179,180,183,187,',
',,,,177,191,192,175,176,178,179,,183,187,,,,,,177,,,,191,192,175,176',
'178,179,,183,187,,28,,34,1,177,8,12,,19,,25,,30,28,2,34,1,11,8,12,,19',
',25,,30,,2,,28,11,34,1,,8,12,,19,7,25,,30,,2,,,11,,,,,7,191,192,175',
'176,178,179,,183,187,,,,,,177,7,191,192,175,176,178,179,,183,187,,,',
',,177' ]
racc_action_table = arr = Array.new(2139, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

clist = [
'158,158,152,149,104,104,207,63,144,269,269,104,92,158,158,306,269,307',
'294,207,306,129,158,158,158,158,294,329,329,129,92,329,63,340,340,144',
'144,340,169,340,152,169,104,152,149,158,158,269,219,158,158,158,158',
'158,158,340,158,158,289,218,329,289,152,158,329,329,340,216,329,12,340',
'340,329,12,340,215,329,214,340,340,225,225,340,226,225,340,225,329,230',
'339,234,234,339,340,234,14,234,14,114,230,159,159,225,114,230,151,159',
'226,226,235,14,236,234,225,19,261,1,225,225,237,1,225,213,234,240,225',
'225,234,234,225,241,234,225,159,14,234,234,159,159,234,225,159,234,151',
'211,159,151,238,238,159,234,238,19,238,210,19,246,242,242,209,159,242',
'255,242,205,151,58,364,364,238,261,261,261,261,19,131,260,58,203,242',
'238,200,58,198,238,238,131,196,238,195,242,131,238,238,242,242,238,187',
'242,238,364,183,242,242,364,364,242,238,364,242,54,309,364,8,162,162',
'364,242,162,171,162,54,8,8,163,163,54,364,163,265,265,153,309,146,309',
'309,162,309,309,143,309,222,309,265,309,222,309,162,222,309,141,162',
'162,156,156,162,140,163,126,162,162,163,163,162,119,163,162,156,113',
'163,309,164,164,163,162,164,112,164,98,42,96,248,248,42,163,248,288',
'248,331,331,42,25,25,164,164,25,20,138,273,273,20,138,138,248,164,273',
'160,20,164,164,160,160,164,25,248,94,164,164,248,248,164,91,248,164',
'25,90,248,248,25,25,248,164,25,248,86,85,25,296,28,28,25,248,28,297',
'28,298,51,82,30,30,51,25,30,301,30,80,79,51,165,165,28,77,165,221,165',
'272,272,308,258,258,30,28,272,168,75,28,28,168,168,28,165,30,74,28,28',
'30,30,28,72,30,28,165,69,30,30,165,165,30,28,165,30,258,318,165,165',
'258,258,165,30,258,165,345,345,258,60,59,325,258,165,135,224,224,135',
'135,224,266,224,57,258,266,266,56,275,275,275,275,52,175,175,275,275',
'175,224,175,345,46,275,39,345,345,341,34,345,224,346,348,345,224,224',
'175,345,224,31,18,16,224,224,362,363,224,175,345,224,13,175,175,7,2',
'175,374,224,262,175,175,376,,175,,,175,,262,262,291,291,,,175,291,291',
'262,262,262,262,,291,276,276,276,276,,48,48,276,276,48,,48,,,276,,,262',
'262,,,262,262,262,262,262,262,48,262,262,49,49,,,49,262,49,,48,,,,48',
'48,,,48,,,,48,48,49,,48,50,50,48,,50,,50,,49,,48,,49,49,,,49,194,194',
',49,49,50,,49,,,49,5,5,5,5,,50,,49,,50,50,,,50,,,,50,50,176,176,50,194',
'176,50,176,194,194,,,194,,50,,194,,53,53,194,,53,176,53,9,9,9,9,,,194',
',,176,,,,176,176,53,,176,,,,176,176,,,176,53,,176,,53,53,,,53,,176,',
'53,53,192,192,53,,192,53,192,,,,55,55,,53,55,,55,,,,191,191,192,,191',
',191,33,33,33,33,,55,192,,,,192,192,,,192,191,55,,192,192,55,55,192',
',55,192,191,,55,55,191,191,55,192,191,55,124,,191,191,,,191,55,,191',
'124,124,4,4,4,4,,191,,124,124,124,124,,121,121,,,121,,189,189,290,290',
'189,,189,290,290,,,,124,124,290,,124,124,124,124,124,124,189,124,124',
',,121,,,124,121,121,189,,121,,189,189,121,,189,,121,,189,189,101,101',
'189,,101,189,101,121,,,188,188,,189,188,,188,,,,109,109,101,,109,,,',
',,,,188,101,,,,101,101,,,101,,188,,101,101,188,188,101,,188,101,109',
',188,188,109,109,188,101,109,188,,,109,,107,107,109,188,107,,107,,,',
'178,178,,109,178,,178,,,,102,102,107,,102,102,102,,,,,,178,107,,,,107',
'107,,,107,102,178,,107,107,178,178,107,,178,107,102,,178,178,102,102',
'178,107,102,178,,,102,102,271,271,102,178,271,102,271,,,,,,,102,,,,78',
'78,,,78,271,78,,,,,,,,,,271,,,,271,271,78,78,271,,,,271,271,,,271,78',
',271,,78,78,,,78,,271,,78,78,304,304,78,,304,78,304,,,,303,303,,78,303',
',303,,,,81,81,304,,81,,81,,,,299,299,303,304,299,,,304,304,,,304,81',
'303,,304,304,303,303,304,,303,304,81,,303,303,81,81,303,304,81,303,299',
',81,81,299,299,81,303,299,81,,,299,,186,186,299,81,186,,186,,,,292,292',
',299,,,,292,,,88,88,186,,88,88,88,,,,,,,186,,,,186,186,,,186,88,292',
',186,186,292,292,186,,292,186,88,,292,,88,88,292,186,88,,,,88,88,185',
'185,88,292,185,88,185,,,,184,184,,88,184,,184,,,,182,182,185,,182,,182',
',,,,,184,185,,,,185,185,,,185,182,184,,185,185,184,184,185,,184,185',
'182,,184,184,182,182,184,185,182,184,,,182,182,181,181,182,184,181,182',
'181,,,,180,180,,182,180,,180,,,,179,179,181,,179,,179,,,,,,180,181,',
',,181,181,,,181,179,180,,181,181,180,180,181,,180,181,179,,180,180,179',
'179,180,181,179,180,,,179,179,100,100,179,180,100,179,100,,,,177,177',
',179,177,,177,,,,,,100,,,,,,,,,,177,100,,,,100,100,,367,100,,177,,100',
'100,177,177,100,,177,100,,,177,177,,,177,100,367,177,367,367,,367,367',
',367,177,367,105,367,212,367,,,367,,,105,105,,,,,,,,105,105,105,105',
',212,,212,212,367,212,212,,212,,212,,212,,212,,,212,105,105,,,105,105',
'105,105,105,105,,105,105,108,357,,,,105,,212,,108,108,,,,,,,,108,108',
'108,108,357,,357,357,,357,357,,357,,357,,357,,357,,,357,245,108,108',
',,108,108,108,108,108,108,,108,108,,,190,,,108,357,245,,245,245,,245',
'245,,245,,245,,245,369,245,,190,245,190,190,,190,190,,190,,190,,190',
',190,,,190,369,,369,369,245,369,369,,369,,369,,369,,369,338,338,369',
',,190,,,,338,338,338,338,,,122,122,,,,,,,369,122,122,122,122,,,,,338',
'338,,,338,338,338,338,338,338,,338,338,,,122,122,,338,122,122,122,122',
'122,122,,122,122,123,123,,,,122,,,,123,123,123,123,,,321,321,,,,,,,',
'321,321,321,321,,,,,123,123,,,123,123,123,123,123,123,,123,123,,,321',
'321,,123,321,321,321,321,321,321,,321,321,281,281,,,,321,,,,281,281',
'281,281,,,313,313,,,,,,,,313,313,313,313,,,,,,,,,281,281,281,281,281',
'281,,281,281,,,,,,281,313,313,313,313,313,313,,313,313,324,324,,,,313',
',,,324,324,324,324,,,127,127,,,,,,,,127,127,127,127,,,,,324,324,,,324',
'324,324,324,324,324,,324,324,,,127,127,,324,127,127,127,127,127,127',
',127,127,166,166,,,,127,,,166,166,166,166,166,,,352,352,,,,,,,,352,352',
'352,352,,,,,166,166,,,166,166,166,166,166,166,,166,166,,,352,352,,166',
'352,352,352,352,352,352,,352,352,353,353,,,,352,,,,353,353,353,353,',
',314,314,,,,,,,,314,314,314,314,,,,,353,353,,,353,353,353,353,353,353',
',353,353,,,,,,353,314,314,314,314,314,314,,314,314,278,278,,,,314,,',
',278,278,278,278,,,317,317,,,,,,,,317,317,317,317,,,,,,278,,,278,278',
'278,278,278,278,,278,278,,,317,317,,278,317,317,317,317,317,317,,317',
'317,139,139,,,,317,,,,139,139,139,139,,,,285,,,,,,,,285,,,,,,,,139,139',
'282,,139,139,139,139,139,139,282,139,139,,,,,283,139,285,285,285,285',
'285,285,283,285,285,,,,,,285,,279,,282,282,282,282,282,282,279,282,282',
',,,,,282,283,283,283,283,283,283,,283,283,,,,,,283,,,,279,279,279,279',
'279,279,,279,279,,0,,0,0,279,0,0,,0,,0,,0,22,0,22,22,0,22,22,,22,,22',
',22,,22,,287,22,287,287,,287,287,,287,0,287,,287,,287,,,287,,,,,22,286',
'286,286,286,286,286,,286,286,,,,,,286,287,277,277,277,277,277,277,,277',
'277,,,,,,277' ]
racc_action_check = arr = Array.new(2139, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

racc_action_pointer = [
  2026,    80,   433,   nil,   684,   526,   nil,   436,   207,   569,
   nil,   nil,    33,   458,    89,   nil,   456,   nil,   463,   112,
   260,   nil,  2039,   nil,   nil,   289,   nil,   nil,   336,   nil,
   346,   454,   nil,   636,   449,   nil,   nil,   nil,   nil,   423,
   nil,   nil,   243,   nil,   nil,   nil,   437,   nil,   509,   534,
   559,   310,   412,   623,   186,   680,   423,   387,   142,   375,
   414,   nil,   nil,    -5,   nil,   nil,   nil,   nil,   nil,   384,
   nil,   nil,   365,   nil,   359,   368,   nil,   338,   961,   333,
   349,  1028,   341,   nil,   nil,   312,   311,   nil,  1105,   nil,
   319,   309,     6,   nil,   292,   nil,   257,   nil,   255,   nil,
  1286,   810,   897,   nil,     2,  1352,   nil,   877,  1406,   830,
   nil,   nil,   264,   260,    63,   nil,   nil,   nil,   nil,   258,
   nil,   757,  1522,  1567,   728,   nil,   221,  1702,   nil,     3,
   nil,   151,   nil,   nil,   nil,   373,   nil,   nil,   290,  1927,
   216,   238,   nil,   228,   -14,   nil,   221,   nil,   nil,    -8,
   nil,   103,     0,   223,   nil,   nil,   242,   nil,    -4,    98,
   299,   nil,   212,   222,   269,   356,  1747,   nil,   366,    29,
   nil,   208,   nil,   nil,   nil,   435,   606,  1296,   887,  1239,
  1229,  1219,  1172,   139,  1162,  1152,  1085,   135,   820,   763,
  1461,   690,   670,   nil,   576,   166,   164,   nil,   171,   nil,
   161,   nil,   nil,   155,   nil,   158,   nil,    -5,   nil,   136,
   113,   142,  1353,   107,    62,    50,    55,   nil,    35,     7,
   nil,   355,   205,   nil,   418,    78,    58,   nil,   nil,   nil,
    64,   nil,   nil,   nil,    88,    97,    71,   110,   145,   nil,
    84,   121,   155,   nil,   nil,  1445,   131,   nil,   279,   nil,
   nil,   nil,   nil,   nil,   nil,   151,   nil,   nil,   366,   nil,
   169,   107,   474,   nil,   nil,   218,   418,   nil,   nil,     7,
   nil,   944,   305,   238,   nil,   379,   453,  2071,  1867,  1993,
   nil,  1627,  1960,  1975,   nil,  1942,  2055,  2055,   277,    27,
   712,   438,  1095,   nil,     6,   nil,   328,   303,   336,  1038,
   nil,   344,   nil,  1018,  1008,   nil,   -20,    -8,   358,   202,
   nil,   nil,   nil,  1642,  1822,   nil,   nil,  1882,   393,   nil,
   nil,  1582,   nil,   nil,  1687,   407,   nil,   nil,   nil,    25,
   nil,   277,   nil,   nil,   nil,   nil,   nil,   nil,  1507,    58,
    31,   442,   nil,   nil,   nil,   409,   446,   nil,   443,   nil,
   nil,   nil,  1762,  1807,   nil,   nil,   nil,  1406,   nil,   nil,
   nil,   nil,   458,   459,   165,   nil,   nil,  1319,   nil,  1479,
   nil,   nil,   nil,   nil,   470,   nil,   475,   nil,   nil,   nil ]

racc_action_default = [
  -183,  -220,   -54,   -19,    -8,   -20,    -9,  -220,  -220,  -220,
   -10,  -173,  -175,  -220,  -220,   -11,   -24,   -12,  -220,  -220,
  -220,   -13,    -1,   -14,    -2,  -174,   -15,    -3,  -220,   -16,
  -220,  -220,   -17,    -6,  -220,   -18,    -7,  -175,  -174,  -183,
   -55,   -29,  -220,   -26,   -27,   -28,  -220,  -170,  -220,  -220,
  -220,  -220,  -183,  -220,  -183,  -220,   -57,   -89,  -183,   -96,
  -220,  -182,  -180,  -183,  -176,  -178,  -208,  -179,  -181,  -220,
   -53,    -4,   -39,  -160,   -40,  -200,  -101,   -41,  -220,  -218,
  -220,  -220,   -78,   -42,   -46,   -43,  -220,   -44,  -220,  -106,
   -45,   -33,   -77,   -76,   -47,   -34,   -48,  -159,   -38,  -117,
  -220,  -220,  -220,  -116,  -220,  -220,  -109,  -220,  -220,   -89,
  -161,  -162,  -164,  -220,  -184,  -185,   -25,   -22,   -24,  -174,
   -23,  -220,   -86,   -88,  -220,   -21,  -183,   -87,   -70,  -220,
  -200,  -183,   -69,   -60,   -77,  -220,   -61,   -63,  -220,   -36,
   -96,  -206,   -90,  -220,  -220,   -94,  -206,   -95,   -97,  -220,
   380,  -220,  -220,  -220,  -194,   -32,  -220,  -102,  -220,  -220,
  -220,  -203,  -220,  -220,  -220,  -220,  -220,  -134,  -220,  -220,
  -212,  -220,  -215,  -211,  -216,  -220,  -220,  -220,  -220,  -220,
  -220,  -220,  -220,  -220,  -220,  -220,  -220,  -220,  -220,  -220,
  -220,  -220,  -220,  -127,  -220,   -80,   -81,   -72,  -206,  -156,
  -220,   -82,   -78,   -83,   -84,   -85,  -155,   -77,  -157,   -79,
   -74,  -220,  -220,  -193,  -191,  -220,  -206,  -188,   -77,   -74,
  -217,  -220,  -220,  -196,  -220,  -220,  -220,   -58,   -66,   -65,
  -220,  -204,  -205,  -108,  -220,  -206,  -207,  -220,  -220,   -59,
  -207,  -220,  -220,  -177,  -195,  -220,  -205,   -30,  -220,  -104,
  -103,  -151,  -152,  -158,  -154,  -220,  -145,  -146,  -220,  -153,
  -205,  -201,  -220,   -35,  -100,  -220,  -220,  -137,  -201,  -220,
  -209,  -220,  -124,  -123,  -118,  -125,  -126,  -129,  -136,  -131,
  -119,  -135,  -133,  -130,  -120,  -132,  -128,    -5,  -220,  -112,
  -121,  -122,  -220,  -139,  -220,  -143,  -220,   -89,  -220,   -75,
  -163,  -220,  -166,  -220,  -220,  -186,  -207,  -220,  -220,  -220,
  -198,  -199,  -197,   -67,   -68,   -64,   -62,   -37,  -220,   -91,
   -51,   -92,   -98,   -52,   -93,  -220,  -172,   -31,  -105,  -220,
  -148,  -206,  -202,  -219,   -99,  -107,  -213,  -210,  -214,  -112,
  -220,  -220,  -111,  -140,  -138,  -220,  -220,   -50,  -206,   -49,
   -73,  -165,  -192,  -190,  -189,  -187,  -169,  -220,  -168,   -56,
  -171,  -150,  -205,  -220,  -220,  -110,  -113,  -220,  -144,  -220,
   -71,  -167,  -147,  -149,  -220,  -115,  -220,  -142,  -114,  -141 ]

racc_goto_table = [
    16,    13,    71,   106,    14,    22,   217,    95,    39,   205,
   141,   111,   157,   128,   105,   204,   108,   128,   257,    52,
   170,   205,    16,    13,    69,    64,    14,   204,   201,   293,
    70,   146,    24,   132,   122,   123,   124,   132,   210,   127,
   201,   342,   118,   174,   145,   113,    14,   256,   209,   237,
   219,   118,   120,   135,   241,    14,   288,   144,   126,   250,
   209,   120,   198,   298,   116,   206,   117,   158,   195,    91,
   196,   115,   308,   116,   292,   125,   322,   206,   301,    42,
   195,   331,   196,    51,   115,   364,   166,   167,   203,   112,
   128,   365,   350,   193,   221,   154,    46,   255,   259,    63,
   203,   153,   316,   244,   215,   216,   296,    56,    61,   312,
   132,   325,   235,   169,    18,   206,   nil,   330,   251,   nil,
   252,   nil,   nil,   nil,   307,   145,   nil,   343,   nil,   nil,
   226,   nil,   295,   259,   nil,   nil,   nil,   nil,   254,   nil,
   nil,   nil,   nil,   318,   nil,   263,   nil,   nil,   262,   nil,
   206,   nil,   nil,   251,   nil,   252,   nil,   243,   223,   nil,
   253,   272,   273,   274,   275,   276,   277,   278,   279,   nil,
   281,   282,   283,   254,   285,   286,   nil,   290,   291,   328,
   nil,   nil,   nil,   nil,   nil,   336,   nil,   nil,   300,   128,
    16,    13,   208,   nil,    14,   253,   255,   259,   354,   205,
   nil,   nil,   nil,   nil,   208,   204,   nil,   nil,   174,   132,
   313,   314,    16,    13,   206,   199,    14,   251,   201,   252,
   317,   319,   nil,   373,   321,   145,   nil,   199,   324,   310,
   295,   259,   nil,   374,   158,   376,   nil,   254,   209,   363,
    61,    61,   208,   nil,   nil,    16,    13,   nil,   206,    14,
   348,   251,   nil,   252,   nil,   206,   370,   338,   195,   253,
   196,   nil,   nil,   nil,   nil,   199,   nil,    71,   nil,   nil,
   nil,   254,   280,   nil,   138,   nil,   284,   208,   203,   nil,
   nil,   nil,   nil,   368,   259,   nil,   nil,    16,    13,   352,
   353,    14,   nil,   253,   nil,   nil,   nil,   156,   nil,   nil,
   199,   206,   255,   259,   251,   nil,   252,   160,   nil,    16,
    13,   361,   nil,    14,   357,   366,   nil,   nil,   nil,   nil,
   206,   168,   nil,   251,   254,   252,   105,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,   nil,
   nil,   208,   nil,   254,   nil,   nil,   253,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,    13,   nil,
   nil,    14,   nil,   nil,   199,   253,   nil,    16,    13,    16,
    13,    14,   nil,    14,   nil,   208,   nil,   nil,   nil,   nil,
   nil,   nil,   208,   265,   266,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   199,   nil,
   nil,   nil,   nil,   nil,   nil,   199,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   208,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   208,   nil,   nil,
   nil,   199,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   199 ]

racc_goto_check = [
    23,    55,     4,    61,    44,     2,    83,    26,    39,    36,
    42,    72,    59,    30,    27,    35,    27,    30,    70,    39,
    86,    36,    23,    55,    44,    79,    44,    35,    33,    66,
     6,    45,     3,    34,    27,    27,    27,    34,    40,    27,
    33,    62,    23,    29,    56,    74,    44,    69,    29,    43,
    40,    23,     6,    48,    43,    44,     5,    48,    74,    60,
    29,     6,    42,    41,     8,    37,    21,    27,    30,    25,
    31,     3,    41,     8,    65,    21,    58,    37,     5,    22,
    30,    71,    31,    22,     3,    28,    27,    27,    34,    73,
    30,    62,    53,    27,    75,     3,    76,    68,    29,    77,
    34,    78,    49,    80,    81,    82,    43,    47,    64,    84,
    34,     5,    45,    85,     1,    37,   nil,    70,    30,   nil,
    31,   nil,   nil,   nil,    43,    56,   nil,    66,   nil,   nil,
    48,   nil,    68,    29,   nil,   nil,   nil,   nil,    34,   nil,
   nil,   nil,   nil,    43,   nil,    26,   nil,   nil,    27,   nil,
    37,   nil,   nil,    30,   nil,    31,   nil,    79,     3,   nil,
    55,    27,    27,    27,    27,    27,    27,    27,    27,   nil,
    27,    27,    27,    34,    27,    27,   nil,    27,    27,    59,
   nil,   nil,   nil,   nil,   nil,    86,   nil,   nil,    72,    30,
    23,    55,    38,   nil,    44,    55,    68,    29,    83,    36,
   nil,   nil,   nil,   nil,    38,    35,   nil,   nil,    29,    34,
    27,    27,    23,    55,    37,    32,    44,    30,    33,    31,
    27,    56,   nil,    70,    27,    56,   nil,    32,    27,    39,
    68,    29,   nil,     5,    27,     5,   nil,    34,    29,    43,
    64,    64,    38,   nil,   nil,    23,    55,   nil,    37,    44,
    42,    30,   nil,    31,   nil,    37,    43,    27,    30,    55,
    31,   nil,   nil,   nil,   nil,    32,   nil,     4,   nil,   nil,
   nil,    34,    64,   nil,    24,   nil,    64,    38,    34,   nil,
   nil,   nil,   nil,    68,    29,   nil,   nil,    23,    55,    27,
    27,    44,   nil,    55,   nil,   nil,   nil,    24,   nil,   nil,
    32,    37,    68,    29,    30,   nil,    31,    24,   nil,    23,
    55,    26,   nil,    44,     2,    61,   nil,   nil,   nil,   nil,
    37,    24,   nil,    30,    34,    31,    27,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,
   nil,    38,   nil,    34,   nil,   nil,    55,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    23,    55,   nil,
   nil,    44,   nil,   nil,    32,    55,   nil,    23,    55,    23,
    55,    44,   nil,    44,   nil,    38,   nil,   nil,   nil,   nil,
   nil,   nil,    38,    24,    24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    32,   nil,
   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,   nil,   nil,
   nil,    32,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    32 ]

racc_goto_pointer = [
   nil,   114,     5,    32,   -20,  -134,    10,   nil,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    24,    74,     0,   219,    44,   -18,   -14,  -246,   -61,
   -41,   -39,   106,   -81,   -21,   -94,  -100,   -44,    83,     7,
   -71,  -147,   -47,   -92,     4,   -28,   nil,    93,    -1,  -128,
   nil,   nil,   nil,  -207,   nil,     1,   -15,   nil,  -164,   -69,
   -99,   -25,  -248,   nil,    89,  -120,  -165,   nil,   -62,  -112,
  -141,  -177,   -23,    55,     6,   -32,    89,    80,    38,     6,
   -49,   -10,    -9,  -108,  -113,     9,   -84,   nil ]

racc_goto_default = [
   nil,   nil,   287,   133,    27,   nil,    33,    36,     4,     6,
    10,    15,    17,    21,    23,    26,    29,    32,    35,     3,
     5,     9,   nil,    84,   nil,   nil,   103,   139,   234,    98,
    72,    74,    77,    83,    85,    87,    90,    94,    96,    31,
   nil,   nil,   nil,   nil,    80,   nil,    20,   nil,   nil,   136,
   230,   137,   129,   197,   200,    79,   142,   147,   148,   nil,
   nil,   nil,   nil,    99,    73,   nil,   nil,   294,    86,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    65,   nil,   nil,   nil,   nil,   nil,   nil,   171 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :STRING => 2,
 :DQPRE => 3,
 :DQMID => 4,
 :DQPOST => 5,
 :LBRACK => 6,
 :RBRACK => 7,
 :LBRACE => 8,
 :RBRACE => 9,
 :SYMBOL => 10,
 :FARROW => 11,
 :COMMA => 12,
 :TRUE => 13,
 :FALSE => 14,
 :EQUALS => 15,
 :APPENDS => 16,
 :LESSEQUAL => 17,
 :NOTEQUAL => 18,
 :DOT => 19,
 :COLON => 20,
 :LLCOLLECT => 21,
 :RRCOLLECT => 22,
 :QMARK => 23,
 :LPAREN => 24,
 :RPAREN => 25,
 :ISEQUAL => 26,
 :GREATEREQUAL => 27,
 :GREATERTHAN => 28,
 :LESSTHAN => 29,
 :IF => 30,
 :ELSE => 31,
 :IMPORT => 32,
 :DEFINE => 33,
 :ELSIF => 34,
 :VARIABLE => 35,
 :CLASS => 36,
 :INHERITS => 37,
 :NODE => 38,
 :BOOLEAN => 39,
 :NAME => 40,
 :SEMIC => 41,
 :CASE => 42,
 :DEFAULT => 43,
 :AT => 44,
 :LCOLLECT => 45,
 :RCOLLECT => 46,
 :CLASSREF => 47,
 :NOT => 48,
 :OR => 49,
 :AND => 50,
 :UNDEF => 51,
 :PARROW => 52,
 :PLUS => 53,
 :MINUS => 54,
 :TIMES => 55,
 :DIV => 56,
 :LSHIFT => 57,
 :RSHIFT => 58,
 :UMINUS => 59,
 :MATCH => 60,
 :NOMATCH => 61,
 :REGEX => 62,
 :IN_EDGE => 63,
 :OUT_EDGE => 64,
 :IN_EDGE_SUB => 65,
 :OUT_EDGE_SUB => 66,
 :IN => 67,
 :CLOUDRES => 68 }

racc_use_result_var = true

racc_nt_base = 69

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'STRING',
'DQPRE',
'DQMID',
'DQPOST',
'LBRACK',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'MATCH',
'NOMATCH',
'REGEX',
'IN_EDGE',
'OUT_EDGE',
'IN_EDGE_SUB',
'OUT_EDGE_SUB',
'IN',
'CLOUDRES',
'$start',
'program',
'statements_and_declarations',
'nil',
'statement_or_declaration',
'statements',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement_begin',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'cloudres',
'resourceoverride',
'append',
'relationship',
'relationship_side',
'edge',
'resourceref',
'expressions',
'funcvalues',
'rvalue',
'expression',
'comma',
'quotedtext',
'name',
'type',
'boolean',
'selector',
'variable',
'array',
'hasharrayaccesses',
'funcrvalue',
'undef',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'resourceinst',
'resourcename',
'hasharrayaccess',
'param',
'addparam',
'anyparam',
'dqrval',
'dqtail',
'ifstatement',
'else',
'hash',
'regex',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'string',
'strings',
'argumentlist',
'classparent',
'cloudclass',
'hostnames',
'nodeparent',
'nodename',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault',
'hashpairs',
'hashpair',
'key']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

module_eval <<'.,.,', 'grammar.ra', 37
  def _reduce_3( val, _values, result )
    result = ast AST::ASTArray, :children => (val[0] ? [val[0]] : [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 43
  def _reduce_4( val, _values, result )
    if val[1]
      val[0].push(val[1])
    end
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 55
  def _reduce_5( val, _values, result )
  val[0].each do |stmt|
    if stmt.is_a?(AST::TopLevelConstruct)
      error "Classes, definitions, and nodes may only appear at toplevel or inside other classes", \
          :line => stmt.context[:line], :file => stmt.context[:file]
    end
  end
  result = val[0]
   result
  end
.,.,

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

module_eval <<'.,.,', 'grammar.ra', 76
  def _reduce_21( val, _values, result )
  result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 79
  def _reduce_22( val, _values, result )
    result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

 # reduce 23 omitted

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_30( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 98
  def _reduce_31( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_32( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 111
  def _reduce_33( val, _values, result )
    result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[1],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 112
  def _reduce_34( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 118
  def _reduce_35( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 119
  def _reduce_36( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 120
  def _reduce_37( val, _values, result )
 result = val[0].push(val[2])
   result
  end
.,.,

 # reduce 38 omitted

 # reduce 39 omitted

 # reduce 40 omitted

 # reduce 41 omitted

 # reduce 42 omitted

 # reduce 43 omitted

 # reduce 44 omitted

 # reduce 45 omitted

 # reduce 46 omitted

 # reduce 47 omitted

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 140
  def _reduce_49( val, _values, result )
     puts "Syntax 1"
     @lexer.commentpop
     result = ast(AST::Resource, :type => val[0], :instances => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 144
  def _reduce_50( val, _values, result )
     # This is a deprecated syntax.
     error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 150
  def _reduce_51( val, _values, result )
     puts "Syntax 2"
     # a defaults setting for a type
     @lexer.commentpop
     result = ast(AST::ResourceDefaults, :type => val[0], :parameters => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 156
  def _reduce_52( val, _values, result )
  @lexer.commentpop
  result = ast AST::ResourceOverride, :object => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_53( val, _values, result )
  type = val[0]

  if (type == :exported and ! Puppet[:storeconfigs])
    Puppet.warning addcontext("You cannot collect without storeconfigs being set")
  end

  error "Defaults are not virtualizable" if val[1].is_a? AST::ResourceDefaults

  method = type.to_s + "="

  # Just mark our resource as exported and pass it through.
  val[1].send(method, true)

  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_54( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 177
  def _reduce_55( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 200
  def _reduce_56( val, _values, result )
  @lexer.commentpop
  Puppet.warning addcontext("Collection names must now be capitalized") if val[0] =~ /^[a-z]/
  type = val[0].downcase
  args = {:type => type}

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  args[:override] = val[3]
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 219
  def _reduce_57( val, _values, result )
    if val[0] =~ /^[a-z]/
    Puppet.warning addcontext("Collection names must now be capitalized")
  end
  type = val[0].downcase
  args = {:type => type }

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 229
  def _reduce_58( val, _values, result )
  if val[1]
    result = val[1]
    result.form = :virtual
  else
    result = :virtual
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 237
  def _reduce_59( val, _values, result )
    if val[1]
    result = val[1]
    result.form = :exported
  else
    result = :exported
  end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 245
  def _reduce_62( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'grammar.ra', 251
  def _reduce_64( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_65( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 253
  def _reduce_66( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 260
  def _reduce_67( val, _values, result )
  result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
  #result = ast AST::CollExpr
  #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 265
  def _reduce_68( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 272
  def _reduce_71( val, _values, result )
  result = ast AST::ResourceInstance, :title => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_72( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 278
  def _reduce_73( val, _values, result )
    val[0].push val[2]
    result = val[0]
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

module_eval <<'.,.,', 'grammar.ra', 285
  def _reduce_76( val, _values, result )
  result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 289
  def _reduce_77( val, _values, result )
  result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 293
  def _reduce_78( val, _values, result )
  result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

module_eval <<'.,.,', 'grammar.ra', 308
  def _reduce_86( val, _values, result )
  raise Puppet::ParseError, "Cannot assign to variables in other namespaces" if val[0][:value] =~ /::/
  # this is distinct from referencing a variable
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_87( val, _values, result )
    result = ast AST::VarDef, :name => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_88( val, _values, result )
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 321
  def _reduce_89( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 321
  def _reduce_90( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 326
  def _reduce_91( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 330
  def _reduce_92( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 335
  def _reduce_93( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
    :add => true
   result
  end
.,.,

 # reduce 94 omitted

 # reduce 95 omitted

module_eval <<'.,.,', 'grammar.ra', 343
  def _reduce_96( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 343
  def _reduce_97( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 348
  def _reduce_98( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 356
  def _reduce_99( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => val[2],
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_100( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 362
  def _reduce_101( val, _values, result )
 result = ast AST::String, :value => val[0][:value],                  :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 363
  def _reduce_102( val, _values, result )
 result = ast AST::Concat, :value => [ast(AST::String,val[0])]+val[1], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 365
  def _reduce_103( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 367
  def _reduce_104( val, _values, result )
 result = [ast(AST::String,val[0])]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 368
  def _reduce_105( val, _values, result )
 result = [ast(AST::String,val[0])] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 373
  def _reduce_106( val, _values, result )
  result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 378
  def _reduce_107( val, _values, result )
  Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
  result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 380
  def _reduce_108( val, _values, result )
  result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 384
  def _reduce_109( val, _values, result )
  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 396
  def _reduce_110( val, _values, result )
  @lexer.commentpop
  args = {
    :test => val[0],
    :statements => val[2]
  }

  args[:else] = val[4] if val[4]

  result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 407
  def _reduce_111( val, _values, result )
    @lexer.commentpop
    args = {
      :test => val[0],
      :statements => ast(AST::Nop)
  }

  args[:else] = val[3] if val[3]

  result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 412
  def _reduce_113( val, _values, result )
    result = ast AST::Else, :statements => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 416
  def _reduce_114( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 420
  def _reduce_115( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 116 omitted

 # reduce 117 omitted

module_eval <<'.,.,', 'grammar.ra', 438
  def _reduce_118( val, _values, result )
    result = ast AST::InOperator, :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 441
  def _reduce_119( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 444
  def _reduce_120( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 447
  def _reduce_121( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 450
  def _reduce_122( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 453
  def _reduce_123( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_124( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 459
  def _reduce_125( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 462
  def _reduce_126( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 465
  def _reduce_127( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 468
  def _reduce_128( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 471
  def _reduce_129( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 474
  def _reduce_130( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 477
  def _reduce_131( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 480
  def _reduce_132( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 483
  def _reduce_133( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 486
  def _reduce_134( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 489
  def _reduce_135( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 492
  def _reduce_136( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 495
  def _reduce_137( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_138( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseStatement, :test => val[1], :options => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 501
  def _reduce_139( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_140( val, _values, result )
    val[0].push val[1]
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_141( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 520
  def _reduce_142( val, _values, result )
  @lexer.commentpop

    result = ast(
    AST::CaseOpt,
    :value => val[0],

    :statements => ast(AST::ASTArray)
  )
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 521
  def _reduce_143( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_144( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 530
  def _reduce_145( val, _values, result )
  result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 146 omitted

module_eval <<'.,.,', 'grammar.ra', 536
  def _reduce_147( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 546
  def _reduce_149( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
    val[0].push(val[2])
    result = val[0]
  else
    result = ast AST::ASTArray, :children => [val[0],val[2]]
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 550
  def _reduce_150( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 151 omitted

 # reduce 152 omitted

 # reduce 153 omitted

 # reduce 154 omitted

 # reduce 155 omitted

 # reduce 156 omitted

 # reduce 157 omitted

 # reduce 158 omitted

module_eval <<'.,.,', 'grammar.ra', 562
  def _reduce_159( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 160 omitted

module_eval <<'.,.,', 'grammar.ra', 565
  def _reduce_161( val, _values, result )
 result = [val[0][:value]]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 567
  def _reduce_163( val, _values, result )
 result = val[0] += val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 576
  def _reduce_164( val, _values, result )
  val[1].each do |file|
    import(file)
  end

  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_165( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :code => val[4],
                                                                       :line => val[0][:line]))
  @lexer.indefine = false

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 593
  def _reduce_166( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :line => val[0][:line]))
  @lexer.indefine = false
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 603
  def _reduce_167( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :code => val[5], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 610
  def _reduce_168( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_169( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Cloudres.new(val[1],
                                             ast_context(true).merge(:code => val[3],
                                                                     :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_170( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 629
  def _reduce_171( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1],
                                         ast_context(true).merge(:parent => val[2], :code => val[4],
                                                                 :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 632
  def _reduce_172( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1], ast_context(true).merge(:parent => val[2], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 633
  def _reduce_173( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 635
  def _reduce_174( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 636
  def _reduce_175( val, _values, result )
 result = "class"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 643
  def _reduce_176( val, _values, result )
    result = [result]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 647
  def _reduce_177( val, _values, result )
    result = val[0]
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 651
  def _reduce_178( val, _values, result )
  result = ast AST::HostName, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 652
  def _reduce_179( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 653
  def _reduce_180( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 654
  def _reduce_181( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 182 omitted

module_eval <<'.,.,', 'grammar.ra', 660
  def _reduce_183( val, _values, result )
  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 664
  def _reduce_184( val, _values, result )
  result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 185 omitted

module_eval <<'.,.,', 'grammar.ra', 669
  def _reduce_186( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 673
  def _reduce_187( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 188 omitted

module_eval <<'.,.,', 'grammar.ra', 680
  def _reduce_189( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 685
  def _reduce_190( val, _values, result )
  Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 689
  def _reduce_191( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 691
  def _reduce_192( val, _values, result )
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 693
  def _reduce_193( val, _values, result )
  result = [val[0][:value]]
   result
  end
.,.,

 # reduce 194 omitted

module_eval <<'.,.,', 'grammar.ra', 698
  def _reduce_195( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 196 omitted

module_eval <<'.,.,', 'grammar.ra', 703
  def _reduce_197( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 198 omitted

 # reduce 199 omitted

module_eval <<'.,.,', 'grammar.ra', 709
  def _reduce_200( val, _values, result )
  result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 710
  def _reduce_201( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 711
  def _reduce_202( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 712
  def _reduce_203( val, _values, result )
 result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 204 omitted

 # reduce 205 omitted

 # reduce 206 omitted

module_eval <<'.,.,', 'grammar.ra', 718
  def _reduce_207( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 723
  def _reduce_208( val, _values, result )
  result = ast AST::Regex, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 731
  def _reduce_209( val, _values, result )
  if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 738
  def _reduce_210( val, _values, result )
    if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 740
  def _reduce_211( val, _values, result )
  result = ast AST::ASTHash
   result
  end
.,.,

 # reduce 212 omitted

module_eval <<'.,.,', 'grammar.ra', 750
  def _reduce_213( val, _values, result )
    if val[0].instance_of?(AST::ASTHash)
    result = val[0].merge(val[2])
  else
    result = ast AST::ASTHash, :value => val[0]
    result.merge(val[2])
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 754
  def _reduce_214( val, _values, result )
  result = ast AST::ASTHash, { :value => { val[0] => val[2] } }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 755
  def _reduce_215( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 756
  def _reduce_216( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 761
  def _reduce_217( val, _values, result )
  result = ast AST::HashOrArrayAccess, :variable => val[0][:value], :key => val[2]
   result
  end
.,.,

 # reduce 218 omitted

module_eval <<'.,.,', 'grammar.ra', 766
  def _reduce_219( val, _values, result )
    result = ast AST::HashOrArrayAccess, :variable => val[0], :key => val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet

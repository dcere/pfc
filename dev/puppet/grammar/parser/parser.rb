#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'

module Puppet
  class ParseError < Puppet::Error; end
  class ImportError < Racc::ParseError; end
  class AlreadyImportedError < ImportError; end
end


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..ided5fb51a52', 'grammar.ra', 792

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:
..end grammar.ra modeval..ided5fb51a52

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 71, :_reduce_3,
 2, 71, :_reduce_4,
 1, 74, :_reduce_5,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 3, 89, :_reduce_21,
 3, 89, :_reduce_22,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 4, 82, :_reduce_30,
 5, 82, :_reduce_31,
 3, 82, :_reduce_32,
 2, 82, :_reduce_33,
 1, 94, :_reduce_34,
 3, 94, :_reduce_35,
 1, 93, :_reduce_36,
 3, 93, :_reduce_37,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 5, 75, :_reduce_49,
 5, 75, :_reduce_50,
 5, 75, :_reduce_51,
 5, 87, :_reduce_52,
 2, 76, :_reduce_53,
 1, 115, :_reduce_54,
 2, 115, :_reduce_55,
 6, 77, :_reduce_56,
 2, 77, :_reduce_57,
 3, 116, :_reduce_58,
 3, 116, :_reduce_59,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 3, 117, :_reduce_62,
 1, 118, :_reduce_none,
 3, 118, :_reduce_64,
 1, 119, :_reduce_65,
 1, 119, :_reduce_66,
 3, 120, :_reduce_67,
 3, 120, :_reduce_68,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 4, 122, :_reduce_71,
 1, 109, :_reduce_72,
 3, 109, :_reduce_73,
 0, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 107, :_reduce_76,
 1, 99, :_reduce_77,
 1, 100, :_reduce_78,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 3, 78, :_reduce_86,
 3, 78, :_reduce_87,
 3, 88, :_reduce_88,
 0, 111, :_reduce_89,
 1, 111, :_reduce_90,
 3, 111, :_reduce_91,
 3, 125, :_reduce_92,
 3, 126, :_reduce_93,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 0, 114, :_reduce_96,
 1, 114, :_reduce_97,
 3, 114, :_reduce_98,
 4, 106, :_reduce_99,
 3, 106, :_reduce_100,
 1, 98, :_reduce_101,
 2, 98, :_reduce_102,
 2, 128, :_reduce_103,
 1, 129, :_reduce_104,
 2, 129, :_reduce_105,
 1, 101, :_reduce_106,
 4, 92, :_reduce_107,
 4, 92, :_reduce_108,
 2, 80, :_reduce_109,
 5, 130, :_reduce_110,
 4, 130, :_reduce_111,
 0, 131, :_reduce_none,
 2, 131, :_reduce_113,
 4, 131, :_reduce_114,
 3, 131, :_reduce_115,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 96, :_reduce_118,
 3, 96, :_reduce_119,
 3, 96, :_reduce_120,
 3, 96, :_reduce_121,
 3, 96, :_reduce_122,
 3, 96, :_reduce_123,
 3, 96, :_reduce_124,
 3, 96, :_reduce_125,
 3, 96, :_reduce_126,
 2, 96, :_reduce_127,
 3, 96, :_reduce_128,
 3, 96, :_reduce_129,
 3, 96, :_reduce_130,
 3, 96, :_reduce_131,
 3, 96, :_reduce_132,
 3, 96, :_reduce_133,
 2, 96, :_reduce_134,
 3, 96, :_reduce_135,
 3, 96, :_reduce_136,
 3, 96, :_reduce_137,
 5, 79, :_reduce_138,
 1, 134, :_reduce_139,
 2, 134, :_reduce_140,
 5, 135, :_reduce_141,
 4, 135, :_reduce_142,
 1, 136, :_reduce_143,
 3, 136, :_reduce_144,
 3, 102, :_reduce_145,
 1, 138, :_reduce_none,
 4, 138, :_reduce_147,
 1, 140, :_reduce_none,
 3, 140, :_reduce_149,
 3, 139, :_reduce_150,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_159,
 1, 137, :_reduce_none,
 1, 141, :_reduce_161,
 1, 142, :_reduce_none,
 3, 142, :_reduce_163,
 2, 81, :_reduce_164,
 6, 83, :_reduce_165,
 5, 83, :_reduce_166,
 7, 84, :_reduce_167,
 6, 84, :_reduce_168,
 5, 86, :_reduce_169,
 1, 145, :_reduce_170,
 6, 85, :_reduce_171,
 5, 85, :_reduce_172,
 1, 113, :_reduce_173,
 1, 108, :_reduce_174,
 1, 108, :_reduce_175,
 1, 146, :_reduce_176,
 3, 146, :_reduce_177,
 1, 148, :_reduce_178,
 1, 149, :_reduce_179,
 1, 149, :_reduce_180,
 1, 149, :_reduce_181,
 1, 149, :_reduce_none,
 0, 72, :_reduce_183,
 0, 150, :_reduce_184,
 1, 143, :_reduce_none,
 3, 143, :_reduce_186,
 4, 143, :_reduce_187,
 1, 151, :_reduce_none,
 3, 151, :_reduce_189,
 3, 152, :_reduce_190,
 1, 152, :_reduce_191,
 3, 152, :_reduce_192,
 1, 152, :_reduce_193,
 1, 147, :_reduce_none,
 2, 147, :_reduce_195,
 1, 144, :_reduce_none,
 2, 144, :_reduce_197,
 1, 153, :_reduce_none,
 1, 153, :_reduce_none,
 1, 103, :_reduce_200,
 3, 104, :_reduce_201,
 4, 104, :_reduce_202,
 2, 104, :_reduce_203,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 0, 112, :_reduce_none,
 1, 112, :_reduce_207,
 1, 133, :_reduce_208,
 3, 132, :_reduce_209,
 4, 132, :_reduce_210,
 2, 132, :_reduce_211,
 1, 154, :_reduce_none,
 3, 154, :_reduce_213,
 3, 155, :_reduce_214,
 1, 156, :_reduce_215,
 1, 156, :_reduce_216,
 4, 124, :_reduce_217,
 1, 105, :_reduce_none,
 4, 105, :_reduce_219 ]

racc_reduce_n = 220

racc_shift_n = 379

clist = [
'248,249,238,76,81,315,62,238,165,345,173,225,341,185,189,340,55,346',
'57,224,164,121,180,182,186,188,164,76,81,228,229,58,76,81,344,341,76',
'81,340,337,102,172,104,242,67,181,184,68,-157,191,192,175,176,178,179',
'54,183,187,100,62,75,76,81,177,89,219,66,151,97,75,172,62,202,89,92',
'131,93,97,-155,233,239,82,101,231,232,93,130,66,107,76,81,134,152,102',
'75,104,66,67,89,219,68,37,97,231,361,38,202,228,229,67,93,100,68,-107',
'76,81,163,131,102,66,104,66,75,164,162,37,89,92,130,38,97,66,311,134',
'82,101,100,131,93,76,81,107,37,102,240,104,38,75,130,66,143,89,92,134',
'37,97,76,81,119,82,101,100,131,93,270,11,107,269,-107,-107,-107,-107',
'75,130,66,320,89,92,134,159,97,231,246,149,82,101,76,81,93,75,102,107',
'104,89,219,247,323,97,-154,66,-173,202,37,76,81,93,38,102,100,104,183',
'187,327,11,231,232,66,177,55,75,76,81,329,89,92,100,258,97,334,76,81',
'82,101,102,213,93,75,213,107,214,89,92,214,-158,97,332,66,-156,82,101',
'76,81,93,75,102,107,104,89,219,50,37,97,75,66,119,202,89,92,308,93,97',
'11,100,306,82,76,81,-152,93,102,66,104,-151,75,50,183,187,89,92,66,305',
'97,177,48,49,82,101,100,304,93,76,81,107,303,102,-153,104,110,75,57',
'66,150,89,92,261,149,97,299,231,260,82,101,100,143,93,76,81,107,140',
'102,-153,104,162,75,339,66,-154,89,92,268,297,97,236,231,260,82,101',
'100,264,93,76,81,107,227,88,114,228,229,75,-152,66,347,89,92,335,143',
'97,349,231,232,82,101,78,-151,93,76,81,107,351,102,309,104,211,75,212',
'66,355,89,92,114,110,97,76,81,165,82,102,100,104,93,43,44,45,41,-23',
'-23,-23,-23,75,109,66,358,89,92,100,222,97,60,76,81,82,101,102,359,93',
'75,59,107,66,89,92,53,66,97,149,66,366,82,101,76,81,93,236,102,107,104',
'191,192,175,176,368,75,66,183,187,89,219,236,238,97,177,100,47,202,76',
'81,240,93,102,-207,104,371,75,245,40,271,89,92,66,377,97,378,,,82,101',
'100,,93,76,81,107,,102,,104,,75,,66,,89,92,,,97,,,,82,101,100,,93,76',
'81,107,,102,,104,,75,,66,,89,92,,,97,,,,82,101,100,,93,76,81,107,,102',
',104,,75,,66,,89,92,,,97,,,,82,101,100,,93,76,81,107,,102,,104,,75,',
'66,,89,92,,,97,,,,82,101,100,,93,76,81,107,,102,,104,,75,,66,,89,92',
',,97,,,,82,101,100,,93,76,81,107,,102,,104,,75,,66,,89,92,,,97,,,,82',
'101,100,,93,76,81,107,,102,,,,75,,66,,89,92,,,97,,,,82,101,,,93,76,81',
'107,,102,,104,,75,,66,,89,219,,,97,76,81,,202,102,100,104,93,-25,-25',
'-25,-25,43,44,45,41,75,,66,,89,92,100,,97,,76,81,82,101,102,,93,75,',
'107,,89,92,,,97,,66,,82,101,76,81,93,,102,107,104,191,192,175,176,,75',
'66,183,187,89,92,,,97,177,100,,82,76,81,,93,102,,104,,75,,,,89,92,66',
',97,,,,82,101,100,,93,76,81,107,,102,,104,,75,,66,,89,92,,,97,76,81',
',82,101,100,,93,,,107,,,,,,75,,66,,89,92,,,97,,,,82,101,,,93,75,,107',
'220,89,219,,,97,,66,,202,185,189,,93,,,,,,180,182,186,188,,66,,,,76',
'81,76,81,102,,102,,104,,,,,,181,184,,,191,192,175,176,178,179,100,183',
'187,,,,76,81,177,75,102,75,104,89,207,89,92,97,,97,,202,,82,101,93,',
'93,100,,107,76,81,,,102,66,104,66,75,,,,89,92,,,97,,,,82,101,100,,93',
',,107,,,,,,75,,66,,89,92,,,97,,333,,82,101,,,93,,,107,185,189,,,,,,66',
',180,182,186,188,175,176,,,,183,187,76,81,175,176,102,177,104,183,187',
',,,181,184,177,,191,192,175,176,178,179,100,183,187,76,81,,,102,177',
'104,,75,,76,81,89,92,,,97,,,,82,101,100,155,93,,,107,76,81,,,102,75',
'104,66,,89,92,,,97,,75,,82,101,89,219,93,100,97,107,,,202,,,,93,66,75',
',,,89,92,,,97,66,,,82,101,76,81,93,,102,107,104,,,,76,81,,66,102,,104',
',,,76,81,100,,102,,104,,,,,,100,75,,,,89,92,,,97,100,75,,82,101,89,92',
'93,,97,107,75,,82,101,89,92,93,66,97,107,,,82,101,,,93,66,,107,76,81',
',,102,161,104,66,,,76,81,,,102,,104,,,,76,81,100,,102,,104,,,,,,100',
'75,,,,89,92,,,97,100,75,,82,101,89,92,93,,97,107,75,,82,101,89,92,93',
'66,97,107,,,82,101,76,81,93,66,102,107,104,,,,76,81,,66,102,,104,,,',
'76,81,100,,102,161,104,,,,,,100,75,,,,89,92,,,97,100,75,,82,101,89,92',
'93,,97,107,75,,82,101,89,92,93,66,97,107,,,82,101,76,81,93,66,102,107',
'104,,,,76,81,,66,102,,104,,,,,,100,,,,,,,,,,100,75,,,,89,92,,302,97',
',75,,82,101,89,92,93,,97,107,326,,82,101,,,93,66,28,107,34,1,,8,12,',
'19,66,25,,30,28,2,34,1,11,8,12,,19,190,25,,30,,2,,,11,185,189,,,,,,7',
',180,182,186,188,,191,192,175,176,178,179,7,183,187,,,374,,,177,,,,181',
'184,,,191,192,175,176,178,179,,183,187,,28,,34,1,177,8,12,,19,194,25',
',30,,2,,,11,185,189,,,,,,,,180,182,186,188,,191,192,175,176,178,179',
'7,183,187,,,370,,,177,,,,181,184,,,191,192,175,176,178,179,,183,187',
'289,28,,34,1,177,8,12,,19,,25,,30,,2,,,11,357,,28,,34,1,,8,12,,19,,25',
',30,,2,,376,11,7,28,,34,1,,8,12,,19,,25,,30,,2,,,11,28,7,34,1,,8,12',
',19,,25,,30,,2,185,189,11,,,7,,,,180,182,186,188,,,185,189,,,,,,,7,180',
'182,186,188,,,,,181,184,,,191,192,175,176,178,179,,183,187,,,181,184',
',177,191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186',
'188,,,185,189,,,,,,,,180,182,186,188,,,,,,,,,191,192,175,176,178,179',
',183,187,,,181,184,,177,191,192,175,176,178,179,,183,187,185,189,,,',
'177,,,,180,182,186,188,,,185,189,,,,,,,,180,182,186,188,,,,,181,184',
',,191,192,175,176,178,179,,183,187,,,181,184,,177,191,192,175,176,178',
'179,,183,187,185,189,,,,177,,,,180,182,186,188,,,185,189,,,,,,,,180',
'182,186,188,,,,,,,,,191,192,175,176,178,179,,183,187,,,181,184,,177',
'191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186,188,',
',185,189,,,,,,,,180,182,186,188,,,,,181,184,,,191,192,175,176,178,179',
',183,187,,,181,184,,177,191,192,175,176,178,179,,183,187,185,189,,,',
'177,,,,180,182,186,188,,,185,189,,,,,,,,180,182,186,188,,,,,181,184',
',,191,192,175,176,178,179,,183,187,,,,184,,177,191,192,175,176,178,179',
',183,187,185,189,,,,177,,,,180,182,186,188,,,185,189,,,,,,,,180,182',
'186,188,,,,,,,,,191,192,175,176,178,179,,183,187,,,181,184,,177,191',
'192,175,176,178,179,,183,187,185,189,,,,177,,,267,180,182,186,188,,',
',189,,,,,,,,180,,,,,,,,181,184,189,,191,192,175,176,178,179,180,183',
'187,,,,,189,177,191,192,175,176,178,179,180,183,187,,,,,,177,,189,,191',
'192,175,176,178,179,180,183,187,,,,,,177,191,192,175,176,178,179,,183',
'187,,,,,,177,,,,191,192,175,176,178,179,,183,187,,28,,34,1,177,8,12',
',19,,25,,30,28,2,34,1,11,8,12,,19,,25,,30,,2,,28,11,34,1,,8,12,,19,7',
'25,,30,,2,,,11,,,,,7,,,,,,,,,,,,,,,,7' ]
racc_action_table = arr = Array.new(2168, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

clist = [
'158,158,149,104,104,226,19,207,92,294,104,129,289,158,158,289,14,294',
'14,129,207,46,158,158,158,158,92,292,292,226,226,14,269,269,292,339',
'181,181,339,269,181,104,181,149,19,158,158,19,96,158,158,158,158,158',
'158,14,158,158,181,151,292,363,363,158,292,292,19,63,292,181,269,152',
'292,181,181,54,292,181,94,138,144,181,181,138,138,181,54,292,181,182',
'182,54,63,182,363,182,181,151,363,363,151,12,363,331,331,12,363,144',
'144,152,363,182,152,261,184,184,91,230,184,151,184,363,182,219,90,222',
'182,182,230,222,182,152,222,230,182,182,184,58,182,185,185,182,1,185',
'235,185,1,184,58,182,236,184,184,58,51,184,345,345,51,184,184,185,131',
'184,169,51,184,169,261,261,261,261,185,131,184,237,185,185,131,86,185',
'156,156,240,185,185,340,340,185,345,340,185,340,345,345,156,241,345',
'85,185,82,345,20,186,186,345,20,186,340,186,272,272,246,20,265,265,345',
'272,80,340,159,159,255,340,340,186,159,340,265,329,329,340,340,329,114',
'340,186,306,340,114,186,186,306,79,186,260,340,77,186,186,165,165,186',
'159,165,186,165,159,159,75,42,159,329,186,42,159,329,329,218,159,329',
'42,165,216,329,188,188,74,329,188,159,188,72,165,8,273,273,165,165,329',
'215,165,273,8,8,165,165,188,214,165,189,189,165,213,189,98,189,211,188',
'69,165,60,188,188,160,59,188,210,160,160,188,188,189,57,188,164,164',
'188,56,164,209,164,205,189,288,188,203,189,189,168,200,189,198,168,168',
'189,189,164,164,189,25,25,189,135,25,52,135,135,164,196,189,296,164',
'164,266,297,164,298,266,266,164,164,25,195,164,28,28,164,301,28,221',
'28,112,25,113,164,307,25,25,39,34,25,30,30,119,25,30,28,30,25,9,9,9',
'9,33,33,33,33,28,31,25,318,28,28,30,126,28,18,121,121,28,28,121,325',
'28,30,16,28,187,30,30,13,183,30,140,28,341,30,30,179,179,30,141,179',
'30,179,276,276,276,276,346,121,30,276,276,121,121,348,143,121,276,179',
'7,121,191,191,146,121,191,361,191,362,179,153,2,171,179,179,121,373',
'179,375,,,179,179,191,,179,192,192,179,,192,,192,,191,,179,,191,191',
',,191,,,,191,191,192,,191,304,304,191,,304,,304,,192,,191,,192,192,',
',192,,,,192,192,304,,192,303,303,192,,303,,303,,304,,192,,304,304,,',
'304,,,,304,304,303,,304,48,48,304,,48,,48,,303,,304,,303,303,,,303,',
',,303,303,48,,303,49,49,303,,49,,49,,48,,303,,48,48,,,48,,,,48,48,49',
',48,50,50,48,,50,,50,,49,,48,,49,49,,,49,,,,49,49,50,,49,299,299,49',
',299,,,,50,,49,,50,50,,,50,,,,50,50,,,50,180,180,50,,180,,180,,299,',
'50,,299,299,,,299,53,53,,299,53,180,53,299,4,4,4,4,5,5,5,5,180,,299',
',180,180,53,,180,,163,163,180,180,163,,180,53,,180,,53,53,,,53,,180',
',53,53,55,55,53,,55,53,55,275,275,275,275,,163,53,275,275,163,163,,',
'163,275,55,,163,162,162,,163,162,,162,,55,,,,55,55,163,,55,,,,55,55',
'162,,55,176,176,55,,176,,176,,162,,55,,162,162,,,162,194,194,,162,162',
'176,,162,,,162,,,,,,176,,162,,176,176,,,176,,,,176,176,,,176,194,,176',
'124,194,194,,,194,,176,,194,124,124,,194,,,,,,124,124,124,124,,194,',
',,109,109,177,177,109,,177,,177,,,,,,124,124,,,124,124,124,124,124,124',
'177,124,124,,,,271,271,124,109,271,177,271,109,109,177,177,109,,177',
',109,,177,177,109,,177,271,,177,178,178,,,178,109,178,177,271,,,,271',
'271,,,271,,,,271,271,178,,271,,,271,,,,,,178,,271,,178,178,,,178,,262',
',178,178,,,178,,,178,262,262,,,,,,178,,262,262,262,262,290,290,,,,290',
'290,101,101,291,291,101,290,101,291,291,,,,262,262,291,,262,262,262',
'262,262,262,101,262,262,78,78,,,78,262,78,,101,,258,258,101,101,,,101',
',,,101,101,78,78,101,,,101,248,248,,,248,78,248,101,,78,78,,,78,,258',
',78,78,258,258,78,248,258,78,,,258,,,,258,78,248,,,,248,248,,,248,258',
',,248,248,81,81,248,,81,248,81,,,,242,242,,248,242,,242,,,,238,238,81',
',238,,238,,,,,,242,81,,,,81,81,,,81,238,242,,81,81,242,242,81,,242,81',
'238,,242,242,238,238,242,81,238,242,,,238,238,,,238,242,,238,88,88,',
',88,88,88,238,,,234,234,,,234,,234,,,,175,175,88,,175,,175,,,,,,234',
'88,,,,88,88,,,88,175,234,,88,88,234,234,88,,234,88,175,,234,234,175',
'175,234,88,175,234,,,175,175,225,225,175,234,225,175,225,,,,224,224',
',175,224,,224,,,,102,102,225,,102,102,102,,,,,,224,225,,,,225,225,,',
'225,102,224,,225,225,224,224,225,,224,225,102,,224,224,102,102,224,225',
'102,224,,,102,102,100,100,102,224,100,102,100,,,,107,107,,102,107,,107',
',,,,,100,,,,,,,,,,107,100,,,,100,100,,212,100,,107,,100,100,107,107',
'100,,107,100,245,,107,107,,,107,100,212,107,212,212,,212,212,,212,107',
'212,,212,245,212,245,245,212,245,245,,245,105,245,,245,,245,,,245,105',
'105,,,,,,212,,105,105,105,105,,286,286,286,286,286,286,245,286,286,',
',366,,,286,,,,105,105,,,105,105,105,105,105,105,,105,105,,366,,366,366',
'105,366,366,,366,108,366,,366,,366,,,366,108,108,,,,,,,,108,108,108',
'108,,277,277,277,277,277,277,366,277,277,,,356,,,277,,,,108,108,,,108',
'108,108,108,108,108,,108,108,190,356,,356,356,108,356,356,,356,,356',
',356,,356,,,356,309,,190,,190,190,,190,190,,190,,190,,190,,190,,368',
'190,356,309,,309,309,,309,309,,309,,309,,309,,309,,,309,368,190,368',
'368,,368,368,,368,,368,,368,,368,324,324,368,,,309,,,,324,324,324,324',
',,122,122,,,,,,,368,122,122,122,122,,,,,324,324,,,324,324,324,324,324',
'324,,324,324,,,122,122,,324,122,122,122,122,122,122,,122,122,281,281',
',,,122,,,,281,281,281,281,,,317,317,,,,,,,,317,317,317,317,,,,,,,,,281',
'281,281,281,281,281,,281,281,,,317,317,,281,317,317,317,317,317,317',
',317,317,321,321,,,,317,,,,321,321,321,321,,,127,127,,,,,,,,127,127',
'127,127,,,,,321,321,,,321,321,321,321,321,321,,321,321,,,127,127,,321',
'127,127,127,127,127,127,,127,127,314,314,,,,127,,,,314,314,314,314,',
',338,338,,,,,,,,338,338,338,338,,,,,,,,,314,314,314,314,314,314,,314',
'314,,,338,338,,314,338,338,338,338,338,338,,338,338,352,352,,,,338,',
',,352,352,352,352,,,353,353,,,,,,,,353,353,353,353,,,,,352,352,,,352',
'352,352,352,352,352,,352,352,,,353,353,,352,353,353,353,353,353,353',
',353,353,139,139,,,,353,,,,139,139,139,139,,,278,278,,,,,,,,278,278',
'278,278,,,,,139,139,,,139,139,139,139,139,139,,139,139,,,,278,,139,278',
'278,278,278,278,278,,278,278,313,313,,,,278,,,,313,313,313,313,,,123',
'123,,,,,,,,123,123,123,123,,,,,,,,,313,313,313,313,313,313,,313,313',
',,123,123,,313,123,123,123,123,123,123,,123,123,166,166,,,,123,,,166',
'166,166,166,166,,,,282,,,,,,,,282,,,,,,,,166,166,283,,166,166,166,166',
'166,166,283,166,166,,,,,279,166,282,282,282,282,282,282,279,282,282',
',,,,,282,,285,,283,283,283,283,283,283,285,283,283,,,,,,283,279,279',
'279,279,279,279,,279,279,,,,,,279,,,,285,285,285,285,285,285,,285,285',
',287,,287,287,285,287,287,,287,,287,,287,22,287,22,22,287,22,22,,22',
',22,,22,,22,,0,22,0,0,,0,0,,0,287,0,,0,,0,,,0,,,,,22,,,,,,,,,,,,,,,',
'0' ]
racc_action_check = arr = Array.new(2168, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

racc_action_pointer = [
  2099,   106,   430,   nil,   626,   630,   nil,   422,   278,   337,
   nil,   nil,    65,   416,    10,   nil,   418,   nil,   417,     4,
   166,   nil,  2083,   nil,   nil,   348,   nil,   nil,   373,   nil,
   390,   401,   nil,   341,   388,   nil,   nil,   nil,   nil,   365,
   nil,   nil,   224,   nil,   nil,   nil,    13,   nil,   562,   587,
   612,   118,   331,   679,    51,   726,   320,   283,   113,   275,
   311,   nil,   nil,    55,   nil,   nil,   nil,   nil,   nil,   301,
   nil,   nil,   259,   nil,   254,   253,   nil,   224,  1010,   220,
   212,  1085,   194,   nil,   nil,   175,   156,   nil,  1158,   nil,
   118,   104,     2,   nil,    55,   nil,    25,   nil,   282,   nil,
  1292,   985,  1245,   nil,     1,  1369,   nil,  1302,  1433,   857,
   nil,   nil,   370,   376,   199,   nil,   nil,   nil,   nil,   388,
   nil,   416,  1566,  1926,   824,   nil,   378,  1686,   nil,    -7,
   nil,   138,   nil,   nil,   nil,   307,   nil,   nil,    72,  1851,
   394,   430,   nil,   447,    58,   nil,   454,   nil,   nil,    -9,
   nil,    57,    69,   465,   nil,   nil,   170,   nil,    -4,   218,
   307,   nil,   751,   705,   323,   248,  1971,   nil,   332,   155,
   nil,   464,   nil,   nil,   nil,  1178,   776,   859,   912,   437,
   662,    34,    87,   370,   112,   137,   201,   366,   273,   298,
  1486,   462,   487,   nil,   793,   350,   336,   nil,   330,   nil,
   320,   nil,   nil,   313,   nil,   326,   nil,    -4,   nil,   307,
   276,   305,  1325,   288,   283,   265,   261,   nil,   259,    99,
   nil,   372,    89,   nil,  1235,  1225,   -20,   nil,   nil,   nil,
    93,   nil,   nil,   nil,  1168,   132,   110,   166,  1105,   nil,
   143,   187,  1095,   nil,   nil,  1338,   187,   nil,  1038,   nil,
   nil,   nil,   nil,   nil,   nil,   211,   nil,   nil,  1020,   nil,
   238,   105,   950,   nil,   nil,   203,   357,   nil,   nil,    30,
   nil,   887,   150,   225,   nil,   682,   393,  1411,  1866,  2019,
   nil,  1611,  1986,  2004,   nil,  2037,  1347,  2070,   325,   -19,
   925,   934,    25,   nil,    -3,   nil,   352,   325,   358,   637,
   nil,   369,   nil,   537,   512,   nil,   202,   361,   nil,  1505,
   nil,   nil,   nil,  1911,  1731,   nil,   nil,  1626,   402,   nil,
   nil,  1671,   nil,   nil,  1551,   414,   nil,   nil,   nil,   227,
   nil,    92,   nil,   nil,   nil,   nil,   nil,   nil,  1746,     4,
   184,   428,   nil,   nil,   nil,   154,   442,   nil,   445,   nil,
   nil,   nil,  1791,  1806,   nil,   nil,  1466,   nil,   nil,   nil,
   nil,   460,   462,    59,   nil,   nil,  1402,   nil,  1523,   nil,
   nil,   nil,   nil,   470,   nil,   472,   nil,   nil,   nil ]

racc_action_default = [
  -183,  -220,   -54,   -19,    -8,   -20,    -9,  -220,  -220,  -220,
   -10,  -173,  -175,  -220,  -220,   -11,   -24,   -12,  -220,  -220,
  -220,   -13,    -1,   -14,    -2,  -174,   -15,    -3,  -220,   -16,
  -220,  -220,   -17,    -6,  -220,   -18,    -7,  -175,  -174,  -183,
   -55,   -29,  -220,   -26,   -27,   -28,  -220,  -170,  -220,  -220,
  -220,  -220,  -183,  -220,  -183,  -220,   -57,   -89,  -183,   -96,
  -220,  -182,  -180,  -183,  -176,  -178,  -208,  -179,  -181,  -220,
   -53,    -4,   -39,  -160,   -40,  -200,  -101,   -41,  -220,  -218,
  -220,  -220,   -78,   -42,   -46,   -43,  -220,   -44,  -220,  -106,
   -45,   -33,   -77,   -76,   -47,   -34,   -48,  -159,   -38,  -117,
  -220,  -220,  -220,  -116,  -220,  -220,  -109,  -220,  -220,   -89,
  -161,  -162,  -164,  -220,  -184,  -185,   -25,   -22,   -24,  -174,
   -23,  -220,   -86,   -88,  -220,   -21,  -183,   -87,   -70,  -220,
  -200,  -183,   -69,   -60,   -77,  -220,   -61,   -63,  -220,   -36,
   -96,  -206,   -90,  -220,  -220,   -94,  -206,   -95,   -97,  -220,
   379,  -220,  -220,  -220,  -194,   -32,  -220,  -102,  -220,  -220,
  -220,  -203,  -220,  -220,  -220,  -220,  -220,  -134,  -220,  -220,
  -212,  -220,  -215,  -211,  -216,  -220,  -220,  -220,  -220,  -220,
  -220,  -220,  -220,  -220,  -220,  -220,  -220,  -220,  -220,  -220,
  -220,  -220,  -220,  -127,  -220,   -80,   -81,   -72,  -206,  -156,
  -220,   -82,   -78,   -83,   -84,   -85,  -155,   -77,  -157,   -79,
   -74,  -220,  -220,  -193,  -191,  -220,  -206,  -188,  -220,   -77,
  -217,  -220,  -220,  -196,  -220,  -220,  -220,   -58,   -66,   -65,
  -220,  -204,  -205,  -108,  -220,  -206,  -207,  -220,  -220,   -59,
  -207,  -220,  -220,  -177,  -195,  -220,  -205,   -30,  -220,  -104,
  -103,  -151,  -152,  -158,  -154,  -220,  -145,  -146,  -220,  -153,
  -205,  -201,  -220,   -35,  -100,  -220,  -220,  -137,  -201,  -220,
  -209,  -220,  -124,  -123,  -118,  -125,  -126,  -129,  -136,  -131,
  -119,  -135,  -133,  -130,  -120,  -132,  -128,    -5,  -220,  -112,
  -121,  -122,  -220,  -139,  -220,  -143,  -220,   -89,  -220,   -75,
  -163,  -220,  -166,  -220,  -220,  -186,  -207,  -220,  -169,  -220,
  -198,  -199,  -197,   -67,   -68,   -64,   -62,   -37,  -220,   -91,
   -51,   -92,   -98,   -52,   -93,  -220,  -172,   -31,  -105,  -220,
  -148,  -206,  -202,  -219,   -99,  -107,  -213,  -210,  -214,  -112,
  -220,  -220,  -111,  -140,  -138,  -220,  -220,   -50,  -206,   -49,
   -73,  -165,  -192,  -190,  -189,  -187,  -220,  -168,   -56,  -171,
  -150,  -205,  -220,  -220,  -110,  -113,  -220,  -144,  -220,   -71,
  -167,  -147,  -149,  -220,  -115,  -220,  -142,  -114,  -141 ]

racc_goto_table = [
    16,    14,    71,   106,    22,   205,   257,    13,    95,    39,
   217,   132,   128,   141,   157,   132,   128,   205,   204,   174,
    52,    69,    16,    14,   209,   293,    64,   288,   197,    13,
   204,   135,    61,   170,   111,   144,   209,   342,   146,    70,
   218,   113,   118,    14,   201,   221,   117,   292,    91,   301,
   116,   118,    14,   322,   126,   125,   201,   208,    42,   116,
   145,   120,    51,   256,   363,   198,   203,   195,   206,   208,
   120,   196,   199,    24,   259,   105,   331,   108,   203,   195,
   206,   210,   325,   196,   199,   112,   298,   364,   132,   128,
   250,    46,    63,   153,   316,   122,   123,   124,   244,   215,
   127,   216,    56,   312,   169,   330,    18,   208,   226,   259,
   237,   nil,   115,   nil,   nil,   241,   254,   251,   206,   235,
   nil,   252,   199,   343,   nil,   115,   nil,   nil,   158,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   154,   nil,   nil,   nil,
   nil,   145,   208,   255,   nil,   nil,   263,   166,   167,   nil,
   nil,   254,   251,   206,   193,   nil,   252,   199,   243,   nil,
   nil,   nil,   nil,   nil,    61,    61,   253,   296,   nil,   nil,
   nil,   nil,   nil,   259,   nil,   nil,   nil,   nil,   295,   nil,
   nil,   328,   nil,   nil,   174,   307,   nil,   132,   128,   nil,
    16,    14,   nil,   nil,   nil,   205,   280,    13,   336,   223,
   284,   253,   354,   373,   318,   375,   208,   259,   204,   262,
   372,   300,    16,    14,   209,   254,   251,   206,   350,    13,
   252,   199,   272,   273,   274,   275,   276,   277,   278,   279,
   310,   281,   282,   283,   201,   285,   286,   319,   290,   291,
   208,   145,   255,   nil,   nil,    16,    14,   208,   nil,   254,
   251,   206,    13,   348,   252,   199,   203,   195,   206,   nil,
   259,   196,   199,   nil,   nil,   253,   nil,    71,   nil,   nil,
   nil,   313,   314,   nil,   nil,   nil,   295,   nil,   259,   nil,
   nil,   317,   nil,   nil,   nil,   321,   nil,    16,    14,   324,
   nil,   138,   nil,   208,    13,   158,   nil,   nil,   nil,   253,
   362,   nil,   254,   251,   206,   nil,   nil,   252,   199,    16,
    14,   208,   360,   356,   156,   365,    13,   369,   338,   nil,
   254,   251,   206,   nil,   160,   252,   199,   nil,   nil,   367,
   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,   168,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   255,   nil,   nil,
   352,   353,   253,   nil,   nil,   nil,    16,    14,   nil,   nil,
   nil,   nil,   nil,    13,   nil,   nil,    16,    14,    16,    14,
   253,   nil,   nil,    13,   nil,    13,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   105,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   265,   266 ]

racc_goto_check = [
    23,    44,     4,    61,     2,    36,    70,    55,    26,    39,
    83,    34,    30,    42,    59,    34,    30,    36,    35,    29,
    39,    44,    23,    44,    29,    66,    79,     5,    53,    55,
    35,    48,    64,    86,    72,    48,    29,    62,    45,     6,
    53,    74,    23,    44,    33,    75,    21,    65,    25,     5,
     8,    23,    44,    58,    74,    21,    33,    38,    22,     8,
    56,     6,    22,    69,    28,    42,    34,    30,    37,    38,
     6,    31,    32,     3,    29,    27,    71,    27,    34,    30,
    37,    40,     5,    31,    32,    73,    41,    62,    34,    30,
    60,    76,    77,    78,    49,    27,    27,    27,    80,    81,
    27,    82,    47,    84,    85,    70,     1,    38,    48,    29,
    43,   nil,     3,   nil,   nil,    43,    34,    30,    37,    45,
   nil,    31,    32,    66,   nil,     3,   nil,   nil,    27,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,
   nil,    56,    38,    68,   nil,   nil,    26,    27,    27,   nil,
   nil,    34,    30,    37,    27,   nil,    31,    32,    79,   nil,
   nil,   nil,   nil,   nil,    64,    64,    55,    43,   nil,   nil,
   nil,   nil,   nil,    29,   nil,   nil,   nil,   nil,    68,   nil,
   nil,    59,   nil,   nil,    29,    43,   nil,    34,    30,   nil,
    23,    44,   nil,   nil,   nil,    36,    64,    55,    86,     3,
    64,    55,    83,     5,    43,     5,    38,    29,    35,    27,
    70,    72,    23,    44,    29,    34,    30,    37,    53,    55,
    31,    32,    27,    27,    27,    27,    27,    27,    27,    27,
    39,    27,    27,    27,    33,    27,    27,    56,    27,    27,
    38,    56,    68,   nil,   nil,    23,    44,    38,   nil,    34,
    30,    37,    55,    42,    31,    32,    34,    30,    37,   nil,
    29,    31,    32,   nil,   nil,    55,   nil,     4,   nil,   nil,
   nil,    27,    27,   nil,   nil,   nil,    68,   nil,    29,   nil,
   nil,    27,   nil,   nil,   nil,    27,   nil,    23,    44,    27,
   nil,    24,   nil,    38,    55,    27,   nil,   nil,   nil,    55,
    43,   nil,    34,    30,    37,   nil,   nil,    31,    32,    23,
    44,    38,    26,     2,    24,    61,    55,    43,    27,   nil,
    34,    30,    37,   nil,    24,    31,    32,   nil,   nil,    68,
   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    68,   nil,   nil,
    27,    27,    55,   nil,   nil,   nil,    23,    44,   nil,   nil,
   nil,   nil,   nil,    55,   nil,   nil,    23,    44,    23,    44,
    55,   nil,   nil,    55,   nil,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    24,    24 ]

racc_goto_pointer = [
   nil,   106,     4,    73,   -20,  -163,    19,   nil,     8,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     4,    53,     0,   236,    23,   -17,    47,  -267,   -85,
   -42,   -38,   -37,   -65,   -43,   -91,  -104,   -41,   -52,     8,
   -28,  -124,   -44,   -31,     1,   -21,   nil,    88,   -23,  -136,
   nil,   nil,   nil,   -81,   nil,     7,     1,   nil,  -187,   -67,
   -68,   -25,  -252,   nil,    13,  -147,  -169,   nil,   -16,   -96,
  -153,  -182,     0,    51,     2,   -81,    84,    73,    30,     7,
   -54,   -15,   -13,  -104,  -119,     0,   -71,   nil ]

racc_goto_default = [
   nil,   nil,   287,   133,    27,   nil,    33,    36,     4,     6,
    10,    15,    17,    21,    23,    26,    29,    32,    35,     3,
     5,     9,   nil,    84,   nil,   nil,   103,   139,   234,    98,
    72,    74,    77,    83,    85,    87,    90,    94,    96,    31,
   nil,   nil,   nil,   nil,    80,   nil,    20,   nil,   nil,   136,
   230,   137,   129,   nil,   200,    79,   142,   147,   148,   nil,
   nil,   nil,   nil,    99,    73,   nil,   nil,   294,    86,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    65,   nil,   nil,   nil,   nil,   nil,   nil,   171 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :STRING => 2,
 :DQPRE => 3,
 :DQMID => 4,
 :DQPOST => 5,
 :LBRACK => 6,
 :RBRACK => 7,
 :LBRACE => 8,
 :RBRACE => 9,
 :SYMBOL => 10,
 :FARROW => 11,
 :COMMA => 12,
 :TRUE => 13,
 :FALSE => 14,
 :EQUALS => 15,
 :APPENDS => 16,
 :LESSEQUAL => 17,
 :NOTEQUAL => 18,
 :DOT => 19,
 :COLON => 20,
 :LLCOLLECT => 21,
 :RRCOLLECT => 22,
 :QMARK => 23,
 :LPAREN => 24,
 :RPAREN => 25,
 :ISEQUAL => 26,
 :GREATEREQUAL => 27,
 :GREATERTHAN => 28,
 :LESSTHAN => 29,
 :IF => 30,
 :ELSE => 31,
 :IMPORT => 32,
 :DEFINE => 33,
 :ELSIF => 34,
 :VARIABLE => 35,
 :CLASS => 36,
 :INHERITS => 37,
 :NODE => 38,
 :BOOLEAN => 39,
 :NAME => 40,
 :SEMIC => 41,
 :CASE => 42,
 :DEFAULT => 43,
 :AT => 44,
 :LCOLLECT => 45,
 :RCOLLECT => 46,
 :CLASSREF => 47,
 :NOT => 48,
 :OR => 49,
 :AND => 50,
 :UNDEF => 51,
 :PARROW => 52,
 :PLUS => 53,
 :MINUS => 54,
 :TIMES => 55,
 :DIV => 56,
 :LSHIFT => 57,
 :RSHIFT => 58,
 :UMINUS => 59,
 :MATCH => 60,
 :NOMATCH => 61,
 :REGEX => 62,
 :IN_EDGE => 63,
 :OUT_EDGE => 64,
 :IN_EDGE_SUB => 65,
 :OUT_EDGE_SUB => 66,
 :IN => 67,
 :CLOUDRES => 68 }

racc_use_result_var = true

racc_nt_base = 69

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'STRING',
'DQPRE',
'DQMID',
'DQPOST',
'LBRACK',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'MATCH',
'NOMATCH',
'REGEX',
'IN_EDGE',
'OUT_EDGE',
'IN_EDGE_SUB',
'OUT_EDGE_SUB',
'IN',
'CLOUDRES',
'$start',
'program',
'statements_and_declarations',
'nil',
'statement_or_declaration',
'statements',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement_begin',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'cloudres',
'resourceoverride',
'append',
'relationship',
'relationship_side',
'edge',
'resourceref',
'expressions',
'funcvalues',
'rvalue',
'expression',
'comma',
'quotedtext',
'name',
'type',
'boolean',
'selector',
'variable',
'array',
'hasharrayaccesses',
'funcrvalue',
'undef',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'resourceinst',
'resourcename',
'hasharrayaccess',
'param',
'addparam',
'anyparam',
'dqrval',
'dqtail',
'ifstatement',
'else',
'hash',
'regex',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'string',
'strings',
'argumentlist',
'classparent',
'cloudclass',
'hostnames',
'nodeparent',
'nodename',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault',
'hashpairs',
'hashpair',
'key']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

module_eval <<'.,.,', 'grammar.ra', 37
  def _reduce_3( val, _values, result )
    result = ast AST::ASTArray, :children => (val[0] ? [val[0]] : [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 43
  def _reduce_4( val, _values, result )
    if val[1]
      val[0].push(val[1])
    end
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 55
  def _reduce_5( val, _values, result )
  val[0].each do |stmt|
    if stmt.is_a?(AST::TopLevelConstruct)
      error "Classes, definitions, and nodes may only appear at toplevel or inside other classes", \
          :line => stmt.context[:line], :file => stmt.context[:file]
    end
  end
  result = val[0]
   result
  end
.,.,

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

module_eval <<'.,.,', 'grammar.ra', 76
  def _reduce_21( val, _values, result )
  result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 79
  def _reduce_22( val, _values, result )
    result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

 # reduce 23 omitted

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_30( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 98
  def _reduce_31( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_32( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 111
  def _reduce_33( val, _values, result )
    result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[1],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 112
  def _reduce_34( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 118
  def _reduce_35( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 119
  def _reduce_36( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 120
  def _reduce_37( val, _values, result )
 result = val[0].push(val[2])
   result
  end
.,.,

 # reduce 38 omitted

 # reduce 39 omitted

 # reduce 40 omitted

 # reduce 41 omitted

 # reduce 42 omitted

 # reduce 43 omitted

 # reduce 44 omitted

 # reduce 45 omitted

 # reduce 46 omitted

 # reduce 47 omitted

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 139
  def _reduce_49( val, _values, result )
     @lexer.commentpop
     result = ast(AST::Resource, :type => val[0], :instances => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 143
  def _reduce_50( val, _values, result )
     # This is a deprecated syntax.
     error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 148
  def _reduce_51( val, _values, result )
     # a defaults setting for a type
     @lexer.commentpop
     result = ast(AST::ResourceDefaults, :type => val[0], :parameters => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 154
  def _reduce_52( val, _values, result )
  @lexer.commentpop
  result = ast AST::ResourceOverride, :object => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 173
  def _reduce_53( val, _values, result )
  type = val[0]

  if (type == :exported and ! Puppet[:storeconfigs])
    Puppet.warning addcontext("You cannot collect without storeconfigs being set")
  end

  error "Defaults are not virtualizable" if val[1].is_a? AST::ResourceDefaults

  method = type.to_s + "="

  # Just mark our resource as exported and pass it through.
  val[1].send(method, true)

  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 174
  def _reduce_54( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_55( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 198
  def _reduce_56( val, _values, result )
  @lexer.commentpop
  Puppet.warning addcontext("Collection names must now be capitalized") if val[0] =~ /^[a-z]/
  type = val[0].downcase
  args = {:type => type}

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  args[:override] = val[3]
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 217
  def _reduce_57( val, _values, result )
    if val[0] =~ /^[a-z]/
    Puppet.warning addcontext("Collection names must now be capitalized")
  end
  type = val[0].downcase
  args = {:type => type }

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 227
  def _reduce_58( val, _values, result )
  if val[1]
    result = val[1]
    result.form = :virtual
  else
    result = :virtual
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 235
  def _reduce_59( val, _values, result )
    if val[1]
    result = val[1]
    result.form = :exported
  else
    result = :exported
  end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 243
  def _reduce_62( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'grammar.ra', 249
  def _reduce_64( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 250
  def _reduce_65( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 251
  def _reduce_66( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 258
  def _reduce_67( val, _values, result )
  result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
  #result = ast AST::CollExpr
  #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 263
  def _reduce_68( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 270
  def _reduce_71( val, _values, result )
  result = ast AST::ResourceInstance, :title => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 271
  def _reduce_72( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 276
  def _reduce_73( val, _values, result )
    val[0].push val[2]
    result = val[0]
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

module_eval <<'.,.,', 'grammar.ra', 283
  def _reduce_76( val, _values, result )
  result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 287
  def _reduce_77( val, _values, result )
  result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 291
  def _reduce_78( val, _values, result )
  result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

module_eval <<'.,.,', 'grammar.ra', 306
  def _reduce_86( val, _values, result )
  raise Puppet::ParseError, "Cannot assign to variables in other namespaces" if val[0][:value] =~ /::/
  # this is distinct from referencing a variable
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 309
  def _reduce_87( val, _values, result )
    result = ast AST::VarDef, :name => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 314
  def _reduce_88( val, _values, result )
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 319
  def _reduce_89( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 319
  def _reduce_90( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_91( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 328
  def _reduce_92( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_93( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
    :add => true
   result
  end
.,.,

 # reduce 94 omitted

 # reduce 95 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_96( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_97( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 346
  def _reduce_98( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 354
  def _reduce_99( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => val[2],
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 359
  def _reduce_100( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 360
  def _reduce_101( val, _values, result )
 result = ast AST::String, :value => val[0][:value],                  :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_102( val, _values, result )
 result = ast AST::Concat, :value => [ast(AST::String,val[0])]+val[1], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 363
  def _reduce_103( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 365
  def _reduce_104( val, _values, result )
 result = [ast(AST::String,val[0])]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 366
  def _reduce_105( val, _values, result )
 result = [ast(AST::String,val[0])] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 371
  def _reduce_106( val, _values, result )
  result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 376
  def _reduce_107( val, _values, result )
  Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
  result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 378
  def _reduce_108( val, _values, result )
  result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 382
  def _reduce_109( val, _values, result )
  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 394
  def _reduce_110( val, _values, result )
  @lexer.commentpop
  args = {
    :test => val[0],
    :statements => val[2]
  }

  args[:else] = val[4] if val[4]

  result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 405
  def _reduce_111( val, _values, result )
    @lexer.commentpop
    args = {
      :test => val[0],
      :statements => ast(AST::Nop)
  }

  args[:else] = val[3] if val[3]

  result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 410
  def _reduce_113( val, _values, result )
    result = ast AST::Else, :statements => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 414
  def _reduce_114( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 418
  def _reduce_115( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 116 omitted

 # reduce 117 omitted

module_eval <<'.,.,', 'grammar.ra', 436
  def _reduce_118( val, _values, result )
    result = ast AST::InOperator, :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 439
  def _reduce_119( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 442
  def _reduce_120( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 445
  def _reduce_121( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 448
  def _reduce_122( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 451
  def _reduce_123( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_124( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 457
  def _reduce_125( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 460
  def _reduce_126( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 463
  def _reduce_127( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 466
  def _reduce_128( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 469
  def _reduce_129( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 472
  def _reduce_130( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 475
  def _reduce_131( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 478
  def _reduce_132( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 481
  def _reduce_133( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_134( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 487
  def _reduce_135( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 490
  def _reduce_136( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 493
  def _reduce_137( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 498
  def _reduce_138( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseStatement, :test => val[1], :options => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_139( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 504
  def _reduce_140( val, _values, result )
    val[0].push val[1]
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 509
  def _reduce_141( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 518
  def _reduce_142( val, _values, result )
  @lexer.commentpop

    result = ast(
    AST::CaseOpt,
    :value => val[0],

    :statements => ast(AST::ASTArray)
  )
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 519
  def _reduce_143( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 524
  def _reduce_144( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_145( val, _values, result )
  result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 146 omitted

module_eval <<'.,.,', 'grammar.ra', 534
  def _reduce_147( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 544
  def _reduce_149( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
    val[0].push(val[2])
    result = val[0]
  else
    result = ast AST::ASTArray, :children => [val[0],val[2]]
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_150( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 151 omitted

 # reduce 152 omitted

 # reduce 153 omitted

 # reduce 154 omitted

 # reduce 155 omitted

 # reduce 156 omitted

 # reduce 157 omitted

 # reduce 158 omitted

module_eval <<'.,.,', 'grammar.ra', 560
  def _reduce_159( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 160 omitted

module_eval <<'.,.,', 'grammar.ra', 563
  def _reduce_161( val, _values, result )
 result = [val[0][:value]]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 565
  def _reduce_163( val, _values, result )
 result = val[0] += val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 574
  def _reduce_164( val, _values, result )
  val[1].each do |file|
    import(file)
  end

  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 586
  def _reduce_165( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :code => val[4],
                                                                       :line => val[0][:line]))
  @lexer.indefine = false

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 591
  def _reduce_166( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :line => val[0][:line]))
  @lexer.indefine = false
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 601
  def _reduce_167( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :code => val[5], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 608
  def _reduce_168( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 619
  def _reduce_169( val, _values, result )
   puts "Parsed cloudres"
  @lexer.commentpop
  ast(AST::Resource, :type => val[1], :instances => val[3])
  result = Puppet::Parser::AST::Cloudres.new(val[1],
                                             ast_context(true).merge(:code => val[3],
                                                                     :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 619
  def _reduce_170( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 639
  def _reduce_171( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1],
                                         ast_context(true).merge(:parent => val[2], :code => val[4],
                                                                 :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 642
  def _reduce_172( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1], ast_context(true).merge(:parent => val[2], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 643
  def _reduce_173( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 645
  def _reduce_174( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 646
  def _reduce_175( val, _values, result )
 result = "class"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 653
  def _reduce_176( val, _values, result )
    result = [result]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 657
  def _reduce_177( val, _values, result )
    result = val[0]
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 661
  def _reduce_178( val, _values, result )
  result = ast AST::HostName, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 662
  def _reduce_179( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 663
  def _reduce_180( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 664
  def _reduce_181( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 182 omitted

module_eval <<'.,.,', 'grammar.ra', 670
  def _reduce_183( val, _values, result )
  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 674
  def _reduce_184( val, _values, result )
  result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 185 omitted

module_eval <<'.,.,', 'grammar.ra', 679
  def _reduce_186( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 683
  def _reduce_187( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 188 omitted

module_eval <<'.,.,', 'grammar.ra', 690
  def _reduce_189( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 695
  def _reduce_190( val, _values, result )
  Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 699
  def _reduce_191( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 701
  def _reduce_192( val, _values, result )
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 703
  def _reduce_193( val, _values, result )
  result = [val[0][:value]]
   result
  end
.,.,

 # reduce 194 omitted

module_eval <<'.,.,', 'grammar.ra', 708
  def _reduce_195( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 196 omitted

module_eval <<'.,.,', 'grammar.ra', 713
  def _reduce_197( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 198 omitted

 # reduce 199 omitted

module_eval <<'.,.,', 'grammar.ra', 719
  def _reduce_200( val, _values, result )
  result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 720
  def _reduce_201( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 721
  def _reduce_202( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 722
  def _reduce_203( val, _values, result )
 result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 204 omitted

 # reduce 205 omitted

 # reduce 206 omitted

module_eval <<'.,.,', 'grammar.ra', 728
  def _reduce_207( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 733
  def _reduce_208( val, _values, result )
  result = ast AST::Regex, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 741
  def _reduce_209( val, _values, result )
  if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 748
  def _reduce_210( val, _values, result )
    if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 750
  def _reduce_211( val, _values, result )
  result = ast AST::ASTHash
   result
  end
.,.,

 # reduce 212 omitted

module_eval <<'.,.,', 'grammar.ra', 760
  def _reduce_213( val, _values, result )
    if val[0].instance_of?(AST::ASTHash)
    result = val[0].merge(val[2])
  else
    result = ast AST::ASTHash, :value => val[0]
    result.merge(val[2])
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 764
  def _reduce_214( val, _values, result )
  result = ast AST::ASTHash, { :value => { val[0] => val[2] } }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 765
  def _reduce_215( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 766
  def _reduce_216( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 771
  def _reduce_217( val, _values, result )
  result = ast AST::HashOrArrayAccess, :variable => val[0][:value], :key => val[2]
   result
  end
.,.,

 # reduce 218 omitted

module_eval <<'.,.,', 'grammar.ra', 776
  def _reduce_219( val, _values, result )
    result = ast AST::HashOrArrayAccess, :variable => val[0], :key => val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet

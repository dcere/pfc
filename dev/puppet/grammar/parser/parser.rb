#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'

module Puppet
  class ParseError < Puppet::Error; end
  class ImportError < Racc::ParseError; end
  class AlreadyImportedError < ImportError; end
end


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id98e1917ab2', 'grammar.ra', 782

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:
..end grammar.ra modeval..id98e1917ab2

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 71, :_reduce_3,
 2, 71, :_reduce_4,
 1, 74, :_reduce_5,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 3, 89, :_reduce_21,
 3, 89, :_reduce_22,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 4, 82, :_reduce_30,
 5, 82, :_reduce_31,
 3, 82, :_reduce_32,
 2, 82, :_reduce_33,
 1, 94, :_reduce_34,
 3, 94, :_reduce_35,
 1, 93, :_reduce_36,
 3, 93, :_reduce_37,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 5, 75, :_reduce_49,
 5, 75, :_reduce_50,
 5, 75, :_reduce_51,
 5, 87, :_reduce_52,
 2, 76, :_reduce_53,
 1, 115, :_reduce_54,
 2, 115, :_reduce_55,
 6, 77, :_reduce_56,
 2, 77, :_reduce_57,
 3, 116, :_reduce_58,
 3, 116, :_reduce_59,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 3, 117, :_reduce_62,
 1, 118, :_reduce_none,
 3, 118, :_reduce_64,
 1, 119, :_reduce_65,
 1, 119, :_reduce_66,
 3, 120, :_reduce_67,
 3, 120, :_reduce_68,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 4, 122, :_reduce_71,
 1, 109, :_reduce_72,
 3, 109, :_reduce_73,
 0, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 107, :_reduce_76,
 1, 99, :_reduce_77,
 1, 100, :_reduce_78,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 3, 78, :_reduce_86,
 3, 78, :_reduce_87,
 3, 88, :_reduce_88,
 0, 111, :_reduce_89,
 1, 111, :_reduce_90,
 3, 111, :_reduce_91,
 3, 125, :_reduce_92,
 3, 126, :_reduce_93,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 0, 114, :_reduce_96,
 1, 114, :_reduce_97,
 3, 114, :_reduce_98,
 4, 106, :_reduce_99,
 3, 106, :_reduce_100,
 1, 98, :_reduce_101,
 2, 98, :_reduce_102,
 2, 128, :_reduce_103,
 1, 129, :_reduce_104,
 2, 129, :_reduce_105,
 1, 101, :_reduce_106,
 4, 92, :_reduce_107,
 4, 92, :_reduce_108,
 2, 80, :_reduce_109,
 5, 130, :_reduce_110,
 4, 130, :_reduce_111,
 0, 131, :_reduce_none,
 2, 131, :_reduce_113,
 4, 131, :_reduce_114,
 3, 131, :_reduce_115,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 96, :_reduce_118,
 3, 96, :_reduce_119,
 3, 96, :_reduce_120,
 3, 96, :_reduce_121,
 3, 96, :_reduce_122,
 3, 96, :_reduce_123,
 3, 96, :_reduce_124,
 3, 96, :_reduce_125,
 3, 96, :_reduce_126,
 2, 96, :_reduce_127,
 3, 96, :_reduce_128,
 3, 96, :_reduce_129,
 3, 96, :_reduce_130,
 3, 96, :_reduce_131,
 3, 96, :_reduce_132,
 3, 96, :_reduce_133,
 2, 96, :_reduce_134,
 3, 96, :_reduce_135,
 3, 96, :_reduce_136,
 3, 96, :_reduce_137,
 5, 79, :_reduce_138,
 1, 134, :_reduce_139,
 2, 134, :_reduce_140,
 5, 135, :_reduce_141,
 4, 135, :_reduce_142,
 1, 136, :_reduce_143,
 3, 136, :_reduce_144,
 3, 102, :_reduce_145,
 1, 138, :_reduce_none,
 4, 138, :_reduce_147,
 1, 140, :_reduce_none,
 3, 140, :_reduce_149,
 3, 139, :_reduce_150,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_159,
 1, 137, :_reduce_none,
 1, 141, :_reduce_161,
 1, 142, :_reduce_none,
 3, 142, :_reduce_163,
 2, 81, :_reduce_164,
 6, 83, :_reduce_165,
 5, 83, :_reduce_166,
 7, 84, :_reduce_167,
 6, 84, :_reduce_168,
 0, 146, :_reduce_169,
 7, 86, :_reduce_170,
 1, 145, :_reduce_171,
 6, 85, :_reduce_172,
 5, 85, :_reduce_173,
 1, 113, :_reduce_174,
 1, 108, :_reduce_175,
 1, 108, :_reduce_176,
 1, 147, :_reduce_177,
 3, 147, :_reduce_178,
 1, 149, :_reduce_179,
 1, 150, :_reduce_180,
 1, 150, :_reduce_181,
 1, 150, :_reduce_182,
 1, 150, :_reduce_none,
 0, 72, :_reduce_184,
 0, 151, :_reduce_185,
 1, 143, :_reduce_none,
 3, 143, :_reduce_187,
 4, 143, :_reduce_188,
 1, 152, :_reduce_none,
 3, 152, :_reduce_190,
 3, 153, :_reduce_191,
 1, 153, :_reduce_192,
 3, 153, :_reduce_193,
 1, 153, :_reduce_194,
 1, 148, :_reduce_none,
 2, 148, :_reduce_196,
 1, 144, :_reduce_none,
 2, 144, :_reduce_198,
 1, 154, :_reduce_none,
 1, 154, :_reduce_none,
 1, 103, :_reduce_201,
 3, 104, :_reduce_202,
 4, 104, :_reduce_203,
 2, 104, :_reduce_204,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 0, 112, :_reduce_none,
 1, 112, :_reduce_208,
 1, 133, :_reduce_209,
 3, 132, :_reduce_210,
 4, 132, :_reduce_211,
 2, 132, :_reduce_212,
 1, 155, :_reduce_none,
 3, 155, :_reduce_214,
 3, 156, :_reduce_215,
 1, 157, :_reduce_216,
 1, 157, :_reduce_217,
 4, 124, :_reduce_218,
 1, 105, :_reduce_none,
 4, 105, :_reduce_220 ]

racc_reduce_n = 221

racc_shift_n = 381

clist = [
'247,248,237,54,238,56,230,245,165,75,80,224,213,185,189,151,173,214',
'57,223,246,113,180,182,186,188,164,230,231,75,80,227,228,75,80,341,337',
'101,340,103,152,334,53,241,271,181,184,172,61,191,192,175,176,178,179',
'99,183,187,75,80,64,131,101,177,103,131,74,172,75,80,88,91,130,61,96',
'237,130,134,81,100,99,134,92,37,345,106,65,118,164,67,244,74,346,64',
'11,88,91,75,80,96,239,74,143,81,100,88,257,92,64,96,106,65,320,202,67',
'75,80,92,64,101,131,103,183,187,239,75,80,213,64,177,74,130,214,64,88',
'257,134,99,96,131,230,362,202,75,80,61,92,101,74,103,130,149,88,91,315',
'134,96,64,74,49,81,100,88,257,92,99,96,106,47,48,202,323,237,37,92,64',
'74,38,227,228,88,91,235,65,96,64,67,327,81,100,75,80,92,37,101,106,103',
'38,37,149,75,80,38,64,101,64,103,329,164,11,75,80,99,309,101,37,103',
'-107,270,118,268,269,99,74,230,260,11,88,91,332,64,96,99,74,221,81,100',
'88,91,92,218,96,106,74,306,81,100,88,91,92,64,96,106,165,305,81,100',
'75,80,92,64,101,106,103,212,211,341,75,80,340,64,87,-107,-107,-107,-107',
'-153,75,80,99,-157,101,261,103,183,187,230,260,232,77,74,177,230,231',
'88,91,-155,163,96,99,74,162,81,100,88,91,92,159,96,106,74,-154,81,-174',
'88,91,92,64,96,54,-158,-156,81,100,75,80,92,64,101,106,103,339,37,304',
'75,80,38,64,101,312,-23,-23,-23,-23,75,80,99,335,101,49,103,230,231',
'-152,75,80,226,74,-151,227,228,88,91,56,347,96,99,74,143,81,100,88,91',
'92,349,96,106,74,150,81,351,88,91,92,64,96,149,74,143,81,100,88,257',
'92,64,96,106,75,80,202,303,101,355,92,64,299,75,80,140,113,101,121,103',
'235,64,359,109,191,192,175,176,178,179,-151,183,187,360,108,99,264,74',
'177,109,59,88,91,299,58,96,74,367,52,81,88,91,369,92,96,235,333,-153',
'81,100,-152,371,92,162,64,106,185,189,-25,-25,-25,-25,-208,64,373,180',
'182,186,188,-154,40,191,192,175,176,297,75,80,183,187,101,379,103,380',
',177,,,181,184,,,191,192,175,176,178,179,99,183,187,75,80,,,101,177',
'103,,74,,,,88,91,,,96,,,,81,100,99,,92,75,80,106,,101,,103,,74,,64,',
'88,91,,,96,,,,81,100,99,,92,75,80,106,,101,,103,,74,,64,,88,91,,,96',
',,,81,100,99,,92,,,106,43,44,45,41,,74,,64,,88,91,,,96,,219,,81,100',
',,92,,,106,185,189,43,44,45,41,,64,,180,182,186,188,,,191,192,175,176',
',75,80,183,187,101,,103,,,177,,,181,184,,,191,192,175,176,178,179,99',
'183,187,75,80,,,101,177,103,,74,,,,88,91,,,96,,,,81,100,99,,92,75,80',
'106,,101,,103,,74,,64,,88,91,,,96,,,,81,100,99,,92,75,80,106,,101,,103',
',74,,64,,88,91,,,96,,,,81,100,99,,92,75,80,106,,101,,103,,74,,64,,88',
'91,,,96,,,,81,100,99,,92,75,80,106,,101,,,,74,,64,,88,91,,,96,,,,81',
'100,,,92,75,80,106,,101,,103,,74,,64,,88,257,,,96,75,80,,202,101,99',
',92,,75,80,,,101,,103,74,,64,,88,91,,,96,,,,81,100,,99,92,74,,106,,88',
'257,,,96,74,64,,202,88,91,,92,96,,75,80,81,100,,,92,344,64,106,75,80',
',,101,,103,64,,,75,80,,,101,,103,,,,75,80,99,74,101,,103,88,257,,,96',
'99,74,,202,,88,91,92,,96,99,74,,81,100,88,91,92,64,96,106,74,,81,100',
'88,91,92,64,96,106,,,81,100,75,80,92,64,101,106,103,,,,,,,64,175,176',
',75,80,183,187,101,99,103,175,176,177,,,183,187,,,74,,,177,88,91,99',
'155,96,,,,81,100,75,80,92,74,,106,258,88,91,,,96,,64,,81,100,75,80,92',
',101,106,103,,,,,,,64,,,74,,,,88,257,99,,96,75,80,,202,101,,103,92,74',
',,,88,91,,,96,,64,,81,100,99,,92,75,80,106,,101,,103,,74,,64,,88,91',
',,96,,,,81,100,99,,92,75,80,106,,101,,103,,74,,64,,88,91,,,96,,,,81',
'100,99,,92,75,80,106,,101,,,,74,,64,,88,91,,,96,,,,81,100,,,92,75,80',
'106,,101,161,103,,74,,64,,88,207,,,96,75,80,,202,101,99,103,92,,,,,',
',,,74,,64,,88,91,99,,96,,,,81,100,,,92,74,,106,,88,91,,,96,,64,,81,100',
'75,80,92,,101,106,103,,,,75,80,,64,101,,103,,,,75,80,99,,101,,103,,',
',,,99,74,,,,88,91,,,96,99,74,,81,100,88,91,92,,96,106,74,,81,100,88',
'91,92,64,96,106,,,81,100,75,80,92,64,101,106,103,,,,75,80,,64,101,,103',
',,,75,80,99,,101,,103,,,,,,99,74,,,,88,91,,,96,99,74,,81,100,88,91,92',
',96,106,74,,81,100,88,91,92,64,96,106,,,81,100,75,80,92,64,101,106,103',
',,,75,80,,64,101,161,103,,,,,,99,,,,,,,,,,99,74,,,,88,91,,289,96,,74',
',81,100,88,91,92,,96,106,,,81,100,,,92,64,28,106,34,1,,8,12,,19,64,25',
'190,30,378,2,,,11,,,185,189,,,,,,,,180,182,186,188,,28,,34,1,7,8,12',
',19,,25,,30,,2,,,11,181,184,,,191,192,175,176,178,179,,183,187,194,376',
',,,177,,7,,185,189,,,,,,,,180,182,186,188,28,,34,1,,8,12,,19,,25,,30',
',2,,,11,372,181,184,,,191,192,175,176,178,179,,183,187,,,326,,,177,7',
'28,,34,1,,8,12,,19,,25,,30,358,2,,28,11,34,1,,8,12,,19,,25,,30,302,2',
',,11,28,,34,1,7,8,12,,19,,25,,30,,2,,28,11,34,1,7,8,12,,19,,25,,30,',
'2,185,189,11,,,,,7,,180,182,186,188,,,185,189,,,,,,,7,180,182,186,188',
',,,,181,184,,,191,192,175,176,178,179,,183,187,,,181,184,,177,191,192',
'175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186,188,,,185,189',
',,,,,,,180,182,186,188,,,,,,,,,191,192,175,176,178,179,,183,187,,,,',
',177,191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186',
'188,,,185,189,,,,,,,,180,182,186,188,,,,,181,184,,,191,192,175,176,178',
'179,,183,187,,,,184,,177,191,192,175,176,178,179,,183,187,185,189,,',
',177,,,,180,182,186,188,,,185,189,,,,,,,267,180,182,186,188,,,,,181',
'184,,,191,192,175,176,178,179,,183,187,,,181,184,,177,191,192,175,176',
'178,179,,183,187,185,189,,,,177,,,,180,182,186,188,,,185,189,,,,,,,',
'180,182,186,188,,,,,181,184,,,191,192,175,176,178,179,,183,187,,,181',
'184,,177,191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182',
'186,188,,,185,189,,,,,,,,180,182,186,188,,,,,181,184,,,191,192,175,176',
'178,179,,183,187,,,,,,177,191,192,175,176,178,179,,183,187,185,189,',
',,177,,,,180,182,186,188,,,185,189,,,,,,,,180,182,186,188,,,,,181,184',
',,191,192,175,176,178,179,,183,187,,,181,184,,177,191,192,175,176,178',
'179,,183,187,185,189,,,,177,,,,180,182,186,188,,,,189,,,,,,,,180,,,',
',,,,181,184,189,,191,192,175,176,178,179,180,183,187,,,,,189,177,191',
'192,175,176,178,179,180,183,187,,,,,,177,,189,,191,192,175,176,178,179',
'180,183,187,,,,,,177,191,192,175,176,178,179,,183,187,,,,,,177,,,,191',
'192,175,176,178,179,,183,187,,28,,34,1,177,8,12,,19,,25,,30,28,2,34',
'1,11,8,12,,19,,25,,30,,2,,28,11,34,1,,8,12,,19,7,25,,30,,2,,,11,,,,',
'7,191,192,175,176,178,179,,183,187,,,,,,177,7' ]
racc_action_table = arr = Array.new(2162, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

clist = [
'158,158,149,14,144,14,156,156,91,103,103,129,113,158,158,62,103,113',
'14,129,156,39,158,158,158,158,91,265,265,269,269,144,144,271,271,289',
'269,271,289,271,62,265,14,149,171,158,158,103,152,158,158,158,158,158',
'158,271,158,158,233,233,183,57,233,158,233,131,271,269,364,364,271,271',
'57,151,271,207,131,57,271,271,233,131,271,42,294,271,152,42,207,152',
'153,233,294,271,42,233,233,194,194,233,234,364,235,233,233,364,364,233',
'152,364,233,151,236,364,151,237,237,364,233,237,53,237,272,272,146,345',
'345,306,364,272,194,53,306,151,194,194,53,237,194,229,331,331,194,162',
'162,19,194,162,237,162,229,239,237,237,225,229,237,194,345,8,237,237',
'345,345,237,162,345,237,8,8,345,240,143,12,345,237,162,12,225,225,162',
'162,141,19,162,345,19,245,162,162,340,340,162,1,340,162,340,1,20,140',
'241,241,20,162,241,19,241,254,257,20,192,192,340,220,192,50,192,261',
'169,50,168,169,241,340,168,168,50,340,340,260,187,340,192,241,126,340',
'340,241,241,340,120,241,340,192,216,241,241,192,192,241,340,192,241',
'118,215,192,192,191,191,192,241,191,192,191,112,111,339,25,25,339,192',
'25,261,261,261,261,97,28,28,191,95,28,160,28,273,273,160,160,138,25',
'191,273,138,138,191,191,93,90,191,28,25,89,191,191,25,25,191,85,25,191',
'28,84,25,81,28,28,25,191,28,79,78,76,28,28,30,30,28,25,30,28,30,288',
'221,214,329,329,221,28,329,221,33,33,33,33,247,247,30,266,247,74,247',
'266,266,73,258,258,135,30,71,135,135,30,30,68,296,30,247,329,297,30',
'30,329,329,30,298,329,30,247,59,329,301,247,247,329,30,247,58,258,56',
'247,247,258,258,247,329,258,247,163,163,258,213,163,307,258,247,308',
'164,164,55,51,164,46,164,198,258,318,34,277,277,277,277,277,277,195',
'277,277,325,31,164,164,163,277,211,18,163,163,210,16,163,164,341,13',
'163,164,164,346,163,164,348,262,209,164,164,196,356,164,205,163,164',
'262,262,4,4,4,4,362,164,363,262,262,262,262,203,2,276,276,276,276,200',
'47,47,276,276,47,375,47,377,,276,,,262,262,,,262,262,262,262,262,262',
'47,262,262,48,48,,,48,262,48,,47,,,,47,47,,,47,,,,47,47,48,,47,49,49',
'47,,49,,49,,48,,47,,48,48,,,48,,,,48,48,49,,48,189,189,48,,189,,189',
',49,,48,,49,49,,,49,,,,49,49,189,,49,,,49,5,5,5,5,,189,,49,,189,189',
',,189,,124,,189,189,,,189,,,189,124,124,9,9,9,9,,189,,124,124,124,124',
',,275,275,275,275,,52,52,275,275,52,,52,,,275,,,124,124,,,124,124,124',
'124,124,124,52,124,124,188,188,,,188,124,188,,52,,,,52,52,,,52,,,,52',
'52,188,,52,54,54,52,,54,,54,,188,,52,,188,188,,,188,,,,188,188,54,,188',
'165,165,188,,165,,165,,54,,188,,54,54,,,54,,,,54,54,165,,54,304,304',
'54,,304,,304,,165,,54,,165,165,,,165,,,,165,165,304,,165,218,218,165',
',218,,,,304,,165,,304,304,,,304,,,,304,304,,,304,303,303,304,,303,,303',
',218,,304,,218,218,,,218,299,299,,218,299,303,,218,,186,186,,,186,,186',
'303,,218,,303,303,,,303,,,,303,303,,186,303,299,,303,,299,299,,,299',
'186,303,,299,186,186,,299,186,,292,292,186,186,,,186,292,299,186,185',
'185,,,185,,185,186,,,184,184,,,184,,184,,,,182,182,185,292,182,,182',
'292,292,,,292,184,185,,292,,185,185,292,,185,182,184,,185,185,184,184',
'185,292,184,185,182,,184,184,182,182,184,185,182,184,,,182,182,181,181',
'182,184,181,182,181,,,,,,,182,291,291,,77,77,291,291,77,181,77,290,290',
'291,,,290,290,,,181,,,290,181,181,77,77,181,,,,181,181,159,159,181,77',
',181,159,77,77,,,77,,181,,77,77,180,180,77,,180,77,180,,,,,,,77,,,159',
',,,159,159,180,,159,80,80,,159,80,,80,159,180,,,,180,180,,,180,,159',
',180,180,80,,180,224,224,180,,224,,224,,80,,180,,80,80,,,80,,,,80,80',
'224,,80,223,223,80,,223,,223,,224,,80,,224,224,,,224,,,,224,224,223',
',224,108,108,224,,108,,,,223,,224,,223,223,,,223,,,,223,223,,,223,87',
'87,223,,87,87,87,,108,,223,,108,108,,,108,106,106,,108,106,87,106,108',
',,,,,,,,87,,108,,87,87,106,,87,,,,87,87,,,87,106,,87,,106,106,,,106',
',87,,106,106,175,175,106,,175,106,175,,,,179,179,,106,179,,179,,,,178',
'178,175,,178,,178,,,,,,179,175,,,,175,175,,,175,178,179,,175,175,179',
'179,175,,179,175,178,,179,179,178,178,179,175,178,179,,,178,178,177',
'177,178,179,177,178,177,,,,176,176,,178,176,,176,,,,99,99,177,,99,,99',
',,,,,176,177,,,,177,177,,,177,99,176,,177,177,176,176,177,,176,177,99',
',176,176,99,99,176,177,99,176,,,99,99,100,100,99,176,100,99,100,,,,101',
'101,,99,101,101,101,,,,,,100,,,,,,,,,,101,100,,,,100,100,,190,100,,101',
',100,100,101,101,100,,101,100,,,101,101,,,101,100,190,101,190,190,,190',
'190,,190,101,190,104,190,369,190,,,190,,,104,104,,,,,,,,104,104,104',
'104,,369,,369,369,190,369,369,,369,,369,,369,,369,,,369,104,104,,,104',
'104,104,104,104,104,,104,104,107,367,,,,104,,369,,107,107,,,,,,,,107',
'107,107,107,367,,367,367,,367,367,,367,,367,,367,,367,,,367,357,107',
'107,,,107,107,107,107,107,107,,107,107,,,244,,,107,367,357,,357,357',
',357,357,,357,,357,,357,309,357,,244,357,244,244,,244,244,,244,,244',
',244,212,244,,,244,309,,309,309,357,309,309,,309,,309,,309,,309,,212',
'309,212,212,244,212,212,,212,,212,,212,,212,317,317,212,,,,,309,,317',
'317,317,317,,,123,123,,,,,,,212,123,123,123,123,,,,,317,317,,,317,317',
'317,317,317,317,,317,317,,,123,123,,317,123,123,123,123,123,123,,123',
'123,313,313,,,,123,,,,313,313,313,313,,,314,314,,,,,,,,314,314,314,314',
',,,,,,,,313,313,313,313,313,313,,313,313,,,,,,313,314,314,314,314,314',
'314,,314,314,127,127,,,,314,,,,127,127,127,127,,,278,278,,,,,,,,278',
'278,278,278,,,,,127,127,,,127,127,127,127,127,127,,127,127,,,,278,,127',
'278,278,278,278,278,278,,278,278,122,122,,,,278,,,,122,122,122,122,',
',166,166,,,,,,,166,166,166,166,166,,,,,122,122,,,122,122,122,122,122',
'122,,122,122,,,166,166,,122,166,166,166,166,166,166,,166,166,321,321',
',,,166,,,,321,321,321,321,,,139,139,,,,,,,,139,139,139,139,,,,,321,321',
',,321,321,321,321,321,321,,321,321,,,139,139,,321,139,139,139,139,139',
'139,,139,139,352,352,,,,139,,,,352,352,352,352,,,281,281,,,,,,,,281',
'281,281,281,,,,,352,352,,,352,352,352,352,352,352,,352,352,,,,,,352',
'281,281,281,281,281,281,,281,281,338,338,,,,281,,,,338,338,338,338,',
',353,353,,,,,,,,353,353,353,353,,,,,338,338,,,338,338,338,338,338,338',
',338,338,,,353,353,,338,353,353,353,353,353,353,,353,353,324,324,,,',
'353,,,,324,324,324,324,,,,285,,,,,,,,285,,,,,,,,324,324,279,,324,324',
'324,324,324,324,279,324,324,,,,,282,324,285,285,285,285,285,285,282',
'285,285,,,,,,285,,283,,279,279,279,279,279,279,283,279,279,,,,,,279',
'282,282,282,282,282,282,,282,282,,,,,,282,,,,283,283,283,283,283,283',
',283,283,,0,,0,0,283,0,0,,0,,0,,0,287,0,287,287,0,287,287,,287,,287',
',287,,287,,22,287,22,22,,22,22,,22,0,22,,22,,22,,,22,,,,,287,286,286',
'286,286,286,286,,286,286,,,,,,286,22' ]
racc_action_check = arr = Array.new(2162, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

racc_action_pointer = [
  2064,   157,   429,   nil,   398,   519,   nil,   nil,   153,   546,
   nil,   nil,   137,   426,    -3,   nil,   429,   nil,   433,   143,
   162,   nil,  2093,   nil,   nil,   265,   nil,   nil,   275,   nil,
   322,   419,   nil,   277,   414,   nil,   nil,   nil,   nil,    -3,
   nil,   nil,    47,   nil,   nil,   nil,   371,   477,   502,   527,
   179,   385,   625,    96,   675,   400,   348,    37,   346,   378,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   355,   nil,
   nil,   335,   nil,   330,   343,   nil,   298,   938,   297,   313,
  1010,   307,   nil,   nil,   288,   284,   nil,  1110,   nil,   295,
   285,     2,   nil,   273,   nil,   257,   nil,   253,   nil,  1261,
  1308,  1318,   nil,     7,  1374,   nil,  1127,  1428,  1085,   nil,
   nil,   253,   256,   -23,   nil,   nil,   nil,   nil,   247,   nil,
   232,   nil,  1725,  1560,   590,   nil,   197,  1665,   nil,    -7,
   nil,    41,   nil,   nil,   nil,   310,   nil,   nil,   281,  1800,
   159,   170,   nil,   161,   -18,   nil,   112,   nil,   nil,    -9,
   nil,    71,    46,    82,   nil,   nil,    -5,   nil,    -4,   968,
   275,   nil,   141,   395,   404,   700,  1740,   nil,   213,   209,
   nil,    33,   nil,   nil,   nil,  1174,  1251,  1241,  1194,  1184,
   985,   921,   874,    -2,   864,   854,   801,   168,   650,   552,
  1341,   255,   208,   nil,    95,   400,   430,   nil,   401,   nil,
   458,   nil,   nil,   449,   nil,   450,   nil,    64,   nil,   427,
   395,   430,  1517,   385,   318,   229,   232,   nil,   750,   nil,
   205,   296,   nil,  1060,  1035,   129,   nil,   nil,   nil,   115,
   nil,   nil,   nil,    56,    88,    62,   103,   113,   nil,   111,
   162,   198,   nil,   nil,  1483,   162,   nil,   342,   nil,   nil,
   nil,   nil,   nil,   nil,   196,   nil,   nil,   184,   352,   nil,
   222,   209,   442,   nil,   nil,    16,   340,   nil,   nil,    27,
   nil,    31,    62,   224,   nil,   569,   421,   364,  1680,  1998,
   nil,  1860,  2013,  2031,   nil,  1980,  2093,  2077,   322,     4,
   892,   882,   844,   nil,    72,   nil,   355,   328,   365,   792,
   nil,   371,   nil,   775,   725,   nil,    92,   377,   364,  1501,
   nil,   nil,   nil,  1605,  1620,   nil,   nil,  1545,   406,   nil,
   nil,  1785,   nil,   nil,  1965,   417,   nil,   nil,   nil,   332,
   nil,   129,   nil,   nil,   nil,   nil,   nil,   nil,  1905,   235,
   188,   432,   nil,   nil,   nil,   123,   437,   nil,   436,   nil,
   nil,   nil,  1845,  1920,   nil,   nil,   445,  1467,   nil,   nil,
   nil,   nil,   456,   458,    66,   nil,   nil,  1428,   nil,  1375,
   nil,   nil,   nil,   nil,   nil,   475,   nil,   477,   nil,   nil,
   nil ]

racc_action_default = [
  -184,  -221,   -54,   -19,    -8,   -20,    -9,  -169,  -221,  -221,
   -10,  -174,  -176,  -221,  -221,   -11,   -24,   -12,  -221,  -221,
  -221,   -13,    -1,   -14,    -2,  -175,   -15,    -3,  -221,   -16,
  -221,  -221,   -17,    -6,  -221,   -18,    -7,  -176,  -175,  -184,
   -55,   -29,  -221,   -26,   -27,   -28,  -221,  -221,  -221,  -221,
  -221,  -184,  -221,  -184,  -221,   -57,   -89,  -184,   -96,  -221,
  -183,  -181,  -184,  -177,  -209,  -180,  -179,  -182,  -221,   -53,
    -4,   -39,  -160,   -40,  -201,  -101,   -41,  -221,  -219,  -221,
  -221,   -78,   -42,   -46,   -43,  -221,   -44,  -221,  -106,   -45,
   -33,   -77,   -76,   -47,   -34,   -48,  -159,   -38,  -117,  -221,
  -221,  -221,  -116,  -221,  -221,  -109,  -221,  -221,   -89,  -161,
  -162,  -164,  -221,  -185,  -186,   -25,   -22,   -24,  -175,   -23,
  -221,  -171,   -86,   -88,  -221,   -21,  -184,   -87,   -70,  -221,
  -201,  -184,   -69,   -60,   -77,  -221,   -61,   -63,  -221,   -36,
   -96,  -207,   -90,  -221,  -221,   -94,  -207,   -95,   -97,  -221,
   381,  -221,  -221,  -221,  -195,   -32,  -221,  -102,  -221,  -221,
  -221,  -204,  -221,  -221,  -221,  -221,  -221,  -134,  -221,  -221,
  -213,  -221,  -216,  -212,  -217,  -221,  -221,  -221,  -221,  -221,
  -221,  -221,  -221,  -221,  -221,  -221,  -221,  -221,  -221,  -221,
  -221,  -221,  -221,  -127,  -221,   -80,   -81,   -72,  -207,  -156,
  -221,   -82,   -78,   -83,   -84,   -85,  -155,   -77,  -157,   -79,
   -74,  -221,  -221,  -194,  -192,  -221,  -207,  -189,  -221,  -218,
  -221,  -221,  -197,  -221,  -221,  -221,   -58,   -66,   -65,  -221,
  -205,  -206,  -108,  -221,  -207,  -208,  -221,  -221,   -59,  -208,
  -221,  -221,  -178,  -196,  -221,  -206,   -30,  -221,  -104,  -103,
  -151,  -152,  -158,  -154,  -221,  -145,  -146,   -77,  -221,  -153,
  -206,  -202,  -221,   -35,  -100,  -221,  -221,  -137,  -202,  -221,
  -210,  -221,  -124,  -123,  -118,  -125,  -126,  -129,  -136,  -131,
  -119,  -135,  -133,  -130,  -120,  -132,  -128,    -5,  -221,  -112,
  -121,  -122,  -221,  -139,  -221,  -143,  -221,   -89,  -221,   -75,
  -163,  -221,  -166,  -221,  -221,  -187,  -208,  -221,   -74,  -221,
  -198,  -199,  -200,   -67,   -68,   -64,   -62,   -37,  -221,   -91,
   -51,   -92,   -98,   -52,   -93,  -221,  -173,   -31,  -105,  -221,
  -148,  -207,  -203,  -220,   -99,  -107,  -214,  -211,  -215,  -112,
  -221,  -221,  -111,  -140,  -138,  -221,  -221,   -50,  -207,   -49,
   -73,  -165,  -193,  -191,  -190,  -188,  -221,  -221,  -168,   -56,
  -172,  -150,  -206,  -221,  -221,  -110,  -113,  -221,  -144,  -221,
   -71,  -170,  -167,  -147,  -149,  -221,  -115,  -221,  -142,  -114,
  -141 ]

racc_goto_table = [
    13,    16,    70,    22,   105,   217,    14,    94,   141,   256,
    39,   201,   145,   236,   104,   110,   107,   157,   240,   254,
   205,    51,    13,    16,   210,   204,    68,   293,    14,   138,
   298,   146,   132,   122,   123,   124,   132,    63,   127,   342,
   174,   112,   135,   117,   322,   209,   144,    69,    14,   115,
   116,   117,   156,   126,   295,   364,    14,   115,   125,   170,
   198,   288,   160,    90,    42,   255,   158,    60,    50,   119,
   296,   196,    55,   331,   316,    24,   168,   119,   111,   292,
   220,   120,    46,   301,    62,   166,   167,   203,   307,   365,
   153,   249,   193,   243,   145,   215,   259,   216,   350,   310,
   169,   128,    18,   nil,   nil,   128,   318,   nil,   330,   nil,
   132,   nil,   nil,   234,   114,   325,   nil,   nil,   254,   nil,
   225,   201,   251,   nil,   nil,   343,   114,   nil,   356,   208,
   205,   259,   nil,   nil,   308,   204,   nil,   154,   253,   265,
   266,   nil,   nil,   nil,   nil,   263,   nil,   nil,   262,   nil,
   nil,   nil,   295,   nil,   nil,   209,   195,   251,   nil,   252,
   nil,   272,   273,   274,   275,   276,   277,   278,   279,   242,
   281,   282,   283,   253,   285,   286,   nil,   290,   291,   128,
   208,   196,   nil,   nil,   328,   nil,   nil,   nil,   nil,   319,
    13,    16,   300,   145,   252,   259,    14,   203,   354,    60,
    60,   222,   201,   363,   nil,   368,   174,   250,   132,   313,
   314,   205,    13,    16,   374,   208,   204,   nil,    14,   317,
   370,   251,   nil,   321,   254,   336,   nil,   324,   nil,   259,
   311,   280,   206,   158,   nil,   284,   209,   253,   375,   208,
   377,   nil,   250,   nil,    13,    16,   199,   nil,   nil,   348,
    14,   nil,   nil,   nil,   nil,   251,   nil,   338,   252,   nil,
   nil,   nil,   196,   nil,   nil,   nil,   195,    70,   nil,   nil,
   nil,   253,   nil,   nil,   nil,   nil,   nil,   128,   203,   208,
   nil,   nil,   259,   206,   nil,   nil,   nil,    13,    16,   352,
   353,   nil,   252,    14,   nil,   nil,   nil,   199,   nil,   nil,
   nil,   259,   nil,   nil,   nil,   nil,   250,   nil,   251,    13,
    16,   361,   357,   208,   nil,    14,   366,   nil,   206,   nil,
   208,   nil,   nil,   nil,   253,   nil,   104,   251,   nil,   nil,
   nil,   nil,   199,   nil,   nil,   nil,   nil,    70,   nil,   nil,
   250,   nil,   206,   253,   nil,   252,   nil,   195,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   199,    13,    16,   nil,
   nil,   nil,   nil,    14,   252,   nil,   208,    13,    16,    13,
    16,   nil,   nil,    14,   nil,    14,   nil,   nil,   nil,   nil,
   nil,   nil,   206,   nil,   nil,   208,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   250,   nil,   nil,   199,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   250,   nil,   nil,   nil,   206,   nil,   nil,   nil,
   nil,   nil,   nil,   206,   nil,   nil,   nil,   nil,   nil,   nil,
   199,   nil,   nil,   nil,   nil,   nil,   nil,   199,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   199,   nil,   nil,   nil,   nil,   206,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   199 ]

racc_goto_check = [
    55,    23,     4,     2,    61,    84,    44,    26,    42,    70,
    39,    33,    56,    43,    27,    72,    27,    59,    43,    68,
    36,    39,    55,    23,    40,    35,    44,    66,    44,    24,
    41,    45,    34,    27,    27,    27,    34,    80,    27,    62,
    29,    74,    48,    23,    58,    29,    48,     6,    44,     8,
    21,    23,    24,    74,    68,    28,    44,     8,    21,    87,
    42,     5,    24,    25,    22,    69,    27,    64,    22,     6,
    43,    31,    47,    71,    49,     3,    24,     6,    73,    65,
    75,    76,    77,     5,    78,    27,    27,    34,    43,    62,
    79,    60,    27,    81,    56,    82,    29,    83,    53,    85,
    86,    30,     1,   nil,   nil,    30,    43,   nil,    70,   nil,
    34,   nil,   nil,    45,     3,     5,   nil,   nil,    68,   nil,
    48,    33,    31,   nil,   nil,    66,     3,   nil,    41,    38,
    36,    29,   nil,   nil,    40,    35,   nil,     3,    34,    24,
    24,   nil,   nil,   nil,   nil,    26,   nil,   nil,    27,   nil,
   nil,   nil,    68,   nil,   nil,    29,    30,    31,   nil,    55,
   nil,    27,    27,    27,    27,    27,    27,    27,    27,    80,
    27,    27,    27,    34,    27,    27,   nil,    27,    27,    30,
    38,    31,   nil,   nil,    59,   nil,   nil,   nil,   nil,    56,
    55,    23,    72,    56,    55,    29,    44,    34,    84,    64,
    64,     3,    33,    43,   nil,    68,    29,    30,    34,    27,
    27,    36,    55,    23,    70,    38,    35,   nil,    44,    27,
    43,    31,   nil,    27,    68,    87,   nil,    27,   nil,    29,
    39,    64,    37,    27,   nil,    64,    29,    34,     5,    38,
     5,   nil,    30,   nil,    55,    23,    32,   nil,   nil,    42,
    44,   nil,   nil,   nil,   nil,    31,   nil,    27,    55,   nil,
   nil,   nil,    31,   nil,   nil,   nil,    30,     4,   nil,   nil,
   nil,    34,   nil,   nil,   nil,   nil,   nil,    30,    34,    38,
   nil,   nil,    29,    37,   nil,   nil,   nil,    55,    23,    27,
    27,   nil,    55,    44,   nil,   nil,   nil,    32,   nil,   nil,
   nil,    29,   nil,   nil,   nil,   nil,    30,   nil,    31,    55,
    23,    26,     2,    38,   nil,    44,    61,   nil,    37,   nil,
    38,   nil,   nil,   nil,    34,   nil,    27,    31,   nil,   nil,
   nil,   nil,    32,   nil,   nil,   nil,   nil,     4,   nil,   nil,
    30,   nil,    37,    34,   nil,    55,   nil,    30,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    32,    55,    23,   nil,
   nil,   nil,   nil,    44,    55,   nil,    38,    55,    23,    55,
    23,   nil,   nil,    44,   nil,    44,   nil,   nil,   nil,   nil,
   nil,   nil,    37,   nil,   nil,    38,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    30,   nil,   nil,    32,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    30,   nil,   nil,   nil,    37,   nil,   nil,   nil,
   nil,   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,   nil,
    32,   nil,   nil,   nil,   nil,   nil,   nil,    32,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,    37,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    32 ]

racc_goto_pointer = [
   nil,   102,     3,    75,   -20,  -129,    27,   nil,     7,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,    59,     1,   -25,    38,   -18,   -14,  -276,   -63,
    48,   -37,   138,   -97,   -21,   -83,   -88,   124,    21,     9,
   -84,  -180,   -48,  -128,     6,   -27,   nil,    58,   -11,  -155,
   nil,   nil,   nil,  -201,   nil,     0,   -46,   nil,  -195,   -63,
   -67,   -24,  -250,   nil,    48,  -115,  -167,   nil,  -140,   -94,
  -150,  -185,   -19,    44,     2,   -46,    35,    75,    65,    28,
    18,   -59,   -18,   -16,  -108,  -122,    -3,   -44,   nil ]

racc_goto_default = [
   nil,   nil,   287,   133,    27,   nil,    33,    36,     4,     6,
    10,    15,    17,    21,    23,    26,    29,    32,    35,     3,
     5,     9,   nil,    83,   nil,   nil,   102,   139,   233,    97,
    71,    73,    76,    82,    84,    86,    89,    93,    95,    31,
   nil,   nil,   nil,   nil,    79,   nil,    20,   nil,   nil,   136,
   229,   137,   129,   197,   200,    78,   142,   147,   148,   nil,
   nil,   nil,   nil,    98,    72,   nil,   nil,   294,    85,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   171 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :STRING => 2,
 :DQPRE => 3,
 :DQMID => 4,
 :DQPOST => 5,
 :LBRACK => 6,
 :RBRACK => 7,
 :LBRACE => 8,
 :RBRACE => 9,
 :SYMBOL => 10,
 :FARROW => 11,
 :COMMA => 12,
 :TRUE => 13,
 :FALSE => 14,
 :EQUALS => 15,
 :APPENDS => 16,
 :LESSEQUAL => 17,
 :NOTEQUAL => 18,
 :DOT => 19,
 :COLON => 20,
 :LLCOLLECT => 21,
 :RRCOLLECT => 22,
 :QMARK => 23,
 :LPAREN => 24,
 :RPAREN => 25,
 :ISEQUAL => 26,
 :GREATEREQUAL => 27,
 :GREATERTHAN => 28,
 :LESSTHAN => 29,
 :IF => 30,
 :ELSE => 31,
 :IMPORT => 32,
 :DEFINE => 33,
 :ELSIF => 34,
 :VARIABLE => 35,
 :CLASS => 36,
 :INHERITS => 37,
 :NODE => 38,
 :BOOLEAN => 39,
 :NAME => 40,
 :SEMIC => 41,
 :CASE => 42,
 :DEFAULT => 43,
 :AT => 44,
 :LCOLLECT => 45,
 :RCOLLECT => 46,
 :CLASSREF => 47,
 :NOT => 48,
 :OR => 49,
 :AND => 50,
 :UNDEF => 51,
 :PARROW => 52,
 :PLUS => 53,
 :MINUS => 54,
 :TIMES => 55,
 :DIV => 56,
 :LSHIFT => 57,
 :RSHIFT => 58,
 :UMINUS => 59,
 :MATCH => 60,
 :NOMATCH => 61,
 :REGEX => 62,
 :IN_EDGE => 63,
 :OUT_EDGE => 64,
 :IN_EDGE_SUB => 65,
 :OUT_EDGE_SUB => 66,
 :IN => 67,
 :CLOUDRES => 68 }

racc_use_result_var = true

racc_nt_base = 69

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'STRING',
'DQPRE',
'DQMID',
'DQPOST',
'LBRACK',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'MATCH',
'NOMATCH',
'REGEX',
'IN_EDGE',
'OUT_EDGE',
'IN_EDGE_SUB',
'OUT_EDGE_SUB',
'IN',
'CLOUDRES',
'$start',
'program',
'statements_and_declarations',
'nil',
'statement_or_declaration',
'statements',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement_begin',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'cloudres',
'resourceoverride',
'append',
'relationship',
'relationship_side',
'edge',
'resourceref',
'expressions',
'funcvalues',
'rvalue',
'expression',
'comma',
'quotedtext',
'name',
'type',
'boolean',
'selector',
'variable',
'array',
'hasharrayaccesses',
'funcrvalue',
'undef',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'resourceinst',
'resourcename',
'hasharrayaccess',
'param',
'addparam',
'anyparam',
'dqrval',
'dqtail',
'ifstatement',
'else',
'hash',
'regex',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'string',
'strings',
'argumentlist',
'classparent',
'cloudname',
'@1',
'hostnames',
'nodeparent',
'nodename',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault',
'hashpairs',
'hashpair',
'key']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

module_eval <<'.,.,', 'grammar.ra', 37
  def _reduce_3( val, _values, result )
    result = ast AST::ASTArray, :children => (val[0] ? [val[0]] : [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 43
  def _reduce_4( val, _values, result )
    if val[1]
      val[0].push(val[1])
    end
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 55
  def _reduce_5( val, _values, result )
  val[0].each do |stmt|
    if stmt.is_a?(AST::TopLevelConstruct)
      error "Classes, definitions, and nodes may only appear at toplevel or inside other classes", \
          :line => stmt.context[:line], :file => stmt.context[:file]
    end
  end
  result = val[0]
   result
  end
.,.,

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

module_eval <<'.,.,', 'grammar.ra', 76
  def _reduce_21( val, _values, result )
  result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 79
  def _reduce_22( val, _values, result )
    result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

 # reduce 23 omitted

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_30( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 98
  def _reduce_31( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_32( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 111
  def _reduce_33( val, _values, result )
    result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[1],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 112
  def _reduce_34( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 118
  def _reduce_35( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 119
  def _reduce_36( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 120
  def _reduce_37( val, _values, result )
 result = val[0].push(val[2])
   result
  end
.,.,

 # reduce 38 omitted

 # reduce 39 omitted

 # reduce 40 omitted

 # reduce 41 omitted

 # reduce 42 omitted

 # reduce 43 omitted

 # reduce 44 omitted

 # reduce 45 omitted

 # reduce 46 omitted

 # reduce 47 omitted

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 140
  def _reduce_49( val, _values, result )
     puts "Syntax 1"
     @lexer.commentpop
     result = ast(AST::Resource, :type => val[0], :instances => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 144
  def _reduce_50( val, _values, result )
     # This is a deprecated syntax.
     error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 150
  def _reduce_51( val, _values, result )
     puts "Syntax 2"
     # a defaults setting for a type
     @lexer.commentpop
     result = ast(AST::ResourceDefaults, :type => val[0], :parameters => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 156
  def _reduce_52( val, _values, result )
  @lexer.commentpop
  result = ast AST::ResourceOverride, :object => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_53( val, _values, result )
  type = val[0]

  if (type == :exported and ! Puppet[:storeconfigs])
    Puppet.warning addcontext("You cannot collect without storeconfigs being set")
  end

  error "Defaults are not virtualizable" if val[1].is_a? AST::ResourceDefaults

  method = type.to_s + "="

  # Just mark our resource as exported and pass it through.
  val[1].send(method, true)

  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_54( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 177
  def _reduce_55( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 200
  def _reduce_56( val, _values, result )
  @lexer.commentpop
  Puppet.warning addcontext("Collection names must now be capitalized") if val[0] =~ /^[a-z]/
  type = val[0].downcase
  args = {:type => type}

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  args[:override] = val[3]
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 219
  def _reduce_57( val, _values, result )
    if val[0] =~ /^[a-z]/
    Puppet.warning addcontext("Collection names must now be capitalized")
  end
  type = val[0].downcase
  args = {:type => type }

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 229
  def _reduce_58( val, _values, result )
  if val[1]
    result = val[1]
    result.form = :virtual
  else
    result = :virtual
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 237
  def _reduce_59( val, _values, result )
    if val[1]
    result = val[1]
    result.form = :exported
  else
    result = :exported
  end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 245
  def _reduce_62( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'grammar.ra', 251
  def _reduce_64( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_65( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 253
  def _reduce_66( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 260
  def _reduce_67( val, _values, result )
  result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
  #result = ast AST::CollExpr
  #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 265
  def _reduce_68( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 272
  def _reduce_71( val, _values, result )
  result = ast AST::ResourceInstance, :title => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_72( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 278
  def _reduce_73( val, _values, result )
    val[0].push val[2]
    result = val[0]
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

module_eval <<'.,.,', 'grammar.ra', 285
  def _reduce_76( val, _values, result )
  result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 289
  def _reduce_77( val, _values, result )
  result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 293
  def _reduce_78( val, _values, result )
  result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

module_eval <<'.,.,', 'grammar.ra', 308
  def _reduce_86( val, _values, result )
  raise Puppet::ParseError, "Cannot assign to variables in other namespaces" if val[0][:value] =~ /::/
  # this is distinct from referencing a variable
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_87( val, _values, result )
    result = ast AST::VarDef, :name => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_88( val, _values, result )
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 321
  def _reduce_89( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 321
  def _reduce_90( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 326
  def _reduce_91( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 330
  def _reduce_92( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 335
  def _reduce_93( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
    :add => true
   result
  end
.,.,

 # reduce 94 omitted

 # reduce 95 omitted

module_eval <<'.,.,', 'grammar.ra', 343
  def _reduce_96( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 343
  def _reduce_97( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 348
  def _reduce_98( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 356
  def _reduce_99( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => val[2],
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_100( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 362
  def _reduce_101( val, _values, result )
 result = ast AST::String, :value => val[0][:value],                  :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 363
  def _reduce_102( val, _values, result )
 result = ast AST::Concat, :value => [ast(AST::String,val[0])]+val[1], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 365
  def _reduce_103( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 367
  def _reduce_104( val, _values, result )
 result = [ast(AST::String,val[0])]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 368
  def _reduce_105( val, _values, result )
 result = [ast(AST::String,val[0])] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 373
  def _reduce_106( val, _values, result )
  result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 378
  def _reduce_107( val, _values, result )
  Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
  result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 380
  def _reduce_108( val, _values, result )
  result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 384
  def _reduce_109( val, _values, result )
  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 396
  def _reduce_110( val, _values, result )
  @lexer.commentpop
  args = {
    :test => val[0],
    :statements => val[2]
  }

  args[:else] = val[4] if val[4]

  result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 407
  def _reduce_111( val, _values, result )
    @lexer.commentpop
    args = {
      :test => val[0],
      :statements => ast(AST::Nop)
  }

  args[:else] = val[3] if val[3]

  result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 412
  def _reduce_113( val, _values, result )
    result = ast AST::Else, :statements => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 416
  def _reduce_114( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 420
  def _reduce_115( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 116 omitted

 # reduce 117 omitted

module_eval <<'.,.,', 'grammar.ra', 438
  def _reduce_118( val, _values, result )
    result = ast AST::InOperator, :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 441
  def _reduce_119( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 444
  def _reduce_120( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 447
  def _reduce_121( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 450
  def _reduce_122( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 453
  def _reduce_123( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_124( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 459
  def _reduce_125( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 462
  def _reduce_126( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 465
  def _reduce_127( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 468
  def _reduce_128( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 471
  def _reduce_129( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 474
  def _reduce_130( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 477
  def _reduce_131( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 480
  def _reduce_132( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 483
  def _reduce_133( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 486
  def _reduce_134( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 489
  def _reduce_135( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 492
  def _reduce_136( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 495
  def _reduce_137( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_138( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseStatement, :test => val[1], :options => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 501
  def _reduce_139( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_140( val, _values, result )
    val[0].push val[1]
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_141( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 520
  def _reduce_142( val, _values, result )
  @lexer.commentpop

    result = ast(
    AST::CaseOpt,
    :value => val[0],

    :statements => ast(AST::ASTArray)
  )
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 521
  def _reduce_143( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 526
  def _reduce_144( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 530
  def _reduce_145( val, _values, result )
  result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 146 omitted

module_eval <<'.,.,', 'grammar.ra', 536
  def _reduce_147( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 546
  def _reduce_149( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
    val[0].push(val[2])
    result = val[0]
  else
    result = ast AST::ASTArray, :children => [val[0],val[2]]
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 550
  def _reduce_150( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 151 omitted

 # reduce 152 omitted

 # reduce 153 omitted

 # reduce 154 omitted

 # reduce 155 omitted

 # reduce 156 omitted

 # reduce 157 omitted

 # reduce 158 omitted

module_eval <<'.,.,', 'grammar.ra', 562
  def _reduce_159( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 160 omitted

module_eval <<'.,.,', 'grammar.ra', 565
  def _reduce_161( val, _values, result )
 result = [val[0][:value]]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 567
  def _reduce_163( val, _values, result )
 result = val[0] += val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 576
  def _reduce_164( val, _values, result )
  val[1].each do |file|
    import(file)
  end

  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_165( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :code => val[4],
                                                                       :line => val[0][:line]))
  @lexer.indefine = false

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 593
  def _reduce_166( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :line => val[0][:line]))
  @lexer.indefine = false
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 603
  def _reduce_167( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :code => val[5], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 610
  def _reduce_168( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 612
  def _reduce_169( val, _values, result )
puts "Parsing a cloudres"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_170( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Cloudres.new(val[1],
                                             ast_context(true).merge(:code => val[3],
                                                                     :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_171( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 629
  def _reduce_172( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1],
                                         ast_context(true).merge(:parent => val[2], :code => val[4],
                                                                 :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 632
  def _reduce_173( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1], ast_context(true).merge(:parent => val[2], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 633
  def _reduce_174( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 635
  def _reduce_175( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 636
  def _reduce_176( val, _values, result )
 result = "class"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 643
  def _reduce_177( val, _values, result )
    result = [result]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 647
  def _reduce_178( val, _values, result )
    result = val[0]
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 651
  def _reduce_179( val, _values, result )
  result = ast AST::HostName, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 652
  def _reduce_180( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 653
  def _reduce_181( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 654
  def _reduce_182( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 183 omitted

module_eval <<'.,.,', 'grammar.ra', 660
  def _reduce_184( val, _values, result )
  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 664
  def _reduce_185( val, _values, result )
  result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 186 omitted

module_eval <<'.,.,', 'grammar.ra', 669
  def _reduce_187( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 673
  def _reduce_188( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 189 omitted

module_eval <<'.,.,', 'grammar.ra', 680
  def _reduce_190( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 685
  def _reduce_191( val, _values, result )
  Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 689
  def _reduce_192( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 691
  def _reduce_193( val, _values, result )
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 693
  def _reduce_194( val, _values, result )
  result = [val[0][:value]]
   result
  end
.,.,

 # reduce 195 omitted

module_eval <<'.,.,', 'grammar.ra', 698
  def _reduce_196( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 197 omitted

module_eval <<'.,.,', 'grammar.ra', 703
  def _reduce_198( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 199 omitted

 # reduce 200 omitted

module_eval <<'.,.,', 'grammar.ra', 709
  def _reduce_201( val, _values, result )
  result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 710
  def _reduce_202( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 711
  def _reduce_203( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 712
  def _reduce_204( val, _values, result )
 result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 205 omitted

 # reduce 206 omitted

 # reduce 207 omitted

module_eval <<'.,.,', 'grammar.ra', 718
  def _reduce_208( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 723
  def _reduce_209( val, _values, result )
  result = ast AST::Regex, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 731
  def _reduce_210( val, _values, result )
  if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 738
  def _reduce_211( val, _values, result )
    if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 740
  def _reduce_212( val, _values, result )
  result = ast AST::ASTHash
   result
  end
.,.,

 # reduce 213 omitted

module_eval <<'.,.,', 'grammar.ra', 750
  def _reduce_214( val, _values, result )
    if val[0].instance_of?(AST::ASTHash)
    result = val[0].merge(val[2])
  else
    result = ast AST::ASTHash, :value => val[0]
    result.merge(val[2])
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 754
  def _reduce_215( val, _values, result )
  result = ast AST::ASTHash, { :value => { val[0] => val[2] } }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 755
  def _reduce_216( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 756
  def _reduce_217( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 761
  def _reduce_218( val, _values, result )
  result = ast AST::HashOrArrayAccess, :variable => val[0][:value], :key => val[2]
   result
  end
.,.,

 # reduce 219 omitted

module_eval <<'.,.,', 'grammar.ra', 766
  def _reduce_220( val, _values, result )
    result = ast AST::HashOrArrayAccess, :variable => val[0], :key => val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet

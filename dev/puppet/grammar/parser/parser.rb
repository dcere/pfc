#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'

module Puppet
  class ParseError < Puppet::Error; end
  class ImportError < Racc::ParseError; end
  class AlreadyImportedError < ImportError; end
end


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..idcbb48b3d25', 'grammar.ra', 777

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:
..end grammar.ra modeval..idcbb48b3d25

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 71, :_reduce_3,
 2, 71, :_reduce_4,
 1, 74, :_reduce_5,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 3, 89, :_reduce_21,
 3, 89, :_reduce_22,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 4, 82, :_reduce_30,
 5, 82, :_reduce_31,
 3, 82, :_reduce_32,
 2, 82, :_reduce_33,
 1, 94, :_reduce_34,
 3, 94, :_reduce_35,
 1, 93, :_reduce_36,
 3, 93, :_reduce_37,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 5, 75, :_reduce_49,
 5, 75, :_reduce_50,
 5, 75, :_reduce_51,
 5, 87, :_reduce_52,
 2, 76, :_reduce_53,
 1, 115, :_reduce_54,
 2, 115, :_reduce_55,
 6, 77, :_reduce_56,
 2, 77, :_reduce_57,
 3, 116, :_reduce_58,
 3, 116, :_reduce_59,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 3, 117, :_reduce_62,
 1, 118, :_reduce_none,
 3, 118, :_reduce_64,
 1, 119, :_reduce_65,
 1, 119, :_reduce_66,
 3, 120, :_reduce_67,
 3, 120, :_reduce_68,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 4, 122, :_reduce_71,
 1, 109, :_reduce_72,
 3, 109, :_reduce_73,
 0, 110, :_reduce_none,
 1, 110, :_reduce_none,
 1, 107, :_reduce_76,
 1, 99, :_reduce_77,
 1, 100, :_reduce_78,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 1, 123, :_reduce_none,
 3, 78, :_reduce_86,
 3, 78, :_reduce_87,
 3, 88, :_reduce_88,
 0, 111, :_reduce_89,
 1, 111, :_reduce_90,
 3, 111, :_reduce_91,
 3, 125, :_reduce_92,
 3, 126, :_reduce_93,
 1, 127, :_reduce_none,
 1, 127, :_reduce_none,
 0, 114, :_reduce_96,
 1, 114, :_reduce_97,
 3, 114, :_reduce_98,
 4, 106, :_reduce_99,
 3, 106, :_reduce_100,
 1, 98, :_reduce_101,
 2, 98, :_reduce_102,
 2, 128, :_reduce_103,
 1, 129, :_reduce_104,
 2, 129, :_reduce_105,
 1, 101, :_reduce_106,
 4, 92, :_reduce_107,
 4, 92, :_reduce_108,
 2, 80, :_reduce_109,
 5, 130, :_reduce_110,
 4, 130, :_reduce_111,
 0, 131, :_reduce_none,
 2, 131, :_reduce_113,
 4, 131, :_reduce_114,
 3, 131, :_reduce_115,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 3, 96, :_reduce_118,
 3, 96, :_reduce_119,
 3, 96, :_reduce_120,
 3, 96, :_reduce_121,
 3, 96, :_reduce_122,
 3, 96, :_reduce_123,
 3, 96, :_reduce_124,
 3, 96, :_reduce_125,
 3, 96, :_reduce_126,
 2, 96, :_reduce_127,
 3, 96, :_reduce_128,
 3, 96, :_reduce_129,
 3, 96, :_reduce_130,
 3, 96, :_reduce_131,
 3, 96, :_reduce_132,
 3, 96, :_reduce_133,
 2, 96, :_reduce_134,
 3, 96, :_reduce_135,
 3, 96, :_reduce_136,
 3, 96, :_reduce_137,
 5, 79, :_reduce_138,
 1, 134, :_reduce_139,
 2, 134, :_reduce_140,
 5, 135, :_reduce_141,
 4, 135, :_reduce_142,
 1, 136, :_reduce_143,
 3, 136, :_reduce_144,
 3, 102, :_reduce_145,
 1, 138, :_reduce_none,
 4, 138, :_reduce_147,
 1, 140, :_reduce_none,
 3, 140, :_reduce_149,
 3, 139, :_reduce_150,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_none,
 1, 137, :_reduce_159,
 1, 137, :_reduce_none,
 1, 141, :_reduce_161,
 1, 142, :_reduce_none,
 3, 142, :_reduce_163,
 2, 81, :_reduce_164,
 6, 83, :_reduce_165,
 5, 83, :_reduce_166,
 7, 84, :_reduce_167,
 6, 84, :_reduce_168,
 0, 146, :_reduce_169,
 5, 86, :_reduce_170,
 1, 145, :_reduce_171,
 6, 85, :_reduce_172,
 5, 85, :_reduce_173,
 1, 113, :_reduce_174,
 1, 108, :_reduce_175,
 1, 108, :_reduce_176,
 1, 147, :_reduce_177,
 3, 147, :_reduce_178,
 1, 149, :_reduce_179,
 1, 150, :_reduce_180,
 1, 150, :_reduce_181,
 1, 150, :_reduce_182,
 1, 150, :_reduce_none,
 0, 72, :_reduce_184,
 0, 151, :_reduce_185,
 1, 143, :_reduce_none,
 3, 143, :_reduce_187,
 4, 143, :_reduce_188,
 1, 152, :_reduce_none,
 3, 152, :_reduce_190,
 3, 153, :_reduce_191,
 1, 153, :_reduce_192,
 3, 153, :_reduce_193,
 1, 153, :_reduce_194,
 1, 148, :_reduce_none,
 2, 148, :_reduce_196,
 1, 144, :_reduce_none,
 2, 144, :_reduce_198,
 1, 154, :_reduce_none,
 1, 154, :_reduce_none,
 1, 103, :_reduce_201,
 3, 104, :_reduce_202,
 4, 104, :_reduce_203,
 2, 104, :_reduce_204,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 0, 112, :_reduce_none,
 1, 112, :_reduce_208,
 1, 133, :_reduce_209,
 3, 132, :_reduce_210,
 4, 132, :_reduce_211,
 2, 132, :_reduce_212,
 1, 155, :_reduce_none,
 3, 155, :_reduce_214,
 3, 156, :_reduce_215,
 1, 157, :_reduce_216,
 1, 157, :_reduce_217,
 4, 124, :_reduce_218,
 1, 105, :_reduce_none,
 4, 105, :_reduce_220 ]

racc_reduce_n = 221

racc_shift_n = 379

clist = [
'247,248,237,54,238,56,237,335,165,75,80,230,231,185,189,151,173,355',
'57,164,75,80,180,182,186,188,164,337,230,361,224,227,228,75,80,75,80',
'101,223,103,152,258,53,241,37,181,184,172,38,191,192,175,176,178,179',
'99,183,187,172,308,306,75,80,177,315,101,74,103,74,345,88,91,88,257',
'96,305,96,346,81,100,202,304,92,99,92,106,75,80,227,228,101,239,103',
'64,74,64,183,187,88,91,143,61,96,177,230,231,81,100,99,61,92,75,80,106',
'131,101,37,103,334,74,38,64,320,88,91,130,303,96,-107,61,134,81,100',
'99,149,92,183,187,106,65,230,245,67,177,74,323,64,65,88,91,67,109,96',
'299,246,327,81,100,75,80,92,64,101,106,103,-153,131,65,261,64,67,64',
'230,260,329,75,80,130,49,101,99,103,134,-107,-107,-107,-107,47,48,64',
'164,74,75,80,162,88,91,99,131,96,332,75,80,81,100,101,213,92,74,130',
'106,214,88,91,134,-154,96,297,64,235,81,100,75,80,92,74,101,106,103',
'88,257,-152,37,96,74,64,118,202,88,91,-151,92,96,11,99,264,81,75,80',
'64,92,101,64,103,131,74,64,213,271,88,91,64,214,96,244,130,239,81,100',
'99,134,92,75,80,106,37,87,237,341,118,74,340,64,37,88,91,11,38,96,235',
'312,37,81,100,77,38,92,75,80,106,149,101,11,103,221,74,218,64,226,88',
'91,227,228,96,75,80,165,81,101,99,103,92,232,212,268,211,230,231,230',
'260,74,-153,64,339,88,91,99,-157,96,-155,75,80,81,100,163,270,92,74',
'269,106,341,88,91,340,162,96,159,64,347,81,100,75,80,92,143,101,106',
'103,191,192,175,176,349,74,64,183,187,88,257,-154,351,96,177,99,-174',
'202,75,80,54,92,101,-158,103,309,74,-156,75,80,88,91,64,49,96,-152,-151',
'358,81,100,99,56,92,150,359,106,75,80,149,143,101,74,103,64,140,88,91',
'113,121,96,366,74,113,81,100,88,257,92,99,96,106,368,235,202,109,108',
'59,92,64,74,-208,371,58,88,91,52,40,96,64,377,378,81,100,75,80,92,,101',
'106,103,,,,75,80,,64,101,,103,,,,75,80,99,,101,,103,43,44,45,41,,99',
'74,,,,88,91,,,96,99,74,,81,100,88,91,92,,96,106,74,,81,100,88,91,92',
'64,96,106,,,81,100,75,80,92,64,101,106,103,,333,191,192,175,176,64,',
',183,187,185,189,175,176,99,177,,183,187,180,182,186,188,,177,74,75',
'80,,88,91,,,96,,,,81,100,,,92,181,184,106,,191,192,175,176,178,179,64',
'183,187,43,44,45,41,74,177,,,88,257,,,96,75,80,,202,101,,103,92,,,75',
'80,,,101,,103,,64,,75,80,99,,101,,103,-23,-23,-23,-23,,99,74,,,,88,91',
',,96,99,74,,81,100,88,91,92,,96,106,74,,81,100,88,91,92,64,96,106,219',
',81,100,,,92,64,,106,185,189,-25,-25,-25,-25,,64,,180,182,186,188,175',
'176,,,,183,187,75,80,,,101,177,103,,,,,,181,184,,,191,192,175,176,178',
'179,99,183,187,75,80,,,101,177,103,,74,,75,80,88,91,101,,96,,,,81,100',
'99,,92,,,106,75,80,,,101,74,103,64,,88,91,,,96,,74,,81,100,88,91,92',
'99,96,106,,,81,,,,92,64,74,,,,88,91,,,96,64,,,81,100,75,80,92,,101,106',
'103,,,,75,80,,64,101,,103,,,,75,80,99,,101,,,,,,,,99,74,,,,88,91,,,96',
',74,,81,100,88,91,92,,96,106,74,,81,100,88,207,92,64,96,106,,,202,,75',
'80,92,64,101,,103,,,,75,80,,64,101,,103,,,,75,80,99,,101,161,103,,,',
',,99,74,,,,88,91,,,96,99,74,,81,100,88,91,92,,96,106,74,,81,100,88,91',
'92,64,96,106,,,81,100,75,80,92,64,101,106,103,,,,75,80,,64,101,,103',
',,,75,80,99,155,101,,103,,,,,,99,74,,,,88,91,,,96,99,74,,81,100,88,91',
'92,,96,106,74,,81,100,88,91,92,64,96,106,,,81,100,75,80,92,64,101,106',
'103,,,,75,80,,64,101,,103,,,,75,80,99,,101,,,,,,,,99,74,,,,88,91,,,96',
',74,,81,100,88,91,92,,96,106,74,,81,100,88,257,92,64,96,106,,,202,,75',
'80,92,64,101,,103,,,,75,80,,64,101,161,103,,,,75,80,99,,,,,344,,,,,99',
'74,,,,88,91,,,96,,74,,81,100,88,91,92,,96,106,74,,81,100,88,257,92,64',
'96,106,,,202,,75,80,92,64,101,,103,,,,75,80,,64,101,,103,,,,75,80,99',
',101,,103,,,,,,99,74,,,,88,91,,,96,99,74,,81,100,88,91,92,,96,106,74',
',81,100,88,91,92,64,96,106,,,81,100,75,80,92,64,101,106,103,,,,75,80',
',64,101,,103,,,,75,80,99,,101,,103,,,,,,99,74,,,,88,91,,,96,99,74,,81',
'100,88,91,92,,96,106,74,,81,100,88,91,92,64,96,106,,357,81,100,75,80',
'92,64,101,106,103,,,,,,,64,,,,,28,,34,1,99,8,12,,19,,25,,30,,2,74,,11',
',88,91,,374,96,,,,81,100,,,92,,,106,,,,7,,,,64,28,,34,1,,8,12,,19,190',
'25,,30,,2,,,11,185,189,,,,,,,,180,182,186,188,,191,192,175,176,178,179',
'7,183,187,,,370,,,177,,,,181,184,,,191,192,175,176,178,179,,183,187',
',28,,34,1,177,8,12,,19,194,25,,30,,2,,,11,185,189,,,,,,,,180,182,186',
'188,,191,192,175,176,178,179,7,183,187,,,302,,,177,,,,181,184,,,191',
'192,175,176,178,179,,183,187,289,28,,34,1,177,8,12,,19,,25,,30,,2,,',
'11,376,,28,,34,1,,8,12,,19,,25,,30,,2,,326,11,7,28,,34,1,,8,12,,19,',
'25,,30,,2,,,11,28,7,34,1,,8,12,,19,,25,,30,,2,185,189,11,,,7,,,,180',
'182,186,188,,,185,189,,,,,,,7,180,182,186,188,,,,,181,184,,,191,192',
'175,176,178,179,,183,187,,,181,184,,177,191,192,175,176,178,179,,183',
'187,185,189,,,,177,,,,180,182,186,188,,,185,189,,,,,,,,180,182,186,188',
',,,,181,184,,,191,192,175,176,178,179,,183,187,,,181,184,,177,191,192',
'175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186,188,,,185,189',
',,,,,,,180,182,186,188,,,,,,,,,191,192,175,176,178,179,,183,187,,,,',
',177,191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186',
'188,,,185,189,,,,,,,,180,182,186,188,,,,,181,184,,,191,192,175,176,178',
'179,,183,187,,,181,184,,177,191,192,175,176,178,179,,183,187,185,189',
',,,177,,,267,180,182,186,188,,,185,189,,,,,,,,180,182,186,188,,,,,181',
'184,,,191,192,175,176,178,179,,183,187,,,181,184,,177,191,192,175,176',
'178,179,,183,187,185,189,,,,177,,,,180,182,186,188,,,185,189,,,,,,,',
'180,182,186,188,,,,,181,184,,,191,192,175,176,178,179,,183,187,,,,,',
'177,191,192,175,176,178,179,,183,187,185,189,,,,177,,,,180,182,186,188',
',,185,189,,,,,,,,180,182,186,188,,,,,,184,,,191,192,175,176,178,179',
',183,187,,,181,184,,177,191,192,175,176,178,179,,183,187,185,189,,,',
'177,,,,180,182,186,188,,,,189,,,,,,,,180,,,,,,,,181,184,189,,191,192',
'175,176,178,179,180,183,187,,,,,189,177,191,192,175,176,178,179,180',
'183,187,,,,,,177,,189,,191,192,175,176,178,179,180,183,187,,,,,,177',
'191,192,175,176,178,179,,183,187,,,,,,177,,,,191,192,175,176,178,179',
',183,187,,28,,34,1,177,8,12,,19,,25,,30,28,2,34,1,11,8,12,,19,,25,,30',
',2,,28,11,34,1,,8,12,,19,7,25,,30,,2,,,11,,,,,7,,,,,,,,,,,,,,,,7' ]
racc_action_table = arr = Array.new(2127, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

clist = [
'158,158,149,14,144,14,207,266,91,103,103,266,266,158,158,62,103,307',
'14,207,269,269,158,158,158,158,91,269,331,331,129,144,144,223,223,159',
'159,223,129,223,62,159,14,149,12,158,158,103,12,158,158,158,158,158',
'158,223,158,158,269,218,216,224,224,158,225,224,223,224,159,294,223',
'223,159,159,223,215,159,294,223,223,159,214,223,224,159,223,233,233',
'225,225,233,234,233,223,224,159,273,273,224,224,235,152,224,273,265',
'265,224,224,233,151,224,237,237,224,53,237,1,237,265,233,1,224,236,233',
'233,53,213,233,261,19,53,233,233,237,239,233,272,272,233,152,156,156',
'152,272,237,240,233,151,237,237,151,211,237,210,156,245,237,237,241',
'241,237,152,241,237,241,209,229,19,160,151,19,237,160,160,254,162,162',
'229,8,162,241,162,229,261,261,261,261,8,8,19,257,241,363,363,205,241',
'241,162,131,241,260,163,163,241,241,163,113,241,162,131,241,113,162',
'162,131,203,162,200,241,198,162,162,164,164,162,363,164,162,164,363',
'363,196,42,363,163,162,42,363,163,163,195,363,163,42,164,164,163,247',
'247,187,163,247,363,247,57,164,183,306,171,164,164,163,306,164,153,57',
'146,164,164,247,57,164,25,25,164,50,25,143,289,50,247,289,164,221,247',
'247,50,221,247,141,221,20,247,247,25,20,247,28,28,247,140,28,20,28,126',
'25,120,247,135,25,25,135,135,25,30,30,118,25,30,28,30,25,138,112,168',
'111,138,138,168,168,28,97,25,288,28,28,30,95,28,93,258,258,28,28,90',
'169,28,30,169,28,339,30,30,339,89,30,85,28,296,30,30,165,165,30,297',
'165,30,165,275,275,275,275,298,258,30,275,275,258,258,84,301,258,275',
'165,81,258,175,175,79,258,175,78,175,220,165,76,345,345,165,165,258',
'74,165,73,71,318,165,165,175,68,165,59,325,165,176,176,58,56,176,175',
'176,165,55,175,175,51,46,175,341,345,39,175,175,345,345,175,176,345',
'175,346,348,345,34,31,18,345,175,176,361,362,16,176,176,13,2,176,345',
'373,375,176,176,340,340,176,,340,176,340,,,,47,47,,176,47,,47,,,,48',
'48,340,,48,,48,5,5,5,5,,47,340,,,,340,340,,,340,48,47,,340,340,47,47',
'340,,47,340,48,,47,47,48,48,47,340,48,47,,,48,48,49,49,48,47,49,48,49',
',262,276,276,276,276,48,,,276,276,262,262,290,290,49,276,,290,290,262',
'262,262,262,,290,49,194,194,,49,49,,,49,,,,49,49,,,49,262,262,49,,262',
'262,262,262,262,262,49,262,262,9,9,9,9,194,262,,,194,194,,,194,52,52',
',194,52,,52,194,,,192,192,,,192,,192,,194,,54,54,52,,54,,54,33,33,33',
'33,,192,52,,,,52,52,,,52,54,192,,52,52,192,192,52,,192,52,54,,192,192',
'54,54,192,52,54,192,124,,54,54,,,54,192,,54,124,124,4,4,4,4,,54,,124',
'124,124,124,291,291,,,,291,291,191,191,,,191,291,191,,,,,,124,124,,',
'124,124,124,124,124,124,191,124,124,177,177,,,177,124,177,,191,,329',
'329,191,191,329,,191,,,,191,191,177,,191,,,191,100,100,,,100,177,100',
'191,,177,177,,,177,,329,,177,177,329,329,177,100,329,177,,,329,,,,329',
'177,100,,,,100,100,,,100,329,,,100,100,189,189,100,,189,100,189,,,,179',
'179,,100,179,,179,,,,108,108,189,,108,,,,,,,,179,189,,,,189,189,,,189',
',179,,189,189,179,179,189,,179,189,108,,179,179,108,108,179,189,108',
'179,,,108,,106,106,108,179,106,,106,,,,180,180,,108,180,,180,,,,101',
'101,106,,101,101,101,,,,,,180,106,,,,106,106,,,106,101,180,,106,106',
'180,180,106,,180,106,101,,180,180,101,101,180,106,101,180,,,101,101',
'77,77,101,180,77,101,77,,,,188,188,,101,188,,188,,,,304,304,77,77,304',
',304,,,,,,188,77,,,,77,77,,,77,304,188,,77,77,188,188,77,,188,77,304',
',188,188,304,304,188,77,304,188,,,304,304,80,80,304,188,80,304,80,,',
',303,303,,304,303,,303,,,,299,299,80,,299,,,,,,,,303,80,,,,80,80,,,80',
',303,,80,80,303,303,80,,303,80,299,,303,303,299,299,303,80,299,303,',
',299,,271,271,299,303,271,,271,,,,87,87,,299,87,87,87,,,,292,292,271',
',,,,292,,,,,87,271,,,,271,271,,,271,,87,,271,271,87,87,271,,87,271,292',
',87,87,292,292,87,271,292,87,,,292,,186,186,292,87,186,,186,,,,185,185',
',292,185,,185,,,,184,184,186,,184,,184,,,,,,185,186,,,,186,186,,,186',
'184,185,,186,186,185,185,186,,185,186,184,,185,185,184,184,185,186,184',
'185,,,184,184,182,182,184,185,182,184,182,,,,181,181,,184,181,,181,',
',,99,99,182,,99,,99,,,,,,181,182,,,,182,182,,,182,99,181,,182,182,181',
'181,182,,181,182,99,,181,181,99,99,181,182,99,181,,309,99,99,178,178',
'99,181,178,99,178,,,,,,,99,,,,,309,,309,309,178,309,309,,309,,309,,309',
',309,178,,309,,178,178,,366,178,,,,178,178,,,178,,,178,,,,309,,,,178',
'366,,366,366,,366,366,,366,104,366,,366,,366,,,366,104,104,,,,,,,,104',
'104,104,104,,286,286,286,286,286,286,366,286,286,,,356,,,286,,,,104',
'104,,,104,104,104,104,104,104,,104,104,,356,,356,356,104,356,356,,356',
'107,356,,356,,356,,,356,107,107,,,,,,,,107,107,107,107,,277,277,277',
'277,277,277,356,277,277,,,212,,,277,,,,107,107,,,107,107,107,107,107',
'107,,107,107,190,212,,212,212,107,212,212,,212,,212,,212,,212,,,212',
'368,,190,,190,190,,190,190,,190,,190,,190,,190,,244,190,212,368,,368',
'368,,368,368,,368,,368,,368,,368,,,368,244,190,244,244,,244,244,,244',
',244,,244,,244,324,324,244,,,368,,,,324,324,324,324,,,122,122,,,,,,',
'244,122,122,122,122,,,,,324,324,,,324,324,324,324,324,324,,324,324,',
',122,122,,324,122,122,122,122,122,122,,122,122,317,317,,,,122,,,,317',
'317,317,317,,,338,338,,,,,,,,338,338,338,338,,,,,317,317,,,317,317,317',
'317,317,317,,317,317,,,338,338,,317,338,338,338,338,338,338,,338,338',
'281,281,,,,338,,,,281,281,281,281,,,314,314,,,,,,,,314,314,314,314,',
',,,,,,,281,281,281,281,281,281,,281,281,,,,,,281,314,314,314,314,314',
'314,,314,314,321,321,,,,314,,,,321,321,321,321,,,352,352,,,,,,,,352',
'352,352,352,,,,,321,321,,,321,321,321,321,321,321,,321,321,,,352,352',
',321,352,352,352,352,352,352,,352,352,166,166,,,,352,,,166,166,166,166',
'166,,,353,353,,,,,,,,353,353,353,353,,,,,166,166,,,166,166,166,166,166',
'166,,166,166,,,353,353,,166,353,353,353,353,353,353,,353,353,139,139',
',,,353,,,,139,139,139,139,,,313,313,,,,,,,,313,313,313,313,,,,,139,139',
',,139,139,139,139,139,139,,139,139,,,,,,139,313,313,313,313,313,313',
',313,313,278,278,,,,313,,,,278,278,278,278,,,123,123,,,,,,,,123,123',
'123,123,,,,,,278,,,278,278,278,278,278,278,,278,278,,,123,123,,278,123',
'123,123,123,123,123,,123,123,127,127,,,,123,,,,127,127,127,127,,,,282',
',,,,,,,282,,,,,,,,127,127,285,,127,127,127,127,127,127,285,127,127,',
',,,279,127,282,282,282,282,282,282,279,282,282,,,,,,282,,283,,285,285',
'285,285,285,285,283,285,285,,,,,,285,279,279,279,279,279,279,,279,279',
',,,,,279,,,,283,283,283,283,283,283,,283,283,,0,,0,0,283,0,0,,0,,0,',
'0,287,0,287,287,0,287,287,,287,,287,,287,,287,,22,287,22,22,,22,22,',
'22,0,22,,22,,22,,,22,,,,,287,,,,,,,,,,,,,,,,22' ]
racc_action_check = arr = Array.new(2127, nil)
str = a = i = nil
idx = 0
clist.each do |str|
  str.split(',', -1).each do |i|
    arr[idx] = i.to_i unless i.empty?
    idx += 1
  end
end

racc_action_pointer = [
  2029,    80,   410,   nil,   616,   425,   nil,   nil,   172,   528,
   nil,   nil,     8,   438,    -3,   nil,   442,   nil,   444,   127,
   255,   nil,  2058,   nil,   nil,   270,   nil,   nil,   295,   nil,
   312,   435,   nil,   568,   440,   nil,   nil,   nil,   nil,   406,
   nil,   nil,   196,   nil,   nil,   nil,   386,   469,   479,   526,
   239,   401,   602,    90,   622,   414,   377,   230,   376,   411,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   401,   nil,
   nil,   381,   nil,   380,   395,   nil,   372,   929,   368,   382,
   996,   378,   nil,   nil,   356,   333,   nil,  1073,   nil,   348,
   332,     2,   nil,   316,   nil,   314,   nil,   308,   nil,  1217,
   748,   882,   nil,     7,  1328,   nil,   862,  1392,   815,   nil,
   nil,   313,   315,   171,   nil,   nil,   nil,   nil,   310,   nil,
   298,   nil,  1525,  1885,   660,   nil,   267,  1930,   nil,    12,
   nil,   174,   nil,   nil,   nil,   262,   nil,   nil,   315,  1810,
   260,   277,   nil,   266,   -18,   nil,   254,   nil,   nil,    -9,
   nil,   107,    99,   256,   nil,   nil,   129,   nil,    -4,    33,
   161,   nil,   173,   199,   220,   359,  1750,   nil,   317,   336,
   nil,   247,   nil,   nil,   nil,   384,   412,   720,  1264,   805,
   872,  1207,  1197,   194,  1150,  1140,  1130,   187,   939,   795,
  1445,   695,   612,   nil,   560,   217,   208,   nil,   207,   nil,
   197,   nil,   nil,   192,   nil,   188,   nil,    -5,   nil,   142,
   112,   149,  1425,   111,    66,    50,    48,   nil,    50,   nil,
   385,   247,   nil,    31,    59,    39,   nil,   nil,   nil,   142,
   nil,   nil,   nil,    84,    79,    60,   113,   109,   nil,    94,
   136,   156,   nil,   nil,  1482,   130,   nil,   245,   nil,   nil,
   nil,   nil,   nil,   nil,   163,   nil,   nil,   166,   338,   nil,
   193,   120,   529,   nil,   nil,    93,     0,   nil,   nil,    18,
   nil,  1063,    76,    36,   nil,   315,   484,  1370,  1870,  1978,
   nil,  1630,  1945,  1996,   nil,  1963,  1306,  2042,   324,   247,
   493,   635,  1083,   nil,    57,   nil,   349,   324,   363,  1016,
   nil,   371,   nil,  1006,   949,   nil,   222,    -8,   nil,  1254,
   nil,   nil,   nil,  1825,  1645,   nil,   nil,  1570,   396,   nil,
   nil,  1690,   nil,   nil,  1510,   403,   nil,   nil,   nil,   730,
   nil,    17,   nil,   nil,   nil,   nil,   nil,   nil,  1585,   319,
   459,   420,   nil,   nil,   nil,   394,   431,   nil,   428,   nil,
   nil,   nil,  1705,  1765,   nil,   nil,  1361,   nil,   nil,   nil,
   nil,   439,   440,   190,   nil,   nil,  1297,   nil,  1464,   nil,
   nil,   nil,   nil,   448,   nil,   449,   nil,   nil,   nil ]

racc_action_default = [
  -184,  -221,   -54,   -19,    -8,   -20,    -9,  -169,  -221,  -221,
   -10,  -174,  -176,  -221,  -221,   -11,   -24,   -12,  -221,  -221,
  -221,   -13,    -1,   -14,    -2,  -175,   -15,    -3,  -221,   -16,
  -221,  -221,   -17,    -6,  -221,   -18,    -7,  -176,  -175,  -184,
   -55,   -29,  -221,   -26,   -27,   -28,  -221,  -221,  -221,  -221,
  -221,  -184,  -221,  -184,  -221,   -57,   -89,  -184,   -96,  -221,
  -183,  -181,  -184,  -177,  -209,  -180,  -179,  -182,  -221,   -53,
    -4,   -39,  -160,   -40,  -201,  -101,   -41,  -221,  -219,  -221,
  -221,   -78,   -42,   -46,   -43,  -221,   -44,  -221,  -106,   -45,
   -33,   -77,   -76,   -47,   -34,   -48,  -159,   -38,  -117,  -221,
  -221,  -221,  -116,  -221,  -221,  -109,  -221,  -221,   -89,  -161,
  -162,  -164,  -221,  -185,  -186,   -25,   -22,   -24,  -175,   -23,
  -221,  -171,   -86,   -88,  -221,   -21,  -184,   -87,   -70,  -221,
  -201,  -184,   -69,   -60,   -77,  -221,   -61,   -63,  -221,   -36,
   -96,  -207,   -90,  -221,  -221,   -94,  -207,   -95,   -97,  -221,
   379,  -221,  -221,  -221,  -195,   -32,  -221,  -102,  -221,  -221,
  -221,  -204,  -221,  -221,  -221,  -221,  -221,  -134,  -221,  -221,
  -213,  -221,  -216,  -212,  -217,  -221,  -221,  -221,  -221,  -221,
  -221,  -221,  -221,  -221,  -221,  -221,  -221,  -221,  -221,  -221,
  -221,  -221,  -221,  -127,  -221,   -80,   -81,   -72,  -207,  -156,
  -221,   -82,   -78,   -83,   -84,   -85,  -155,   -77,  -157,   -79,
   -74,  -221,  -221,  -194,  -192,  -221,  -207,  -189,  -221,  -218,
  -221,  -221,  -197,  -221,  -221,  -221,   -58,   -66,   -65,  -221,
  -205,  -206,  -108,  -221,  -207,  -208,  -221,  -221,   -59,  -208,
  -221,  -221,  -178,  -196,  -221,  -206,   -30,  -221,  -104,  -103,
  -151,  -152,  -158,  -154,  -221,  -145,  -146,   -77,  -221,  -153,
  -206,  -202,  -221,   -35,  -100,  -221,  -221,  -137,  -202,  -221,
  -210,  -221,  -124,  -123,  -118,  -125,  -126,  -129,  -136,  -131,
  -119,  -135,  -133,  -130,  -120,  -132,  -128,    -5,  -221,  -112,
  -121,  -122,  -221,  -139,  -221,  -143,  -221,   -89,  -221,   -75,
  -163,  -221,  -166,  -221,  -221,  -187,  -208,  -221,  -170,  -221,
  -198,  -199,  -200,   -67,   -68,   -64,   -62,   -37,  -221,   -91,
   -51,   -92,   -98,   -52,   -93,  -221,  -173,   -31,  -105,  -221,
  -148,  -207,  -203,  -220,   -99,  -107,  -214,  -211,  -215,  -112,
  -221,  -221,  -111,  -140,  -138,  -221,  -221,   -50,  -207,   -49,
   -73,  -165,  -193,  -191,  -190,  -188,  -221,  -168,   -56,  -172,
  -150,  -206,  -221,  -221,  -110,  -113,  -221,  -144,  -221,   -71,
  -167,  -147,  -149,  -221,  -115,  -221,  -142,  -114,  -141 ]

racc_goto_table = [
    14,    16,    70,   105,   128,   141,   288,    13,   128,   132,
   217,    22,   256,   132,   236,   205,    39,    94,   110,   240,
    68,   174,    14,    16,   204,   157,   209,    51,   301,    13,
   170,   201,    63,   197,    24,   293,   146,   254,   342,    69,
   112,   111,    14,   117,   292,   135,   115,   116,   145,   144,
    14,   117,   126,   363,   115,   125,    90,   198,   199,   195,
   325,   119,    42,   255,   203,   316,    50,   138,   206,   119,
   196,   296,   295,   114,   331,   298,   210,   259,   249,   220,
   120,    46,   128,    62,   153,   114,    55,   132,   364,   307,
   156,   243,   215,   216,    60,   322,   154,   310,   169,    18,
   160,   nil,   nil,   nil,   nil,   nil,   nil,   318,   nil,   199,
   250,   330,   259,   nil,   168,   253,   nil,   nil,   234,   206,
   nil,   251,   104,   225,   107,   nil,   nil,   nil,   nil,   nil,
   145,   nil,   nil,   343,   nil,   nil,   254,   nil,   nil,   nil,
   nil,   122,   123,   124,   199,   250,   127,   nil,   208,   nil,
   253,   nil,   nil,   nil,   206,   263,   251,   nil,   nil,   nil,
   222,   nil,   nil,   nil,   242,   nil,   252,   nil,   nil,   nil,
   295,   nil,   nil,   nil,   158,   nil,   259,   265,   266,   nil,
   128,   nil,   373,   nil,   375,   132,   nil,   174,   nil,   nil,
    14,    16,   328,   166,   167,   300,   336,    13,   nil,   208,
   193,   252,   nil,   354,   362,   nil,   205,   nil,   199,   250,
   259,   nil,    14,    16,   253,   204,   372,   209,   206,    13,
   251,   369,   201,   367,   350,   319,    60,    60,   nil,   145,
   nil,   nil,   nil,   nil,   208,   nil,   311,   nil,   nil,   nil,
   nil,   254,   199,   250,    14,    16,   348,   nil,   253,   199,
   195,    13,   206,   nil,   251,   203,   262,   nil,   280,   206,
   nil,   196,   284,   259,   nil,   252,   nil,    70,   nil,   272,
   273,   274,   275,   276,   277,   278,   279,   nil,   281,   282,
   283,   259,   285,   286,   nil,   290,   291,    14,    16,   nil,
   nil,   nil,   nil,   nil,    13,   199,   250,   nil,   208,   252,
   nil,   253,   nil,   nil,   nil,   206,   nil,   251,   nil,    14,
    16,   nil,   nil,   199,   250,   365,    13,   313,   314,   253,
   356,   360,   nil,   206,   nil,   251,   nil,   317,   nil,   nil,
   nil,   321,   208,   nil,   nil,   324,    70,   nil,   nil,   208,
   nil,   158,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   252,   nil,   nil,   nil,    14,    16,   nil,   nil,
   nil,   nil,   nil,    13,   nil,   338,    14,    16,    14,    16,
   252,   nil,   nil,    13,   nil,    13,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   208,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   352,   353,   nil,
   nil,   nil,   nil,   208,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   104 ]

racc_goto_check = [
    44,    23,     4,    61,    30,    42,     5,    55,    30,    34,
    84,     2,    70,    34,    43,    36,    39,    26,    72,    43,
    44,    29,    44,    23,    35,    59,    29,    39,     5,    55,
    87,    33,    80,    53,     3,    66,    45,    68,    62,     6,
    74,    73,    44,    23,    65,    48,     8,    21,    56,    48,
    44,    23,    74,    28,     8,    21,    25,    42,    32,    30,
     5,     6,    22,    69,    34,    49,    22,    24,    37,     6,
    31,    43,    68,     3,    71,    41,    40,    29,    60,    75,
    76,    77,    30,    78,    79,     3,    47,    34,    62,    43,
    24,    81,    82,    83,    64,    58,     3,    85,    86,     1,
    24,   nil,   nil,   nil,   nil,   nil,   nil,    43,   nil,    32,
    30,    70,    29,   nil,    24,    34,   nil,   nil,    45,    37,
   nil,    31,    27,    48,    27,   nil,   nil,   nil,   nil,   nil,
    56,   nil,   nil,    66,   nil,   nil,    68,   nil,   nil,   nil,
   nil,    27,    27,    27,    32,    30,    27,   nil,    38,   nil,
    34,   nil,   nil,   nil,    37,    26,    31,   nil,   nil,   nil,
     3,   nil,   nil,   nil,    80,   nil,    55,   nil,   nil,   nil,
    68,   nil,   nil,   nil,    27,   nil,    29,    24,    24,   nil,
    30,   nil,     5,   nil,     5,    34,   nil,    29,   nil,   nil,
    44,    23,    59,    27,    27,    72,    87,    55,   nil,    38,
    27,    55,   nil,    84,    43,   nil,    36,   nil,    32,    30,
    29,   nil,    44,    23,    34,    35,    70,    29,    37,    55,
    31,    43,    33,    68,    53,    56,    64,    64,   nil,    56,
   nil,   nil,   nil,   nil,    38,   nil,    39,   nil,   nil,   nil,
   nil,    68,    32,    30,    44,    23,    42,   nil,    34,    32,
    30,    55,    37,   nil,    31,    34,    27,   nil,    64,    37,
   nil,    31,    64,    29,   nil,    55,   nil,     4,   nil,    27,
    27,    27,    27,    27,    27,    27,    27,   nil,    27,    27,
    27,    29,    27,    27,   nil,    27,    27,    44,    23,   nil,
   nil,   nil,   nil,   nil,    55,    32,    30,   nil,    38,    55,
   nil,    34,   nil,   nil,   nil,    37,   nil,    31,   nil,    44,
    23,   nil,   nil,    32,    30,    61,    55,    27,    27,    34,
     2,    26,   nil,    37,   nil,    31,   nil,    27,   nil,   nil,
   nil,    27,    38,   nil,   nil,    27,     4,   nil,   nil,    38,
   nil,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    55,   nil,   nil,   nil,    44,    23,   nil,   nil,
   nil,   nil,   nil,    55,   nil,    27,    44,    23,    44,    23,
    55,   nil,   nil,    55,   nil,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,    27,   nil,
   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    27 ]

racc_goto_pointer = [
   nil,    99,    11,    34,   -20,  -184,    19,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     5,    57,     1,    13,    31,    -8,    94,  -278,   -82,
   -49,   -38,   -50,   -77,   -44,   -84,   -93,   -40,    40,    15,
   -32,  -135,   -51,  -127,     0,   -22,   nil,    72,    -8,  -164,
   nil,   nil,   nil,   -75,   nil,     7,   -10,   nil,  -144,   -55,
   -80,   -25,  -251,   nil,    75,  -150,  -159,   nil,  -122,   -96,
  -147,  -184,   -16,     7,     1,   -47,    34,    74,    64,    22,
    13,   -61,   -21,   -20,  -103,  -124,    -5,   -73,   nil ]

racc_goto_default = [
   nil,   nil,   287,   133,    27,   nil,    33,    36,     4,     6,
    10,    15,    17,    21,    23,    26,    29,    32,    35,     3,
     5,     9,   nil,    83,   nil,   nil,   102,   139,   233,    97,
    71,    73,    76,    82,    84,    86,    89,    93,    95,    31,
   nil,   nil,   nil,   nil,    79,   nil,    20,   nil,   nil,   136,
   229,   137,   129,   nil,   200,    78,   142,   147,   148,   nil,
   nil,   nil,   nil,    98,    72,   nil,   nil,   294,    85,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   171 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :STRING => 2,
 :DQPRE => 3,
 :DQMID => 4,
 :DQPOST => 5,
 :LBRACK => 6,
 :RBRACK => 7,
 :LBRACE => 8,
 :RBRACE => 9,
 :SYMBOL => 10,
 :FARROW => 11,
 :COMMA => 12,
 :TRUE => 13,
 :FALSE => 14,
 :EQUALS => 15,
 :APPENDS => 16,
 :LESSEQUAL => 17,
 :NOTEQUAL => 18,
 :DOT => 19,
 :COLON => 20,
 :LLCOLLECT => 21,
 :RRCOLLECT => 22,
 :QMARK => 23,
 :LPAREN => 24,
 :RPAREN => 25,
 :ISEQUAL => 26,
 :GREATEREQUAL => 27,
 :GREATERTHAN => 28,
 :LESSTHAN => 29,
 :IF => 30,
 :ELSE => 31,
 :IMPORT => 32,
 :DEFINE => 33,
 :ELSIF => 34,
 :VARIABLE => 35,
 :CLASS => 36,
 :INHERITS => 37,
 :NODE => 38,
 :BOOLEAN => 39,
 :NAME => 40,
 :SEMIC => 41,
 :CASE => 42,
 :DEFAULT => 43,
 :AT => 44,
 :LCOLLECT => 45,
 :RCOLLECT => 46,
 :CLASSREF => 47,
 :NOT => 48,
 :OR => 49,
 :AND => 50,
 :UNDEF => 51,
 :PARROW => 52,
 :PLUS => 53,
 :MINUS => 54,
 :TIMES => 55,
 :DIV => 56,
 :LSHIFT => 57,
 :RSHIFT => 58,
 :UMINUS => 59,
 :MATCH => 60,
 :NOMATCH => 61,
 :REGEX => 62,
 :IN_EDGE => 63,
 :OUT_EDGE => 64,
 :IN_EDGE_SUB => 65,
 :OUT_EDGE_SUB => 66,
 :IN => 67,
 :CLOUDRES => 68 }

racc_use_result_var = true

racc_nt_base = 69

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'STRING',
'DQPRE',
'DQMID',
'DQPOST',
'LBRACK',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'MATCH',
'NOMATCH',
'REGEX',
'IN_EDGE',
'OUT_EDGE',
'IN_EDGE_SUB',
'OUT_EDGE_SUB',
'IN',
'CLOUDRES',
'$start',
'program',
'statements_and_declarations',
'nil',
'statement_or_declaration',
'statements',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement_begin',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'cloudres',
'resourceoverride',
'append',
'relationship',
'relationship_side',
'edge',
'resourceref',
'expressions',
'funcvalues',
'rvalue',
'expression',
'comma',
'quotedtext',
'name',
'type',
'boolean',
'selector',
'variable',
'array',
'hasharrayaccesses',
'funcrvalue',
'undef',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'resourceinst',
'resourcename',
'hasharrayaccess',
'param',
'addparam',
'anyparam',
'dqrval',
'dqtail',
'ifstatement',
'else',
'hash',
'regex',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'string',
'strings',
'argumentlist',
'classparent',
'cloudname',
'@1',
'hostnames',
'nodeparent',
'nodename',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault',
'hashpairs',
'hashpair',
'key']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

module_eval <<'.,.,', 'grammar.ra', 37
  def _reduce_3( val, _values, result )
    result = ast AST::ASTArray, :children => (val[0] ? [val[0]] : [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 43
  def _reduce_4( val, _values, result )
    if val[1]
      val[0].push(val[1])
    end
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 55
  def _reduce_5( val, _values, result )
  val[0].each do |stmt|
    if stmt.is_a?(AST::TopLevelConstruct)
      error "Classes, definitions, and nodes may only appear at toplevel or inside other classes", \
          :line => stmt.context[:line], :file => stmt.context[:file]
    end
  end
  result = val[0]
   result
  end
.,.,

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

 # reduce 20 omitted

module_eval <<'.,.,', 'grammar.ra', 76
  def _reduce_21( val, _values, result )
  result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 79
  def _reduce_22( val, _values, result )
    result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

 # reduce 23 omitted

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_30( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 98
  def _reduce_31( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_32( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 111
  def _reduce_33( val, _values, result )
    result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[1],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 112
  def _reduce_34( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 118
  def _reduce_35( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 119
  def _reduce_36( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 120
  def _reduce_37( val, _values, result )
 result = val[0].push(val[2])
   result
  end
.,.,

 # reduce 38 omitted

 # reduce 39 omitted

 # reduce 40 omitted

 # reduce 41 omitted

 # reduce 42 omitted

 # reduce 43 omitted

 # reduce 44 omitted

 # reduce 45 omitted

 # reduce 46 omitted

 # reduce 47 omitted

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 138
  def _reduce_49( val, _values, result )
  @lexer.commentpop
  result = ast(AST::Resource, :type => val[0], :instances => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 141
  def _reduce_50( val, _values, result )
  # This is a deprecated syntax.
  error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 145
  def _reduce_51( val, _values, result )
  # a defaults setting for a type
  @lexer.commentpop
  result = ast(AST::ResourceDefaults, :type => val[0], :parameters => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 151
  def _reduce_52( val, _values, result )
  @lexer.commentpop
  result = ast AST::ResourceOverride, :object => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 170
  def _reduce_53( val, _values, result )
  type = val[0]

  if (type == :exported and ! Puppet[:storeconfigs])
    Puppet.warning addcontext("You cannot collect without storeconfigs being set")
  end

  error "Defaults are not virtualizable" if val[1].is_a? AST::ResourceDefaults

  method = type.to_s + "="

  # Just mark our resource as exported and pass it through.
  val[1].send(method, true)

  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 171
  def _reduce_54( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 172
  def _reduce_55( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 195
  def _reduce_56( val, _values, result )
  @lexer.commentpop
  Puppet.warning addcontext("Collection names must now be capitalized") if val[0] =~ /^[a-z]/
  type = val[0].downcase
  args = {:type => type}

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  args[:override] = val[3]
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 214
  def _reduce_57( val, _values, result )
    if val[0] =~ /^[a-z]/
    Puppet.warning addcontext("Collection names must now be capitalized")
  end
  type = val[0].downcase
  args = {:type => type }

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 224
  def _reduce_58( val, _values, result )
  if val[1]
    result = val[1]
    result.form = :virtual
  else
    result = :virtual
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 232
  def _reduce_59( val, _values, result )
    if val[1]
    result = val[1]
    result.form = :exported
  else
    result = :exported
  end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_62( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 63 omitted

module_eval <<'.,.,', 'grammar.ra', 246
  def _reduce_64( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 247
  def _reduce_65( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 248
  def _reduce_66( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 255
  def _reduce_67( val, _values, result )
  result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
  #result = ast AST::CollExpr
  #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 260
  def _reduce_68( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 267
  def _reduce_71( val, _values, result )
  result = ast AST::ResourceInstance, :title => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 268
  def _reduce_72( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_73( val, _values, result )
    val[0].push val[2]
    result = val[0]
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

module_eval <<'.,.,', 'grammar.ra', 280
  def _reduce_76( val, _values, result )
  result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 284
  def _reduce_77( val, _values, result )
  result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 288
  def _reduce_78( val, _values, result )
  result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

module_eval <<'.,.,', 'grammar.ra', 303
  def _reduce_86( val, _values, result )
  raise Puppet::ParseError, "Cannot assign to variables in other namespaces" if val[0][:value] =~ /::/
  # this is distinct from referencing a variable
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 306
  def _reduce_87( val, _values, result )
    result = ast AST::VarDef, :name => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_88( val, _values, result )
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_89( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_90( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 321
  def _reduce_91( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 325
  def _reduce_92( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 330
  def _reduce_93( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
    :add => true
   result
  end
.,.,

 # reduce 94 omitted

 # reduce 95 omitted

module_eval <<'.,.,', 'grammar.ra', 338
  def _reduce_96( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 338
  def _reduce_97( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 343
  def _reduce_98( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 351
  def _reduce_99( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => val[2],
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 356
  def _reduce_100( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 357
  def _reduce_101( val, _values, result )
 result = ast AST::String, :value => val[0][:value],                  :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 358
  def _reduce_102( val, _values, result )
 result = ast AST::Concat, :value => [ast(AST::String,val[0])]+val[1], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 360
  def _reduce_103( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 362
  def _reduce_104( val, _values, result )
 result = [ast(AST::String,val[0])]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 363
  def _reduce_105( val, _values, result )
 result = [ast(AST::String,val[0])] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 368
  def _reduce_106( val, _values, result )
  result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 373
  def _reduce_107( val, _values, result )
  Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
  result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 375
  def _reduce_108( val, _values, result )
  result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 379
  def _reduce_109( val, _values, result )
  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_110( val, _values, result )
  @lexer.commentpop
  args = {
    :test => val[0],
    :statements => val[2]
  }

  args[:else] = val[4] if val[4]

  result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 402
  def _reduce_111( val, _values, result )
    @lexer.commentpop
    args = {
      :test => val[0],
      :statements => ast(AST::Nop)
  }

  args[:else] = val[3] if val[3]

  result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 407
  def _reduce_113( val, _values, result )
    result = ast AST::Else, :statements => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 411
  def _reduce_114( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 415
  def _reduce_115( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 116 omitted

 # reduce 117 omitted

module_eval <<'.,.,', 'grammar.ra', 433
  def _reduce_118( val, _values, result )
    result = ast AST::InOperator, :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 436
  def _reduce_119( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 439
  def _reduce_120( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 442
  def _reduce_121( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 445
  def _reduce_122( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 448
  def _reduce_123( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 451
  def _reduce_124( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_125( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 457
  def _reduce_126( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 460
  def _reduce_127( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 463
  def _reduce_128( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 466
  def _reduce_129( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 469
  def _reduce_130( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 472
  def _reduce_131( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 475
  def _reduce_132( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 478
  def _reduce_133( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 481
  def _reduce_134( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_135( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 487
  def _reduce_136( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 490
  def _reduce_137( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 495
  def _reduce_138( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseStatement, :test => val[1], :options => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_139( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 501
  def _reduce_140( val, _values, result )
    val[0].push val[1]
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_141( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 515
  def _reduce_142( val, _values, result )
  @lexer.commentpop

    result = ast(
    AST::CaseOpt,
    :value => val[0],

    :statements => ast(AST::ASTArray)
  )
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 516
  def _reduce_143( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 521
  def _reduce_144( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 525
  def _reduce_145( val, _values, result )
  result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 146 omitted

module_eval <<'.,.,', 'grammar.ra', 531
  def _reduce_147( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 541
  def _reduce_149( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
    val[0].push(val[2])
    result = val[0]
  else
    result = ast AST::ASTArray, :children => [val[0],val[2]]
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 545
  def _reduce_150( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 151 omitted

 # reduce 152 omitted

 # reduce 153 omitted

 # reduce 154 omitted

 # reduce 155 omitted

 # reduce 156 omitted

 # reduce 157 omitted

 # reduce 158 omitted

module_eval <<'.,.,', 'grammar.ra', 557
  def _reduce_159( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 160 omitted

module_eval <<'.,.,', 'grammar.ra', 560
  def _reduce_161( val, _values, result )
 result = [val[0][:value]]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 562
  def _reduce_163( val, _values, result )
 result = val[0] += val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 571
  def _reduce_164( val, _values, result )
  val[1].each do |file|
    import(file)
  end

  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 583
  def _reduce_165( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :code => val[4],
                                                                       :line => val[0][:line]))
  @lexer.indefine = false

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_166( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :line => val[0][:line]))
  @lexer.indefine = false
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 598
  def _reduce_167( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :code => val[5], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 605
  def _reduce_168( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 607
  def _reduce_169( val, _values, result )
puts "Parsing a cloudres"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 613
  def _reduce_170( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Cloudres.new(val[1],
                                             ast_context(true).merge(:code => val[3],
                                                                     :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 613
  def _reduce_171( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 624
  def _reduce_172( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1],
                                         ast_context(true).merge(:parent => val[2], :code => val[4],
                                                                 :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 627
  def _reduce_173( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1], ast_context(true).merge(:parent => val[2], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 628
  def _reduce_174( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 630
  def _reduce_175( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 631
  def _reduce_176( val, _values, result )
 result = "class"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 638
  def _reduce_177( val, _values, result )
    result = [result]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 642
  def _reduce_178( val, _values, result )
    result = val[0]
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 646
  def _reduce_179( val, _values, result )
  result = ast AST::HostName, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 647
  def _reduce_180( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 648
  def _reduce_181( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 649
  def _reduce_182( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 183 omitted

module_eval <<'.,.,', 'grammar.ra', 655
  def _reduce_184( val, _values, result )
  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 659
  def _reduce_185( val, _values, result )
  result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 186 omitted

module_eval <<'.,.,', 'grammar.ra', 664
  def _reduce_187( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 668
  def _reduce_188( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 189 omitted

module_eval <<'.,.,', 'grammar.ra', 675
  def _reduce_190( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 680
  def _reduce_191( val, _values, result )
  Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 684
  def _reduce_192( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 686
  def _reduce_193( val, _values, result )
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 688
  def _reduce_194( val, _values, result )
  result = [val[0][:value]]
   result
  end
.,.,

 # reduce 195 omitted

module_eval <<'.,.,', 'grammar.ra', 693
  def _reduce_196( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 197 omitted

module_eval <<'.,.,', 'grammar.ra', 698
  def _reduce_198( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 199 omitted

 # reduce 200 omitted

module_eval <<'.,.,', 'grammar.ra', 704
  def _reduce_201( val, _values, result )
  result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 705
  def _reduce_202( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 706
  def _reduce_203( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 707
  def _reduce_204( val, _values, result )
 result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 205 omitted

 # reduce 206 omitted

 # reduce 207 omitted

module_eval <<'.,.,', 'grammar.ra', 713
  def _reduce_208( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 718
  def _reduce_209( val, _values, result )
  result = ast AST::Regex, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 726
  def _reduce_210( val, _values, result )
  if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 733
  def _reduce_211( val, _values, result )
    if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 735
  def _reduce_212( val, _values, result )
  result = ast AST::ASTHash
   result
  end
.,.,

 # reduce 213 omitted

module_eval <<'.,.,', 'grammar.ra', 745
  def _reduce_214( val, _values, result )
    if val[0].instance_of?(AST::ASTHash)
    result = val[0].merge(val[2])
  else
    result = ast AST::ASTHash, :value => val[0]
    result.merge(val[2])
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 749
  def _reduce_215( val, _values, result )
  result = ast AST::ASTHash, { :value => { val[0] => val[2] } }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 750
  def _reduce_216( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 751
  def _reduce_217( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 756
  def _reduce_218( val, _values, result )
  result = ast AST::HashOrArrayAccess, :variable => val[0][:value], :key => val[2]
   result
  end
.,.,

 # reduce 219 omitted

module_eval <<'.,.,', 'grammar.ra', 761
  def _reduce_220( val, _values, result )
    result = ast AST::HashOrArrayAccess, :variable => val[0], :key => val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
